[Version:1]
DocumentationLibrary 
{
	var Classes = Array
	{
		ClassDoc
		{
			var Name = "Action"
			var BaseClass = "ReferenceCountedEventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Completed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Started"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Cancel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCompleted"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStarted"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CollisionFilter"
			var BaseClass = "SafeId32EventObject"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "CollisionFlag"
					var Type = "CollisionFilterCollisionFlags"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CollisionGroupA"
					var Type = "CollisionGroup"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CollisionGroupB"
					var Type = "CollisionGroup"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCollisionFlag"
					var Description = ""
					var ReturnType = "CollisionFilterCollisionFlags"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCollisionFlag"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CollisionFilterCollisionFlags"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCollisionGroupA"
					var Description = ""
					var ReturnType = "CollisionGroup"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCollisionGroupB"
					var Description = ""
					var ReturnType = "CollisionGroup"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CollisionFilter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MicrophoneInputNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Volume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SpriteSource"
			var BaseClass = "Resource"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "FrameCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetFrameCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFrameCount"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSize"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOrigin"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "IndexedHalfEdgeMeshEdgeArray"
			var BaseClass = "SafeId32Object"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "IndexedHalfEdgeMeshEdgeArrayRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "IndexedHalfEdge"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "IndexedHalfEdgeMeshEdgeArrayRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Mesh"
			var BaseClass = "Resource"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Vertices"
					var Type = "VertexBuffer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Indices"
					var Type = "IndexBuffer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "PrimitiveType"
					var Type = "PrimitiveType"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CreateRuntime"
					var Description = ""
					var ReturnType = "Mesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetVertices"
					var Description = ""
					var ReturnType = "VertexBuffer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIndices"
					var Description = ""
					var ReturnType = "IndexBuffer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPrimitiveType"
					var Description = ""
					var ReturnType = "PrimitiveType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPrimitiveType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "PrimitiveType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Upload"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SplineControlPoint"
			var BaseClass = ""
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Position"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPosition"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SplineControlPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SplineControlPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AnyType"
			var BaseClass = "Type"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "SoundAttenuator"
			var BaseClass = "DataResource"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "StartDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StopDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MinAttenuatedVolume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseLowPassFilter"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LowPassStartDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LowPassCutoffFreq"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FalloffCurveType"
					var Type = "FalloffCurveType"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FalloffCurve"
					var Type = "SampleCurve"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetStartDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStartDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStopDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStopDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMinAttenuatedVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMinAttenuatedVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseLowPassFilter"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseLowPassFilter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLowPassStartDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLowPassStartDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLowPassCutoffFreq"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLowPassCutoffFreq"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFalloffCurveType"
					var Description = ""
					var ReturnType = "FalloffCurveType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFalloffCurveType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "FalloffCurveType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFalloffCurve"
					var Description = ""
					var ReturnType = "SampleCurve"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFalloffCurve"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SampleCurve"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ProjectSettings"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ProjectName"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ProjectFolder"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ContentFolder"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "EditorContentFolder"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ProjectOwner"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AutoTakeProjectScreenshot"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetProjectName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProjectFolder"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContentFolder"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEditorContentFolder"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProjectOwner"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetProjectOwner"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoTakeProjectScreenshot"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoTakeProjectScreenshot"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ProjectSettings"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProjectName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProjectFolder"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContentFolder"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEditorContentFolder"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProjectOwner"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetProjectOwner"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoTakeProjectScreenshot"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoTakeProjectScreenshot"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ProjectSettings"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "FlowEffect"
			var BaseClass = "PhysicsEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalForce"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AttractToFlowCenter"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FlowSpeed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxFlowForce"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FlowDirection"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldFlowDirection"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "AttractSpeed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxAttractForce"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalForce"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalForce"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttractToFlowCenter"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttractToFlowCenter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFlowSpeed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFlowSpeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxFlowForce"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxFlowForce"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFlowDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFlowDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldFlowDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttractSpeed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttractSpeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxAttractForce"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxAttractForce"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FlowEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ConvexMeshCollider"
			var BaseClass = "Collider"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ConvexMesh"
					var Type = "ConvexMesh"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetConvexMesh"
					var Description = ""
					var ReturnType = "ConvexMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetConvexMesh"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "ConvexMesh"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ConvexMeshCollider"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AudioFloatDataEvent"
			var BaseClass = "Event"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Channels"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AudioData"
					var Type = "Array[Real]"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetChannels"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetChannels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAudioData"
					var Description = ""
					var ReturnType = "Array[Real]"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAudioData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Array[Real]"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MultiConvexMesh"
			var BaseClass = "Resource"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Modified"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Valid"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Vertices"
					var Type = "MultiConvexMeshVertexData"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SubMeshes"
					var Type = "MultiConvexMeshSubMeshData"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CreateRuntime"
					var Description = ""
					var ReturnType = "MultiConvexMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RuntimeClone"
					var Description = ""
					var ReturnType = "MultiConvexMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetModified"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetValid"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Validate"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "throwExceptionIfInvalid"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UpdateAndNotifyIfModified"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVertices"
					var Description = ""
					var ReturnType = "MultiConvexMeshVertexData"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSubMeshes"
					var Description = ""
					var ReturnType = "MultiConvexMeshSubMeshData"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "BaseSprite"
			var BaseClass = "Graphical"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "VertexColor"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "GeometryMode"
					var Type = "SpriteGeometryMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVertexColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVertexColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGeometryMode"
					var Description = ""
					var ReturnType = "SpriteGeometryMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGeometryMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SpriteGeometryMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ForceEffect"
			var BaseClass = "BasicDirectionEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "ForceEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Font"
			var BaseClass = "Resource"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "StickJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Length"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StickJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ResourceTableEntry"
			var BaseClass = ""
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Value"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Weight"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Resource"
					var Type = "Resource"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ResourceType"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetName"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetValue"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWeight"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWeight"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetResource"
					var Description = ""
					var ReturnType = "Resource"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetResource"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Resource"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetResourceType"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetResourceType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clone"
					var Description = ""
					var ReturnType = "ResourceTableEntry"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ResourceTableEntry"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ResourceTableEntry"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "ResourceTableEntry"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AudioSettings"
			var BaseClass = "Component"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SystemVolume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MixType"
					var Type = "AudioMixTypes"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MinVolumeThreshold"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LatencySetting"
					var Type = "AudioLatency"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSystemVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSystemVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMixType"
					var Description = ""
					var ReturnType = "AudioMixTypes"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMixType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "AudioMixTypes"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMinVolumeThreshold"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMinVolumeThreshold"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLatencySetting"
					var Description = ""
					var ReturnType = "AudioLatency"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLatencySetting"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "AudioLatency"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AudioSettings"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CustomPhysicsEffectEvent"
			var BaseClass = "Event"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Dt"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Effect"
					var Type = "CustomPhysicsEffect"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RigidBody"
					var Type = "RigidBody"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetDt"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDt"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEffect"
					var Description = ""
					var ReturnType = "CustomPhysicsEffect"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CustomPhysicsEffect"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRigidBody"
					var Description = ""
					var ReturnType = "RigidBody"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRigidBody"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "RigidBody"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CustomPhysicsEffectEvent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "StreamCapabilities"
			var BaseClass = "Enum"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "None"
					var Type = "StreamCapabilities"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Read"
					var Type = "StreamCapabilities"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Write"
					var Type = "StreamCapabilities"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Seek"
					var Type = "StreamCapabilities"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "GetCount"
					var Type = "StreamCapabilities"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "SetCount"
					var Type = "StreamCapabilities"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetNone"
					var Description = ""
					var ReturnType = "StreamCapabilities"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetRead"
					var Description = ""
					var ReturnType = "StreamCapabilities"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetWrite"
					var Description = ""
					var ReturnType = "StreamCapabilities"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSeek"
					var Description = ""
					var ReturnType = "StreamCapabilities"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetGetCount"
					var Description = ""
					var ReturnType = "StreamCapabilities"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSetCount"
					var Description = ""
					var ReturnType = "StreamCapabilities"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "GridDraw"
			var BaseClass = "Component"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Axis"
					var Type = "AxisDirection"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CellSize"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Lines"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HighlightInterval"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "GridColor"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "GridHighlight"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HalfCellOffset"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DrawAxisOrigins"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AlwaysDrawInEditor"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DrawInGame"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FollowEditorCamera"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAxis"
					var Description = ""
					var ReturnType = "AxisDirection"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "AxisDirection"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCellSize"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCellSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLines"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLines"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHighlightInterval"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHighlightInterval"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGridColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGridColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGridHighlight"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGridHighlight"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHalfCellOffset"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHalfCellOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDrawAxisOrigins"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDrawAxisOrigins"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAlwaysDrawInEditor"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAlwaysDrawInEditor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDrawInGame"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDrawInGame"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFollowEditorCamera"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFollowEditorCamera"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GridDraw"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MultiConvexMeshIndexData"
			var BaseClass = "SafeId32Object"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "MultiConvexMeshIndexRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Add"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "MultiConvexMeshIndexRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "IpAddress"
			var BaseClass = ""
			var Library = "MetaLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "IsValid"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "InternetProtocol"
					var Type = "InternetProtocol"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "String"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Hash"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Host"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Port"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PortString"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsValid"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInternetProtocol"
					var Description = ""
					var ReturnType = "InternetProtocol"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetString"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHash"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHost"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHost"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPort"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPort"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPortString"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IpAddress"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IpAddress"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "IpAddress"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IpAddress"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "InternetProtocol"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IpAddress"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "JointEvent"
			var BaseClass = "Event"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ObjectA"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ObjectB"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "JointCog"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Joint"
					var Type = "Joint"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetObjectA"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObjectB"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJointCog"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJoint"
					var Description = ""
					var ReturnType = "Joint"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Quaternion"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XW"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YW"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZW"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WW"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Y"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Z"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "W"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Identity"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXW"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYW"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWW"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetIdentity"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXYZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZW"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetY"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZ"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetW"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "PanningNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SumToMono"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LeftVolume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RightVolume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSumToMono"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSumToMono"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLeftVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLeftVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRightVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRightVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateLeftVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "volume"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "time"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateRightVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "volume"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "time"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateVolumes"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "leftVolume"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "rightVolume"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "time"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DocumentResource"
			var BaseClass = "Resource"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "UprightJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalAxisA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxisB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalAxisA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxisB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UprightJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Real4x4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M03"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M13"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M23"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M30"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M31"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M32"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M33"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM03"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM03"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM13"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM13"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM23"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM23"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM30"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM30"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM31"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM31"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM32"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM32"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM33"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM33"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m03"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m13"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m23"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m30"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m31"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m32"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m33"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "NetPeerReceivedConnectRequest"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirRequestBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirPendingUserAddRequestCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ReturnOurConnectResponse"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReturnOurResponseBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirRequestBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirPendingUserAddRequestCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReturnOurConnectResponse"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReturnOurConnectResponse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReturnOurResponseBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReturnOurResponseBundle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "EventBundle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Exception"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Message"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMessage"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMessage"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Exception"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Exception"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Gamepads"
			var BaseClass = "EventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "MaxGamepadCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "PauseVibration"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ResumeVibration"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGamePad"
					var Description = ""
					var ReturnType = "Gamepad"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "gamepadIndex"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxGamepadCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "GamepadsUpdated"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"Gamepads"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ManipulatorJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TargetPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTargetPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTargetPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ManipulatorJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "TorqueEffect"
			var BaseClass = "PhysicsEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalTorque"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TorqueStrength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TorqueAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldTorqueAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalTorque"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalTorque"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTorqueStrength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTorqueStrength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTorqueAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTorqueAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldTorqueAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TorqueEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DebugBox"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Position"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HalfExtents"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Rotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Filled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHalfExtents"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHalfExtents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFilled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFilled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugBox"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugBox"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugBox"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugBox"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "rotation"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugBox"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "rotation"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugBox"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "aabb"
							var Type = "Aabb"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Boolean2x4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M03"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M13"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM03"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM03"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM13"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM13"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m03"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m13"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "UserConfig"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "UserName"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UserEmail"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetUserName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUserName"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUserEmail"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUserEmail"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UserConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "BuoyancyEffect"
			var BaseClass = "PhysicsEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Density"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Gravity"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Detail"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DebugDrawRuntime"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetDensity"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDensity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGravity"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGravity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDetail"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDetail"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDebugDrawRuntime"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDebugDrawRuntime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "BuoyancyEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SkinnedModel"
			var BaseClass = "Graphical"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Mesh"
					var Type = "Mesh"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SkeletonPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMesh"
					var Description = ""
					var ReturnType = "Mesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMesh"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Mesh"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSkeletonPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSkeletonPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SkinnedModel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "StreamOrigin"
			var BaseClass = "Enum"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Start"
					var Type = "StreamOrigin"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Current"
					var Type = "StreamOrigin"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "End"
					var Type = "StreamOrigin"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetStart"
					var Description = ""
					var ReturnType = "StreamOrigin"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "StreamOrigin"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetEnd"
					var Description = ""
					var ReturnType = "StreamOrigin"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "IgnoreSpaceEffects"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "IgnoreDrag"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreFlow"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreForce"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreGravity"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnorePointForce"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnorePointGravity"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreThrust"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreVortex"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreWind"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreTorque"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreBuoyancy"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreCustom"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetIgnoreDrag"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreDrag"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreFlow"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreFlow"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreForce"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreForce"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreGravity"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreGravity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnorePointForce"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnorePointForce"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnorePointGravity"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnorePointGravity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreThrust"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreThrust"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreVortex"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreVortex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreWind"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreWind"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreTorque"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreTorque"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreBuoyancy"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreBuoyancy"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreCustom"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreCustom"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreState"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "effectType"
							var Type = "PhysicsEffectType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreState"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "effectType"
							var Type = "PhysicsEffectType"
							var Description = ""
						}
						Parameter
						{
							var Name = "ignore"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IgnoreSpaceEffects"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ConsoleEvent"
			var BaseClass = "EventData"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "SpriteText"
			var BaseClass = "BaseSprite"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Text"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Font"
					var Type = "Font"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FontSize"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PixelsPerUnit"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TextAlign"
					var Type = "TextAlign"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetText"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetText"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFont"
					var Description = ""
					var ReturnType = "Font"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFont"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Font"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFontSize"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFontSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPixelsPerUnit"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPixelsPerUnit"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTextAlign"
					var Description = ""
					var ReturnType = "TextAlign"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTextAlign"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TextAlign"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MeasureText"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MeasureGivenText"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "text"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCharacterPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "characterIndex"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SpriteText"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ReverbNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Length"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WetPercent"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WetValue"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWetPercent"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWetPercent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWetValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWetValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateWetPercent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "percent"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "time"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateWetValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "String"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Empty"
					var Type = "Boolean"
					var Description = "Returns true if the string is emtpy."
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = "Returns true if the string is not empty."
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Begin"
					var Type = "RuneIterator"
					var Description = "Returns the RuneIterator at the start of this string."
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "End"
					var Type = "RuneIterator"
					var Description = "Returns the RuneIterator at the end (one past the last Rune) of this string."
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "All"
					var Type = "StringRange"
					var Description = "Converts the string into a string range."
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ByteCount"
					var Type = "Integer"
					var Description = "Returns the number of bytes in the string."
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = "Returns the number of bytes in the string."
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "SubString"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "RuneIterator"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "RuneIterator"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SubStringFromRuneIndices"
					var Description = "Creates a substring from start and end indices. WARNING: this may be slow as finding an index for a UTF8 string requires a linear search."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "startIndex"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "endIndex"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = "String operator Get is deprecated. To iterate through a String use a StringRange (.All) or StringIterator (.Begin)."
					var ReturnType = "Rune"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SubStringBytes"
					var Description = "Constructs a substring based upon a number of bytes. WARNING: strings are UTF8 so indexing by bytes could produce unexpected results on non-ascii strings."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "startByteIndex"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "lengthInBytes"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RuneIteratorFromByteIndex"
					var Description = "Finds the iterator from a byte index. WARNING: Strings are UTF8 and constructing an iterator from bytes indices can make an iterator in the middle of a rune."
					var ReturnType = "RuneIterator"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "byteIndex"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RuneIteratorFromRuneIndex"
					var Description = "Finds the iterator from a rune index. WARNING: this may be slow as finding an iterator from rune index requires a linear search."
					var ReturnType = "RuneIterator"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "runeIndex"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBegin"
					var Description = ""
					var ReturnType = "RuneIterator"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEnd"
					var Description = ""
					var ReturnType = "RuneIterator"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByteCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ComputeRuneCount"
					var Description = "Compute the number of runes in the string."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Concatenate"
					var Description = "Combines the two strings into a new string."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Concatenate"
					var Description = "Combines the two string ranges into a new string."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromRune"
					var Description = "Constructs a string from the utf-8 code point of a rune."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromRune"
					var Description = "Constructs a string from a rune."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Rune"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Contains"
					var Description = "Returns if the string Contains the specified substring."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Compare"
					var Description = "Compares the two strings and returns an integer to denote their relative sort order."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "left"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "right"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CompareTo"
					var Description = "Compares this string to the given string and returns an integer to denote their relative sort order."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StartsWith"
					var Description = "Returns if the string starts with the specified substring."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EndsWith"
					var Description = "Returns if the string ends with the specified substring."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TrimStart"
					var Description = "Trims all leading whitespace."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TrimEnd"
					var Description = "Trims all trailing whitespace."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Trim"
					var Description = "Trims all leading and trailing whitespace."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ToLower"
					var Description = "Returns a copy of the string that has been converted to lowercase."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ToUpper"
					var Description = "Returns a copy of the string that has been converted to uppercase."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Replace"
					var Description = "Returns a new string with all occurances of a substrings replaced with another substring."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "oldValue"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "newValue"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindRangeInclusive"
					var Description = "Finds the first StringRange that starts with 'startRange' and ends with 'endRange'. This substring includes 'startRange' and 'endRange'."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "startRange"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "endRange"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindRangeExclusive"
					var Description = "Finds the first StringRange that starts with 'startRange' and ends with 'endRange'. This substring excludes 'startRange' and 'endRange'."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "startRange"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "endRange"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindFirstOf"
					var Description = "Returns a StringRange that Contains the first occurrence of given StringRange."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindLastOf"
					var Description = "Returns a StringRange that Contains the last occurrence of given StringRange."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Join"
					var Description = "Concatenates the given strings with the given separator string."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "separator"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "value0"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "value1"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Join"
					var Description = "Concatenates the given strings with the given separator string."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "separator"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "value0"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "value1"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "value2"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Join"
					var Description = "Concatenates the given strings with the given separator string."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "separator"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "value0"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "value1"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "value2"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "value3"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Split"
					var Description = "Splits the string, according to the separator string, into a range of substrings."
					var ReturnType = "StringSplitRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "separator"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsNullOrEmpty"
					var Description = "Returns if the given string is null or empty."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "IsNullOrWhitespace"
					var Description = "Returns if the given string is null, empty, or all whitespace."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FormatC"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "format"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FormatC"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "format"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FormatC"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "format"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FormatC"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "format"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FormatC"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "format"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FormatC"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "format"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FormatC"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "format"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FormatC"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "format"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FormatC"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "format"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FormatC"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "format"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "PhysicsCarWheel"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PhysicsCarPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpringMinLength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpringStartLength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpringMaxLength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpringRestLength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DriveFactor"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SteerFactor"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Radius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FrequencyHz"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DampingCompressionRatio"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DampingRelaxationRatio"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxSpringForce"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxBrakeStrength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IsDriveWheel"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Is2DWheel"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ForwardStaticFriction"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ForwardDynamicFriction"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SideStaticFriction"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SideDynamicFriction"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "GripScalar"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxSpringCompressionDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxSpringRelaxationDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WheelLocalStartPosition"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PreRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldWheelBasis"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IsInContact"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsSliding"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Rotation"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "RotationalVelocity"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Grip"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NormalImpulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ForwardImpulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SideImpulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SpringLength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ContactedObject"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ContactPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ContactNormal"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldAxleAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldForwardAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldSpringAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldLinearVelocity"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldAngularVelocity"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPhysicsCarPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPhysicsCarPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpringMinLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpringMinLength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpringStartLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpringStartLength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpringMaxLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpringMaxLength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpringRestLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpringRestLength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDriveFactor"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDriveFactor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSteerFactor"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSteerFactor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFrequencyHz"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFrequencyHz"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDampingCompressionRatio"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDampingCompressionRatio"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDampingRelaxationRatio"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDampingRelaxationRatio"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxSpringForce"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxSpringForce"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxBrakeStrength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxBrakeStrength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsDriveWheel"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIsDriveWheel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIs2DWheel"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIs2DWheel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetForwardStaticFriction"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetForwardStaticFriction"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetForwardDynamicFriction"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetForwardDynamicFriction"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSideStaticFriction"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSideStaticFriction"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSideDynamicFriction"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSideDynamicFriction"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGripScalar"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGripScalar"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxSpringCompressionDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxSpringCompressionDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxSpringRelaxationDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxSpringRelaxationDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWheelLocalStartPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWheelLocalStartPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPreRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPreRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldWheelBasis"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldWheelBasis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsInContact"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsSliding"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRotation"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRotationalVelocity"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGrip"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNormalImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetForwardImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSideImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpringLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContactedObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContactPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContactNormal"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldAxleAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldForwardAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldSpringAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldLinearVelocity"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldAngularVelocity"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PhysicsCarWheel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AcquireNetHostInfo"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ReturnHostInfo"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetReturnHostInfo"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReturnHostInfo"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "EventBundle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetPeerReceivedConnectResponse"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurRequestBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurPendingUserAddRequestCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirConnectResponse"
					var Type = "ConnectResponse"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirResponseBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurNetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurRequestBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurPendingUserAddRequestCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirConnectResponse"
					var Description = ""
					var ReturnType = "ConnectResponse"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirResponseBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "OperationQueueEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Operation"
					var Type = "Operation"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetOperation"
					var Description = ""
					var ReturnType = "Operation"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOperation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Operation"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Sphere"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Center"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Radius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Volume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SurfaceArea"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Expand"
					var Description = "Creates a sphere that contains the given sphere and point."
					var ReturnType = "Sphere"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Sphere"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Expand"
					var Description = "Expand this sphere to contain the given point."
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Overlaps"
					var Description = "Does this sphere overlap/intersect the given sphere?"
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Sphere"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSurfaceArea"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Overlap"
					var Description = "This function is deprecated. Use Overlaps instead"
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Sphere"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCenter"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCenter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Sphere"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Sphere"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Sphere"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Sphere"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "center"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radius"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "GraphicalEvent"
			var BaseClass = "Event"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ViewingObject"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetViewingObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewingObject"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ParticleCollisionPlane"
			var BaseClass = "ParticleAnimator"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "PlaneSpace"
					var Type = "SystemSpace"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PlanePosition"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PlaneNormal"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Restitution"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Friction"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPlaneSpace"
					var Description = ""
					var ReturnType = "SystemSpace"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPlaneSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SystemSpace"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPlanePosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPlanePosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPlaneNormal"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPlaneNormal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRestitution"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRestitution"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFriction"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFriction"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ParticleCollisionPlane"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CastFilter"
			var BaseClass = "BaseCastFilter"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "CollisionGroup"
					var Type = "CollisionGroup"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreCog"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CallbackObject"
					var Type = "Object"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CallbackEventName"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCollisionGroup"
					var Description = ""
					var ReturnType = "CollisionGroup"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCollisionGroup"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CollisionGroup"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreCog"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreCog"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCallbackObject"
					var Description = ""
					var ReturnType = "Object"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCallbackObject"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Object"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCallbackEventName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCallbackEventName"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastFilter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastFilter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "CastFilter"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "CastFilterCallback"
					var Type = "CastFilterEvent"
					var Senders = Array
					{
						"CastFilter"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Reactive"
			var BaseClass = "Component"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Reactive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "MouseEnter"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseEnterPreview"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseExit"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseEnterHierarchy"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseExitHierarchy"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseMove"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseUpdate"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseScroll"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "DoubleClick"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseDown"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseUp"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "LeftMouseDown"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "LeftMouseUp"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "RightMouseDown"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "RightMouseUp"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MiddleMouseDown"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MiddleMouseUp"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "LeftClick"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "RightClick"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MiddleClick"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseHold"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseHover"
					var Type = "MouseEvent"
					var Senders = Array
					{
						"Reactive"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "GameEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LevelName"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Game"
					var Type = "GameSession"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Space"
					var Type = "Space"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Handled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLevelName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLevelName"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGame"
					var Description = ""
					var ReturnType = "GameSession"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGame"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "GameSession"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpace"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Space"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHandled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHandled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "JointLimit"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LowerLimit"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UpperLimit"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AtomIds"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLowerLimit"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLowerLimit"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUpperLimit"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUpperLimit"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAtomIds"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAtomIds"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "JointLimit"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "JointLowerLimitReached"
					var Type = "JointEvent"
					var Senders = Array
					{
						"JointLimit"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "JointUpperLimitReached"
					var Type = "JointEvent"
					var Senders = Array
					{
						"JointLimit"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Graphical"
			var BaseClass = "Component"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Visible"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewCulling"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "VisibilityEvents"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OverrideBoundingBox"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAabbCenter"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAabbHalfExtents"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "GroupSortValue"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Material"
					var Type = "Material"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ShaderInputs"
					var Type = "ShaderInputs"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldAabb"
					var Type = "Aabb"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVisible"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVisible"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewCulling"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewCulling"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVisibilityEvents"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVisibilityEvents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOverrideBoundingBox"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOverrideBoundingBox"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAabbCenter"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAabbCenter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAabbHalfExtents"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAabbHalfExtents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGroupSortValue"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGroupSortValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaterial"
					var Description = ""
					var ReturnType = "Material"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaterial"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Material"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetShaderInputs"
					var Description = ""
					var ReturnType = "ShaderInputs"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetShaderInputs"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "ShaderInputs"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldAabb"
					var Description = ""
					var ReturnType = "Aabb"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "EnterView"
					var Type = "GraphicalEvent"
					var Senders = Array
					{
						"Graphical"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "EnterViewAny"
					var Type = "GraphicalEvent"
					var Senders = Array
					{
						"Graphical"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ExitView"
					var Type = "GraphicalEvent"
					var Senders = Array
					{
						"Graphical"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ExitViewAll"
					var Type = "GraphicalEvent"
					var Senders = Array
					{
						"Graphical"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ObjectRotateTool"
			var BaseClass = "ObjectTransformTool"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Snapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapAngle"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AffectTranslation"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AffectRotation"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSnapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapAngle"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapAngle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAffectTranslation"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAffectTranslation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAffectRotation"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAffectRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ObjectRotateTool"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ExceptionEvent"
			var BaseClass = "EventData"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "PhysicsMaterial"
			var BaseClass = "DataResource"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Density"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Restitution"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Friction"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HighPriority"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CreateRuntime"
					var Description = ""
					var ReturnType = "PhysicsMaterial"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RuntimeClone"
					var Description = ""
					var ReturnType = "PhysicsMaterial"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDensity"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDensity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRestitution"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRestitution"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFriction"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFriction"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHighPriority"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHighPriority"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UpdateAndNotifyIfModified"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PhysicsMaterial"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "WeldJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisA"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisB"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisA"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisB"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WeldJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "RevoluteJoint2d"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RevoluteJoint2d"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "FrameRateSettings"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "VerticalSync"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LimitFrameRate"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FrameRate"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVerticalSync"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVerticalSync"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLimitFrameRate"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLimitFrameRate"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFrameRate"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFrameRate"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FrameRateSettings"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Field"
			var BaseClass = "Property"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "MassOverride"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InverseMass"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Mass"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalInverseInertiaTensor"
					var Type = "Real3x3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalCenterOfMass"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AutoComputeInertia"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AutoComputeCenterOfMass"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInverseMass"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInverseMass"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMass"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMass"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalInverseInertiaTensor"
					var Description = ""
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalInverseInertiaTensor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalCenterOfMass"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalCenterOfMass"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoComputeInertia"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoComputeInertia"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoComputeCenterOfMass"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoComputeCenterOfMass"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RecomputeMass"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MassOverride"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CogInitializerEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "CogInitializer"
					var Type = "CogInitializer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCogInitializer"
					var Description = ""
					var ReturnType = "CogInitializer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCogInitializer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogInitializer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MetaDropEvent"
			var BaseClass = "Event"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Handled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Failed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Testing"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Position"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Result"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Object"
					var Type = "AnyHandle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "MouseOverObject"
					var Type = "AnyHandle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "MouseEvent"
					var Type = "MouseEvent"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ViewportMouseEvent"
					var Type = "ViewportMouseEvent"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetHandled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHandled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFailed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFailed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTesting"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTesting"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetResult"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetResult"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObject"
					var Description = ""
					var ReturnType = "AnyHandle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMouseOverObject"
					var Description = ""
					var ReturnType = "AnyHandle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMouseEvent"
					var Description = ""
					var ReturnType = "MouseEvent"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewportMouseEvent"
					var Description = ""
					var ReturnType = "ViewportMouseEvent"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "MetaDrop"
					var Type = "MetaDropEvent"
					var Senders = Array
					{
						"MetaDropEvent"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MetaDropTest"
					var Type = "MetaDropEvent"
					var Senders = Array
					{
						"MetaDropEvent"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MetaDropUpdate"
					var Type = "MetaDropEvent"
					var Senders = Array
					{
						"MetaDropEvent"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetHostUpdate"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "RefreshResult"
					var Type = "NetRefreshResult"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ResponseTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Network"
					var Type = "Network"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Host"
					var Type = "NetHost"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRefreshResult"
					var Description = ""
					var ReturnType = "NetRefreshResult"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetResponseTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetwork"
					var Description = ""
					var ReturnType = "Network"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHost"
					var Description = ""
					var ReturnType = "NetHost"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetLinkDisconnected"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirNetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "DisconnectReason"
					var Type = "DisconnectReason"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "RequestBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Direction"
					var Type = "TransmissionDirection"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDisconnectReason"
					var Description = ""
					var ReturnType = "DisconnectReason"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRequestBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirection"
					var Description = ""
					var ReturnType = "TransmissionDirection"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CarWheelArray"
			var BaseClass = "SafeId32Object"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CustomConstraintInfo"
			var BaseClass = "ReferenceCountedEventObject"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Linear0"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Angular0"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Linear1"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Angular1"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EffectiveMass"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Gamma"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Bias"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MinImpulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxImpulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Impulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Error"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Baumgarte"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SolvePosition"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Owner"
					var Type = "CustomJoint"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLinear0"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLinear0"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAngular0"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAngular0"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinear1"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLinear1"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAngular1"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAngular1"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEffectiveMass"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEffectiveMass"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGamma"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGamma"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBias"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBias"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMinImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMinImpulse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxImpulse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetImpulse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetError"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetError"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBaumgarte"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBaumgarte"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSolvePosition"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSolvePosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetJacobian"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "linear0"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "angular0"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "linear1"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "angular1"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetErrorAndBias"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "error"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ComputeMotor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "targetSpeed"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "minImpulse"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxImpulse"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ComputeSpring"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "frequencyHz"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "dampRatio"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DetachFromOwner"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsOwned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOwner"
					var Description = ""
					var ReturnType = "CustomJoint"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CapsuleCollider"
			var BaseClass = "Collider"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Radius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Height"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Direction"
					var Type = "AxisDirection"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ScalingMode"
					var Type = "CapsuleScalingMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldRadius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldCylinderHeight"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHeight"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHeight"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirection"
					var Description = ""
					var ReturnType = "AxisDirection"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "AxisDirection"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetScalingMode"
					var Description = ""
					var ReturnType = "CapsuleScalingMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetScalingMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CapsuleScalingMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldCylinderHeight"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CapsuleCollider"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Boolean4x3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M30"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M31"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M32"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM30"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM30"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM31"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM31"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM32"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM32"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m30"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m31"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m32"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "CollisionEndBlock"
			var BaseClass = "CollisionFilterBlock"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CollisionEndBlock"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundSpace"
			var BaseClass = "Component"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "PauseWithTimeSpace"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PitchWithTimeSpace"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Paused"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Volume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Decibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Pitch"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Semitones"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InputNode"
					var Type = "SoundNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OutputNode"
					var Type = "SoundNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SoundNodeInput"
					var Type = "SoundNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SoundNodeOutput"
					var Type = "SoundNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPauseWithTimeSpace"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPauseWithTimeSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPitchWithTimeSpace"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPitchWithTimeSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPaused"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPaused"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPitch"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPitch"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSemitones"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSemitones"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInputNode"
					var Description = ""
					var ReturnType = "SoundNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOutputNode"
					var Description = ""
					var ReturnType = "SoundNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSoundNodeInput"
					var Description = ""
					var ReturnType = "SoundNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSoundNodeOutput"
					var Description = ""
					var ReturnType = "SoundNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolatePitch"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "pitch"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "time"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateSemitones"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "pitch"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "time"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "decibels"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PlayCue"
					var Description = ""
					var ReturnType = "SoundInstance"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cue"
							var Type = "SoundCue"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PlayCuePaused"
					var Description = ""
					var ReturnType = "SoundInstance"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cue"
							var Type = "SoundCue"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SoundSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ScaleGizmo"
			var BaseClass = "Component"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Snapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapMode"
					var Type = "GizmoSnapMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSnapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapMode"
					var Description = ""
					var ReturnType = "GizmoSnapMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "GizmoSnapMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ScaleGizmo"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CastResult"
			var BaseClass = ""
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ObjectHit"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Collider"
					var Type = "Collider"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldPosition"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Normal"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Distance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetObjectHit"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCollider"
					var Description = ""
					var ReturnType = "Collider"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNormal"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "pointIndex"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastResult"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastResult"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "CastResult"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MultiConvexMeshPropertyViewInfo"
			var BaseClass = "EventObject"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "MeshThickness"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpriteSource"
					var Type = "SpriteSource"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ClearColor"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OuterContourColor"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DrawMode"
					var Type = "MultiConvexMeshDrawMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AutoComputeMode"
					var Type = "MultiConvexMeshAutoComputeMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SurfaceLevelThreshold"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AutoComputeMethod"
					var Type = "MultiConvexMeshAutoComputeMethod"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SimplificationThreshold"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMeshThickness"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMeshThickness"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpriteSource"
					var Description = ""
					var ReturnType = "SpriteSource"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpriteSource"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SpriteSource"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetClearColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetClearColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOuterContourColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOuterContourColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDrawMode"
					var Description = ""
					var ReturnType = "MultiConvexMeshDrawMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDrawMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "MultiConvexMeshDrawMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AutoCompute"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoComputeMode"
					var Description = ""
					var ReturnType = "MultiConvexMeshAutoComputeMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoComputeMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "MultiConvexMeshAutoComputeMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSurfaceLevelThreshold"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSurfaceLevelThreshold"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoComputeMethod"
					var Description = ""
					var ReturnType = "MultiConvexMeshAutoComputeMethod"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoComputeMethod"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "MultiConvexMeshAutoComputeMethod"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSimplificationThreshold"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSimplificationThreshold"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MultiConvexMeshPropertyViewInfo"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MeshCollider"
			var BaseClass = "Collider"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "PhysicsMesh"
					var Type = "PhysicsMesh"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DrawEdges"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DrawFaces"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DrawFaceNormals"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPhysicsMesh"
					var Description = ""
					var ReturnType = "PhysicsMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPhysicsMesh"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "PhysicsMesh"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDrawEdges"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDrawEdges"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDrawFaces"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDrawFaces"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDrawFaceNormals"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDrawFaceNormals"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MeshCollider"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MultiConvexMeshCollider"
			var BaseClass = "Collider"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Mesh"
					var Type = "MultiConvexMesh"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMesh"
					var Description = ""
					var ReturnType = "MultiConvexMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMesh"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "MultiConvexMesh"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MultiConvexMeshCollider"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "RelativeVelocityJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "axis"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpeed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "speed"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxImpulse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxImpulse"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAxisActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAxisActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "active"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RelativeVelocityJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SimpleGizmoBase"
			var BaseClass = "Component"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "MouseInput"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PickingPriority"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HoverColor"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseParentAsViewScaleOrigin"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DrawOnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMouseInput"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMouseInput"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPickingPriority"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPickingPriority"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHoverColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHoverColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseParentAsViewScaleOrigin"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseParentAsViewScaleOrigin"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDrawOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDrawOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SimpleGizmoBase"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "TilePaletteSource"
			var BaseClass = "Resource"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SelectTool"
			var BaseClass = "Component"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ArchetypeSelect"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RootSelect"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SmartGroupSelect"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetArchetypeSelect"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetArchetypeSelect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRootSelect"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRootSelect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSmartGroupSelect"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSmartGroupSelect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RayCast"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "viewport"
							var Type = "Viewport"
							var Description = ""
						}
						Parameter
						{
							var Name = "mousePosition"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SelectTool"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "SelectToolPreSelect"
					var Type = "ViewportMouseEvent"
					var Senders = Array
					{
						"SelectTool"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Event"
			var BaseClass = "ThreadSafeId32Object"
			var Library = "MetaLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "EventId"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetEventId"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Terminate"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PluginEvent"
			var BaseClass = "EventData"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ParticleWander"
			var BaseClass = "ParticleAnimator"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "WanderAngle"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WanderAngleVariance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WanderStrength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetWanderAngle"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWanderAngle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWanderAngleVariance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWanderAngleVariance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWanderStrength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWanderStrength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ParticleWander"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "IndexedHalfEdgeFaceEdgeIndexArray"
			var BaseClass = "SafeId32Object"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "IndexedHalfEdgeFaceEdgeIndexArrayRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "IndexedHalfEdgeFaceEdgeIndexArrayRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "IndexedHalfEdgeMeshVertexArray"
			var BaseClass = "SafeId32Object"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "IndexedHalfEdgeMeshVertexArrayRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "IndexedHalfEdgeMeshVertexArrayRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "HierarchyEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Parent"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Child"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetParent"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetParent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetChild"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetChild"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "Attached"
					var Type = "HierarchyEvent"
					var Senders = Array
					{
						"HierarchyEvent"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "Detached"
					var Type = "HierarchyEvent"
					var Senders = Array
					{
						"HierarchyEvent"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ChildAttached"
					var Type = "HierarchyEvent"
					var Senders = Array
					{
						"HierarchyEvent"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ChildDetached"
					var Type = "HierarchyEvent"
					var Senders = Array
					{
						"HierarchyEvent"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ChildrenOrderChanged"
					var Type = "Event"
					var Senders = Array
					{
						"HierarchyEvent"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ConstraintConfigBlock"
			var BaseClass = "SafeId32Object"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Slop"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LinearBaumgarte"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AngularBaumgarte"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LinearErrorCorrection"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AngularErrorCorrection"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PositionCorrectionType"
					var Type = "ConstraintPositionCorrection"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSlop"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSlop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinearBaumgarte"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLinearBaumgarte"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAngularBaumgarte"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAngularBaumgarte"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinearErrorCorrection"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLinearErrorCorrection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAngularErrorCorrection"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAngularErrorCorrection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPositionCorrectionType"
					var Description = ""
					var ReturnType = "ConstraintPositionCorrection"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPositionCorrectionType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "ConstraintPositionCorrection"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CollisionTable"
			var BaseClass = "DataResource"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CreateRuntime"
					var Description = ""
					var ReturnType = "CollisionTable"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RuntimeClone"
					var Description = ""
					var ReturnType = "CollisionTable"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindFilter"
					var Description = ""
					var ReturnType = "CollisionFilter"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "groupA"
							var Type = "CollisionGroup"
							var Description = ""
						}
						Parameter
						{
							var Name = "groupB"
							var Type = "CollisionGroup"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetHostListUpdate"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Network"
					var Type = "Network"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetNetwork"
					var Description = ""
					var ReturnType = "Network"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetUserOwnerChanged"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "PreviousNetUserOwner"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CurrentNetUserOwner"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPreviousNetUserOwner"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrentNetUserOwner"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundBuffer"
			var BaseClass = "ReferenceCountedObject"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SampleCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSampleCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddSampleToBuffer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sample"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSampleAtIndex"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Reset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddMicUncompressedData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Array[Real]"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ErrorEvent"
			var BaseClass = "EventData"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "DebugCircle"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Position"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Axis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Radius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugCircle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugCircle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "axis"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radius"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "NetPeerSentUserAddRequest"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirNetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurRequestBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurRequestBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundCue"
			var BaseClass = "DataResource"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "PlayMode"
					var Type = "SoundPlayMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SelectMode"
					var Type = "SoundSelectMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Volume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Decibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseDecibelVariation"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "VolumeVariation"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DecibelVariation"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Pitch"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Semitones"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseSemitoneVariation"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PitchVariation"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SemitoneVariation"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Attenuator"
					var Type = "SoundAttenuator"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ShowMusicOptions"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "BeatsPerMinute"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TimeSigBeats"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TimeSigValue"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Sounds"
					var Type = "Sounds"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SoundTags"
					var Type = "SoundTags"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPlayMode"
					var Description = ""
					var ReturnType = "SoundPlayMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPlayMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SoundPlayMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSelectMode"
					var Description = ""
					var ReturnType = "SoundSelectMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSelectMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SoundSelectMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseDecibelVariation"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseDecibelVariation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVolumeVariation"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVolumeVariation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDecibelVariation"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDecibelVariation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPitch"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPitch"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSemitones"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSemitones"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseSemitoneVariation"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseSemitoneVariation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPitchVariation"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPitchVariation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSemitoneVariation"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSemitoneVariation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttenuator"
					var Description = ""
					var ReturnType = "SoundAttenuator"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttenuator"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SoundAttenuator"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetShowMusicOptions"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetShowMusicOptions"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBeatsPerMinute"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBeatsPerMinute"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTimeSigBeats"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTimeSigBeats"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTimeSigValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTimeSigValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Preview"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StopPreview"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSounds"
					var Description = ""
					var ReturnType = "Sounds"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSounds"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Sounds"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSoundTags"
					var Description = ""
					var ReturnType = "SoundTags"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSoundTags"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SoundTags"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddSoundTagEntry"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "soundTag"
							var Type = "SoundTag"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddSoundEntry"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sound"
							var Type = "Sound"
							var Description = ""
						}
						Parameter
						{
							var Name = "weight"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PlayCueOnNode"
					var Description = ""
					var ReturnType = "SoundInstance"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "outputNode"
							var Type = "SoundNode"
							var Description = ""
						}
						Parameter
						{
							var Name = "startPaused"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "SoundCuePostPlay"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundCue"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "SoundCuePrePlay"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundCue"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Utf8Encoding"
			var BaseClass = "IEncoding"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ExecutableState"
			var BaseClass = "EventHandler"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "CallingState"
					var Type = "ExecutableState"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCallingState"
					var Description = ""
					var ReturnType = "ExecutableState"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ExecuteStatement"
					var Description = ""
					var ReturnType = "T"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "LightningDocumentResource"
			var BaseClass = "DocumentResource"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Text"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetText"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DoubleInteger"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "PositiveMax"
					var Type = "DoubleInteger"
					var Description = "The largest (most positive) value that can be represented by a DoubleInteger."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "DoubleInteger"
					var Description = "The positive value closest to zero that can be represented by a DoubleInteger."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeValueClosestToZero"
					var Type = "DoubleInteger"
					var Description = "The negative value closest to zero that can be represented by a DoubleInteger."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeMin"
					var Type = "DoubleInteger"
					var Description = "The smallest (most negative) value that can be represented by a DoubleInteger."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Parse"
					var Description = "Attempt to convert the given StringRange to a DoubleInteger. If parsing fails 0 is returned."
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeValueClosestToZero"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeMin"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "EventHandler"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "EventHandler"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "EqualizerNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LowPassGain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HighPassGain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Band1Gain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Band2Gain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Band3Gain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLowPassGain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLowPassGain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHighPassGain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHighPassGain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBand1Gain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBand1Gain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBand2Gain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBand2Gain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBand3Gain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBand3Gain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateAllBands"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "lowPass"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "band1"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "band2"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "band3"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "highPass"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "timeToInterpolate"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ObjectEvent"
			var BaseClass = "Event"
			var Library = "MetaLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Source"
					var Type = "Object"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSource"
					var Description = ""
					var ReturnType = "Object"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer2x3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Boolean4x4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M03"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M13"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M23"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M30"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M31"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M32"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M33"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM03"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM03"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM13"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM13"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM23"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM23"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM30"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM30"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM31"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM31"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM32"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM32"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM33"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM33"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m03"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m13"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m23"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m30"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m31"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m32"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m33"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "NetPeerSentConnectRequest"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurRequestBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurPendingUserAddRequestCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurRequestBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurPendingUserAddRequestCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DoubleReal"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "PositiveMax"
					var Type = "DoubleReal"
					var Description = "The largest (most positive) value that can be represented by a DoubleReal."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "DoubleReal"
					var Description = "The positive value closest to zero that can be represented by a DoubleReal."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeValueClosestToZero"
					var Type = "DoubleReal"
					var Description = "The negative value closest to zero that can be represented by a DoubleReal."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeMin"
					var Type = "DoubleReal"
					var Description = "The smallest (most negative) value that can be represented by a DoubleReal."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Parse"
					var Description = "Attempt to convert the given StringRange to a DoubleReal. If parsing fails 0 is returned."
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeValueClosestToZero"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeMin"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "MouseEvent"
			var BaseClass = "Event"
			var Library = "WidgetLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Button"
					var Type = "MouseButtons"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ButtonDown"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Position"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Movement"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Scroll"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ShiftPressed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AltPressed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CtrlPressed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Mouse"
					var Type = "Mouse"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "HandledEvent"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetButton"
					var Description = ""
					var ReturnType = "MouseButtons"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetButton"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "MouseButtons"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetButtonDown"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetButtonDown"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMovement"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMovement"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetScroll"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetScroll"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetShiftPressed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetShiftPressed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAltPressed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAltPressed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCtrlPressed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCtrlPressed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMouse"
					var Description = ""
					var ReturnType = "Mouse"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsButtonDown"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "MouseButtons"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsButtonUp"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "button"
							var Type = "MouseButtons"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHandledEvent"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHandledEvent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SplineBakedPoints"
			var BaseClass = "SafeId32Object"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "SplineBakedPoint"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Collider"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Material"
					var Type = "PhysicsMaterial"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CollisionGroup"
					var Type = "CollisionGroup"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Ghost"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SendsEvents"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Offset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ActiveBody"
					var Type = "RigidBody"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ContactCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Contacts"
					var Type = "ContactRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "JointCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Joints"
					var Type = "JointRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldAabb"
					var Type = "Aabb"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldBoundingSphere"
					var Type = "Sphere"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMaterial"
					var Description = ""
					var ReturnType = "PhysicsMaterial"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaterial"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "PhysicsMaterial"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCollisionGroup"
					var Description = ""
					var ReturnType = "CollisionGroup"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCollisionGroup"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CollisionGroup"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGhost"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGhost"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSendsEvents"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSendsEvents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ComputeVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPointVelocity"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "worldPoint"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetActiveBody"
					var Description = ""
					var ReturnType = "RigidBody"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContactCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContacts"
					var Description = ""
					var ReturnType = "ContactRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJointCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJoints"
					var Description = ""
					var ReturnType = "JointRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldAabb"
					var Description = ""
					var ReturnType = "Aabb"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldBoundingSphere"
					var Description = ""
					var ReturnType = "Sphere"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "CollisionStarted"
					var Type = "CollisionEvent"
					var Senders = Array
					{
						"Collider"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "CollisionEnded"
					var Type = "CollisionEvent"
					var Senders = Array
					{
						"Collider"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "CollisionPersisted"
					var Type = "CollisionEvent"
					var Senders = Array
					{
						"Collider"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GroupCollisionPersisted"
					var Type = "CollisionGroupEvent"
					var Senders = Array
					{
						"Collider"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GroupCollisionPreSolve"
					var Type = "PreSolveEvent"
					var Senders = Array
					{
						"Collider"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ParticleEmitterShared"
			var BaseClass = "ParticleEmitter"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EmitDelay"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EmitCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EmitRate"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EmitVariance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EmitRateSoftStartTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Size"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SizeVariance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Lifetime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LifetimeVariance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Spin"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpinVariance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RandomSpin"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Fill"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EmitterVelocityPercent"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StartVelocity"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RandomVelocity"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TangentVelocity"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EmitterSize"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FastMovingEmitter"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEmitDelay"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEmitDelay"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEmitCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEmitCount"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEmitRate"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEmitRate"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEmitVariance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEmitVariance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEmitRateSoftStartTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEmitRateSoftStartTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSize"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSizeVariance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSizeVariance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLifetime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLifetime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLifetimeVariance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLifetimeVariance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpin"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpin"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpinVariance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpinVariance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRandomSpin"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRandomSpin"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFill"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFill"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEmitterVelocityPercent"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEmitterVelocityPercent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStartVelocity"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStartVelocity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRandomVelocity"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRandomVelocity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTangentVelocity"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTangentVelocity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEmitterSize"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEmitterSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFastMovingEmitter"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFastMovingEmitter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ResetCount"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "ParticlesExhausted"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"ParticleEmitterShared"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "AllParticlesDead"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"ParticleEmitterShared"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AddNoiseNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "AdditiveGain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MultiplicativeGain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AdditiveCutoff"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MultiplicativeCutoff"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAdditiveGain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAdditiveGain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMultiplicativeGain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMultiplicativeGain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAdditiveCutoff"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAdditiveCutoff"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMultiplicativeCutoff"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMultiplicativeCutoff"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ObjectTranslateTool"
			var BaseClass = "ObjectTransformTool"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Snapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapMode"
					var Type = "GizmoSnapMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSnapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapMode"
					var Description = ""
					var ReturnType = "GizmoSnapMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "GizmoSnapMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ObjectTranslateTool"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "GeneratedWaveNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "WaveType"
					var Type = "SynthWaveType"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WaveFrequency"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Volume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Decibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SquareWavePulseValue"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetWaveType"
					var Description = ""
					var ReturnType = "SynthWaveType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWaveType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SynthWaveType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWaveFrequency"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWaveFrequency"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSquareWavePulseValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSquareWavePulseValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Play"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Stop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "volume"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "decibels"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateWaveFrequency"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "frequency"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "time"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SendableEvent"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Real2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Y"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Real2"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Real2"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "YAxis"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveMax"
					var Type = "Real2"
					var Description = "The largest (most positive) value that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "Real2"
					var Description = "The positive value closest to zero that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeValueClosestToZero"
					var Type = "Real2"
					var Description = "The negative value closest to zero that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeMin"
					var Type = "Real2"
					var Description = "The smallest (most negative) value that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYAxis"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeValueClosestToZero"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeMin"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetY"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "JoystickEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Button"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Joystick"
					var Type = "Joystick"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetButton"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetButton"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJoystick"
					var Description = ""
					var ReturnType = "Joystick"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetJoystick"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Joystick"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PreSolveBlock"
			var BaseClass = "CollisionFilterBlock"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "PreSolveBlock"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DragEffect"
			var BaseClass = "PhysicsEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LinearDamping"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AngularDamping"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LinearDrag"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AngularDrag"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLinearDamping"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLinearDamping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAngularDamping"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAngularDamping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinearDrag"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLinearDrag"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAngularDrag"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAngularDrag"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DragEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DebugLineCross"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Position"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HalfExtents"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHalfExtents"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHalfExtents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugLineCross"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugLineCross"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Real2x2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "RecordingNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "FileName"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Paused"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StreamToDisk"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetFileName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFileName"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StartRecording"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StopRecording"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPaused"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPaused"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStreamToDisk"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStreamToDisk"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AdsrEnvelope"
			var BaseClass = ""
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "DelayTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AttackTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DecayTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SustainTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SustainLevel"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReleaseTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetDelayTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDelayTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttackTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttackTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDecayTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDecayTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSustainTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSustainTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSustainLevel"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSustainLevel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReleaseTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReleaseTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AdsrEnvelope"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SpriteParticleSystem"
			var BaseClass = "ParticleSystem"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "VertexColor"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "GeometryMode"
					var Type = "SpriteParticleGeometryMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpriteSource"
					var Type = "SpriteSource"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ParticleAnimation"
					var Type = "SpriteParticleAnimationMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ParticleSort"
					var Type = "SpriteParticleSortMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "BeamBaseScale"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "BeamVelocityScale"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVertexColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVertexColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGeometryMode"
					var Description = ""
					var ReturnType = "SpriteParticleGeometryMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGeometryMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SpriteParticleGeometryMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpriteSource"
					var Description = ""
					var ReturnType = "SpriteSource"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpriteSource"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SpriteSource"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetParticleAnimation"
					var Description = ""
					var ReturnType = "SpriteParticleAnimationMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetParticleAnimation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SpriteParticleAnimationMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetParticleSort"
					var Description = ""
					var ReturnType = "SpriteParticleSortMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetParticleSort"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SpriteParticleSortMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBeamBaseScale"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBeamBaseScale"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBeamVelocityScale"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBeamVelocityScale"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SpriteParticleSystem"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundTag"
			var BaseClass = "DataResource"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Volume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Decibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseEqualizer"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EQLowPassGain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EQBand1Gain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EQBand2Gain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EQBand3Gain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EQHighPassGain"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseCompressor"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CompressorThreshold"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CompressorAttack"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CompressorRelease"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CompressorRatio"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CompressorKneeWidth"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InstanceLimit"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InstanceCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Paused"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Instances"
					var Type = "SoundInstanceRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TagForDucking"
					var Type = "SoundTag"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseEqualizer"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseEqualizer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEQLowPassGain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEQLowPassGain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEQBand1Gain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEQBand1Gain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEQBand2Gain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEQBand2Gain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEQBand3Gain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEQBand3Gain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEQHighPassGain"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEQHighPassGain"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseCompressor"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseCompressor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCompressorThreshold"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCompressorThreshold"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCompressorAttack"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCompressorAttack"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCompressorRelease"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCompressorRelease"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCompressorRatio"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCompressorRatio"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCompressorKneeWidth"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCompressorKneeWidth"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInstanceLimit"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInstanceLimit"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInstanceCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPaused"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPaused"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInstances"
					var Description = ""
					var ReturnType = "SoundInstanceRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TagSound"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "instance"
							var Type = "SoundInstance"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UnTagSound"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "instance"
							var Type = "SoundInstance"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StopSounds"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "decibels"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EQSetAllBands"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "lowPass"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "band1"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "band2"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "band3"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "highPass"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "timeToInterpolate"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTagForDucking"
					var Description = ""
					var ReturnType = "SoundTag"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTagForDucking"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SoundTag"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "AddedInstanceToTag"
					var Type = "SoundEvent"
					var Senders = Array
					{
						"SoundTag"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "TagHasNoInstances"
					var Type = "SoundEvent"
					var Senders = Array
					{
						"SoundTag"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "GetterSetterRange"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "GetterSetterRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Current"
					var Type = "GetterSetter"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "GetterSetterRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "GetterSetter"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MoveNext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetterSetterRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetterSetterRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "GetterSetterRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "JointConfigOverride"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Slop"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LinearBaumgarte"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AngularBaumgarte"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LinearErrorCorrection"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AngularErrorCorrection"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PositionCorrectionType"
					var Type = "ConstraintPositionCorrection"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSlop"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSlop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinearBaumgarte"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLinearBaumgarte"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAngularBaumgarte"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAngularBaumgarte"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinearErrorCorrection"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLinearErrorCorrection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAngularErrorCorrection"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAngularErrorCorrection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPositionCorrectionType"
					var Description = ""
					var ReturnType = "ConstraintPositionCorrection"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPositionCorrectionType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "ConstraintPositionCorrection"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "JointConfigOverride"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "FixedAngleJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalBasisA"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisB"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalBasisA"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisB"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FixedAngleJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ProcessStartInfo"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ApplicationName"
					var Type = "String"
					var Description = "Name of the application to execute. No quoting of this string is necessary."
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Arguments"
					var Type = "String"
					var Description = "Arguments to pass to the application."
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorkingDirectory"
					var Type = "String"
					var Description = "The working directory for the process to start with. No quoting of this string is necessary."
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ShowWindow"
					var Type = "Boolean"
					var Description = "Whether or not the window of the launched application should be shown."
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SearchPath"
					var Type = "Boolean"
					var Description = "Whether or not we should search the path for the application."
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RedirectStandardOutput"
					var Type = "Boolean"
					var Description = "Whether or not we should redirect the Standard Output of the process for capturing."
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RedirectStandardError"
					var Type = "Boolean"
					var Description = "Whether or not we should redirect the Standard Error of the process for capturing."
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RedirectStandardInput"
					var Type = "Boolean"
					var Description = "Whether or not we should redirect the Standard Input of the process for writing."
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetApplicationName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetApplicationName"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetArguments"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetArguments"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorkingDirectory"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorkingDirectory"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetShowWindow"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetShowWindow"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSearchPath"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSearchPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRedirectStandardOutput"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRedirectStandardOutput"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRedirectStandardError"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRedirectStandardError"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRedirectStandardInput"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRedirectStandardInput"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ProcessStartInfo"
					var Description = "Class used to set up parameters before launching a process."
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "BoxCollider"
			var BaseClass = "Collider"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "HalfSize"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Size"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldSize"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetHalfSize"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHalfSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSize"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldSize"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "BoxCollider"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Real3x4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M03"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M13"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M23"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM03"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM03"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM13"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM13"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM23"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM23"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m03"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m13"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m23"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "TileMapSource"
			var BaseClass = "Resource"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DeveloperConfig"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "DoubleEscapeQuit"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ProxyObjectsInPreviews"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CanModifyReadOnlyResources"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetDoubleEscapeQuit"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDoubleEscapeQuit"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProxyObjectsInPreviews"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetProxyObjectsInPreviews"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCanModifyReadOnlyResources"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCanModifyReadOnlyResources"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DeveloperConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CylinderCollider"
			var BaseClass = "Collider"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Radius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Height"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Direction"
					var Type = "AxisDirection"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldRadius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldHeight"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHeight"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHeight"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirection"
					var Description = ""
					var ReturnType = "AxisDirection"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "AxisDirection"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldHeight"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CylinderCollider"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Boolean2x3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "MultiConvexMeshSubMeshData"
			var BaseClass = "SafeId32Object"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "MultiConvexMeshSubMeshRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "MultiConvexMeshSubMeshRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Add"
					var Description = ""
					var ReturnType = "SubConvexMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveAt"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "arrayIndex"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "SubConvexMesh"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PreSolveEvent"
			var BaseClass = "BaseCollisionEvent"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Restitution"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Friction"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRestitution"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRestitution"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFriction"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFriction"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer2x4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M03"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M13"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM03"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM03"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM13"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM13"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m03"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m13"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "MultiConvexMeshVertexData"
			var BaseClass = "SafeId32Object"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "MultiConvexMeshVertexRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Add"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "MultiConvexMeshVertexRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundTagEntry"
			var BaseClass = "Object"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SoundTag"
					var Type = "SoundTag"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSoundTag"
					var Description = ""
					var ReturnType = "SoundTag"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSoundTag"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SoundTag"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundInstanceEvent"
			var BaseClass = "Event"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SoundInstance"
					var Type = "SoundInstance"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSoundInstance"
					var Description = ""
					var ReturnType = "SoundInstance"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetEventSent"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirNetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetEvent"
					var Type = "Event"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Destination"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetEvent"
					var Description = ""
					var ReturnType = "Event"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDestination"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer4x3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M30"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M31"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M32"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM30"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM30"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM31"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM31"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM32"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM32"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m30"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m31"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m32"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ContactPoint"
			var BaseClass = ""
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Physics"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OtherLocalPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldNormalTowardsOther"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NormalImpulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "FrictionImpulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ComplexImpulse"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Penetration"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "RelativeVelocity"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOtherLocalPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldNormalTowardsOther"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNormalImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFrictionImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetComplexImpulse"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPenetration"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRelativeVelocity"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ContactPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ContactPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "ContactPoint"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ParticleAttractor"
			var BaseClass = "ParticleAnimator"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "PositionSpace"
					var Type = "SystemSpace"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AttractPosition"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Strength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MinDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPositionSpace"
					var Description = ""
					var ReturnType = "SystemSpace"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPositionSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SystemSpace"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttractPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttractPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStrength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStrength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMinDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMinDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ParticleAttractor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetHostRecordEvent"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "HostRecord"
					var Type = "NetHostRecord"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetHostRecord"
					var Description = ""
					var ReturnType = "NetHostRecord"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SphereCollider"
			var BaseClass = "Collider"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Radius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldRadius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SphereCollider"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Hierarchy"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Children"
					var Type = "HierarchyListRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetChildren"
					var Description = ""
					var ReturnType = "HierarchyListRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Hierarchy"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YX"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZX"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XY"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YY"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZY"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZ"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZ"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZ"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Y"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Z"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Integer3"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Integer3"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "YAxis"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ZAxis"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveMax"
					var Type = "Integer3"
					var Description = "The largest (most positive) value that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "Integer3"
					var Description = "The positive value closest to zero that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeValueClosestToZero"
					var Type = "Integer3"
					var Description = "The negative value closest to zero that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeMin"
					var Type = "Integer3"
					var Description = "The smallest (most negative) value that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYX"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZX"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYY"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZY"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZ"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZ"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYAxis"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZAxis"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeValueClosestToZero"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeMin"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXYZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXY"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZ"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZ"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "CogPath"
			var BaseClass = "Object"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Path"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Cog"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DirectCog"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RelativeTo"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ErrorOnResolveToNull"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ErrorOnPathCantCompute"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ErrorOnDirectLinkFail"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UpdateCogOnPathChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UpdateCogOnInitialize"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UpdatePathOnCogChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PathPreference0"
					var Type = "CogPathPreference"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PathPreference1"
					var Type = "CogPathPreference"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PathPreference2"
					var Type = "CogPathPreference"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPath"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCog"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCog"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirectCog"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDirectCog"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRelativeTo"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRelativeTo"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetErrorOnResolveToNull"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetErrorOnResolveToNull"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetErrorOnPathCantCompute"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetErrorOnPathCantCompute"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetErrorOnDirectLinkFail"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetErrorOnDirectLinkFail"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUpdateCogOnPathChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUpdateCogOnPathChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUpdateCogOnInitialize"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUpdateCogOnInitialize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUpdatePathOnCogChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUpdatePathOnCogChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Refresh"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RefreshIfNull"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clone"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Resolve"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "startFrom"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "path"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ComputePath"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "from"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "to"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "pref"
							var Type = "CogPathPreference"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPathPreference0"
					var Description = ""
					var ReturnType = "CogPathPreference"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPathPreference0"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPathPreference"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPathPreference1"
					var Description = ""
					var ReturnType = "CogPathPreference"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPathPreference1"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPathPreference"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPathPreference2"
					var Description = ""
					var ReturnType = "CogPathPreference"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPathPreference2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPathPreference"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CogPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CogPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CogPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "CogPathCogChanged"
					var Type = "CogPathEvent"
					var Senders = Array
					{
						"CogPath"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Integer"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Integer"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveMax"
					var Type = "Integer"
					var Description = "The largest (most positive) value that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "Integer"
					var Description = "The positive value closest to zero that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeValueClosestToZero"
					var Type = "Integer"
					var Description = "The negative value closest to zero that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeMin"
					var Type = "Integer"
					var Description = "The smallest (most negative) value that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Reinterpret"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Parse"
					var Description = "Attempt to convert the given StringRange to an Integer. If parsing fails 0 is returned."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeValueClosestToZero"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeMin"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Texture"
			var BaseClass = "Resource"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Type"
					var Type = "TextureType"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Compression"
					var Type = "TextureCompression"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Width"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Height"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Size"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Format"
					var Type = "TextureFormat"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "AddressingX"
					var Type = "TextureAddressing"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AddressingY"
					var Type = "TextureAddressing"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Filtering"
					var Type = "TextureFiltering"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Anisotropy"
					var Type = "TextureAnisotropy"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MipMapping"
					var Type = "TextureMipMapping"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CompareMode"
					var Type = "TextureCompareMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CompareFunc"
					var Type = "TextureCompareFunc"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CreateRuntime"
					var Description = ""
					var ReturnType = "Texture"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetType"
					var Description = ""
					var ReturnType = "TextureType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCompression"
					var Description = ""
					var ReturnType = "TextureCompression"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWidth"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHeight"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSize"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFormat"
					var Description = ""
					var ReturnType = "TextureFormat"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAddressingX"
					var Description = ""
					var ReturnType = "TextureAddressing"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAddressingX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TextureAddressing"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAddressingY"
					var Description = ""
					var ReturnType = "TextureAddressing"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAddressingY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TextureAddressing"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFiltering"
					var Description = ""
					var ReturnType = "TextureFiltering"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFiltering"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TextureFiltering"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAnisotropy"
					var Description = ""
					var ReturnType = "TextureAnisotropy"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAnisotropy"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TextureAnisotropy"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMipMapping"
					var Description = ""
					var ReturnType = "TextureMipMapping"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMipMapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TextureMipMapping"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCompareMode"
					var Description = ""
					var ReturnType = "TextureCompareMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCompareMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TextureCompareMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCompareFunc"
					var Description = ""
					var ReturnType = "TextureCompareFunc"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCompareFunc"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TextureCompareFunc"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Upload"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "textureData"
							var Type = "TextureData"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SubUpload"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "textureData"
							var Type = "TextureData"
							var Description = ""
						}
						Parameter
						{
							var Name = "xOffset"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "yOffset"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SplineParticleAnimator"
			var BaseClass = "ParticleAnimator"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Speed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AutoCalculateLifetime"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Helix"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HelixRadius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HelixWaveLength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HelixOffset"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Mode"
					var Type = "SplineAnimatorMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpringFrequencyHz"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpringDampingRatio"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSpeed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoCalculateLifetime"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoCalculateLifetime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHelix"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHelix"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHelixRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHelixRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHelixWaveLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHelixWaveLength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHelixOffset"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHelixOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMode"
					var Description = ""
					var ReturnType = "SplineAnimatorMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SplineAnimatorMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpringFrequencyHz"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpringFrequencyHz"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpringDampingRatio"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpringDampingRatio"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SplineParticleAnimator"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Events"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Send"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sender"
							var Type = "AnyHandle"
							var Description = ""
						}
						Parameter
						{
							var Name = "eventName"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "EventData"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Connect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sender"
							var Type = "AnyHandle"
							var Description = ""
						}
						Parameter
						{
							var Name = "eventName"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "callback"
							var Type = "delegate ()"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Orientation"
			var BaseClass = "Component"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "DefaultOrientationBases"
					var Type = "OrientationBases"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalOrientationBasis"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OrientationRight"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OrientationUp"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OrientationForward"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LocalRight"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LocalUp"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LocalForward"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldRight"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldUp"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldForward"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LocalToWorldRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LocalToOrientationRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OrientationToLocalRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OrientationToWorldRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldToLocalRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldToOrientationRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "GlobalUp"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AbsoluteAngle"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "DebugDrawBases"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDefaultOrientationBases"
					var Description = ""
					var ReturnType = "OrientationBases"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDefaultOrientationBases"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "OrientationBases"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalOrientationBasis"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalOrientationBasis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOrientationRight"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOrientationUp"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOrientationForward"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalRight"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalUp"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalForward"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldRight"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldUp"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldForward"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalToWorldRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalToOrientationRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOrientationToLocalRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOrientationToWorldRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldToLocalRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldToOrientationRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalLookAtRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "localLookAtRotation"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldLookAtRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "worldLookAtRotation"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGlobalUp"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGlobalUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "LookAtPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "lookPoint"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "LookAtDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "lookDir"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLookAtPointRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "lookPoint"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLookAtDirectionRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "lookDir"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "LookAtPointWithUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "lookPoint"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "LookAtDirectionWithUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "lookDir"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLookAtPointWithUpRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "lookPoint"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLookAtDirectionWithUpRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "lookDir"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAbsoluteAngle"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ComputeSignedAngle"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "forward"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "newVector"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Orientation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ViewportMouseEvent"
			var BaseClass = "MouseEvent"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "WorldRay"
					var Type = "Ray"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RayStart"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RayDirection"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HitPosition"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HitNormal"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HitUv"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HitDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HitObject"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CameraViewport"
					var Type = "CameraViewport"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetWorldRay"
					var Description = ""
					var ReturnType = "Ray"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldRay"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Ray"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRayStart"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRayStart"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRayDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRayDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHitPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHitPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHitNormal"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHitNormal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHitUv"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHitUv"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHitDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHitDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHitObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCameraViewport"
					var Description = ""
					var ReturnType = "CameraViewport"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ToWorldZPlane"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "worldDepth"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ToWorldViewPlane"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "viewDepth"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ToWorldPlane"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "worldPlaneNormal"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPlanePosition"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "BitStream"
			var BaseClass = ""
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "MeasureBoolean"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureInteger"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureDoubleInteger"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureInteger2"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureInteger3"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureInteger4"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureDoubleReal"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal2"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal3"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal4"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureQuaternion"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureString"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureString"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureRealHalf"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal2Half"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal3Half"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal4Half"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureIntegerQuantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureIntegerQuantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureDoubleIntegerQuantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureDoubleIntegerQuantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureInteger2Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureInteger2Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureInteger3Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureInteger3Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureInteger4Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureInteger4Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureRealQuantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureRealQuantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureDoubleRealQuantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureDoubleRealQuantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal2Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal2Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal3Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal3Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal4Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MeasureReal4Quantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "WriteBoolean"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteInteger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteDoubleInteger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteInteger2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteInteger3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteInteger4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteDoubleReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteQuaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteString"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteRealHalf"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal2Half"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal3Half"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal4Half"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteIntegerQuantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteIntegerQuantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteDoubleIntegerQuantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteDoubleIntegerQuantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteInteger2Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteInteger2Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteInteger3Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteInteger3Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteInteger4Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteInteger4Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteRealQuantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteRealQuantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteDoubleRealQuantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteDoubleRealQuantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal2Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal2Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal3Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal3Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal4Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteReal4Quantized"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadBoolean"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadInteger"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadDoubleInteger"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadInteger2"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadInteger3"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadInteger4"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadDoubleReal"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal2"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal3"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal4"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadQuaternion"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadString"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadRealHalf"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal2Half"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal3Half"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal4Half"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadIntegerQuantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadIntegerQuantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadDoubleIntegerQuantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadDoubleIntegerQuantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadInteger2Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadInteger2Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadInteger3Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadInteger3Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadInteger4Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadInteger4Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadRealQuantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadRealQuantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadDoubleRealQuantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadDoubleRealQuantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal2Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal2Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal3Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal3Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal4Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CanReadReal4Quantized"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadBoolean"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadInteger"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadDoubleInteger"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadInteger2"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadInteger3"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadInteger4"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadDoubleReal"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal2"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal3"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal4"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadQuaternion"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadString"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadRealHalf"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal2Half"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal3Half"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal4Half"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadIntegerQuantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadIntegerQuantized"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadDoubleIntegerQuantized"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadDoubleIntegerQuantized"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadInteger2Quantized"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadInteger2Quantized"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadInteger3Quantized"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadInteger3Quantized"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadInteger4Quantized"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadInteger4Quantized"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadRealQuantized"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadRealQuantized"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadDoubleRealQuantized"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadDoubleRealQuantized"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal2Quantized"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal2Quantized"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal3Quantized"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal3Quantized"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal4Quantized"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadReal4Quantized"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBitCapacity"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByteCapacity"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBitsWritten"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBytesWritten"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBitsUnwritten"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBytesUnwritten"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBitsRead"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBytesRead"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBitsUnread"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBytesUnread"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Reserve"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "freeMemory"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBitsWritten"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBytesWritten"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearBitsWritten"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Unread"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBitsRead"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBytesRead"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearBitsRead"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "BitStream"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Colors"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Red"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0, 0, 1) or hex 0xFF0000FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Green"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 1, 0, 1) or hex 0x00FF00FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Blue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 0, 1, 1) or hex 0x0000FFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Yellow"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 1, 0, 1) or hex 0xFFFF00FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Cyan"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 1, 1, 1) or hex 0x00FFFFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Purple"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.498039, 0, 0.498039, 1) or hex 0x7F007FFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Magenta"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0, 1, 1) or hex 0xFF00FFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "AliceBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.941176, 0.972549, 1, 1) or hex 0xF0F8FFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "AntiqueWhite"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.980392, 0.921569, 0.843137, 1) or hex 0xFAEBD7FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Aqua"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 1, 1, 1) or hex 0x00FFFFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Aquamarine"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.498039, 1, 0.831373, 1) or hex 0x7FFFD4FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Azure"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.941176, 1, 1, 1) or hex 0xF0FFFFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Beige"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.960784, 0.960784, 0.862745, 1) or hex 0xF5F5DCFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Bisque"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.894118, 0.768627, 1) or hex 0xFFE4C4FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Black"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 0, 0, 1) or hex 0x000000FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "BlanchedAlmond"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.921569, 0.803922, 1) or hex 0xFFEBCDFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "BlueViolet"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.541176, 0.168627, 0.886275, 1) or hex 0x8A2BE2FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Brown"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.647059, 0.164706, 0.164706, 1) or hex 0xA52A2AFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Burlywood"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.870588, 0.721569, 0.529412, 1) or hex 0xDEB887FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "CadetBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.372549, 0.619608, 0.627451, 1) or hex 0x5F9EA0FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Chartreuse"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.498039, 1, 0, 1) or hex 0x7FFF00FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Chocolate"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.823529, 0.411765, 0.117647, 1) or hex 0xD2691EFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Clear"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 1, 1, 0) or hex 0xFFFFFF00"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Coral"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.498039, 0.313726, 1) or hex 0xFF7F50FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Cornflower"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.392157, 0.584314, 0.929412, 1) or hex 0x6495EDFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Cornsilk"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.972549, 0.862745, 1) or hex 0xFFF8DCFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Crimson"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.862745, 0.0784314, 0.235294, 1) or hex 0xDC143CFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkGoldenrod"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.721569, 0.52549, 0.0431373, 1) or hex 0xB8860BFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkGray"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.662745, 0.662745, 0.662745, 1) or hex 0xA9A9A9FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkKhaki"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.741176, 0.717647, 0.419608, 1) or hex 0xBDB76BFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkMagenta"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.545098, 0, 0.545098, 1) or hex 0x8B008BFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkOliveGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.333333, 0.419608, 0.184314, 1) or hex 0x556B2FFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkOrange"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.54902, 0, 1) or hex 0xFF8C00FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkOrchid"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.6, 0.196078, 0.8, 1) or hex 0x9932CCFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkSalmon"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.913725, 0.588235, 0.478431, 1) or hex 0xE9967AFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkSeaGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.560784, 0.737255, 0.560784, 1) or hex 0x8FBC8FFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkSlateBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.282353, 0.239216, 0.545098, 1) or hex 0x483D8BFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkSlateGray"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.184314, 0.309804, 0.309804, 1) or hex 0x2F4F4FFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkTurquoise"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 0.807843, 0.819608, 1) or hex 0x00CED1FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DarkViolet"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.580392, 0, 0.827451, 1) or hex 0x9400D3FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DeepGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 0.498039, 0, 1) or hex 0x007F00FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DeepPink"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.0784314, 0.576471, 1) or hex 0xFF1493FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DeepSkyBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 0.74902, 1, 1) or hex 0x00BFFFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DimGray"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.411765, 0.411765, 0.411765, 1) or hex 0x696969FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "DodgerBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.117647, 0.564706, 1, 1) or hex 0x1E90FFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Firebrick"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.698039, 0.133333, 0.133333, 1) or hex 0xB22222FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "FloralWhite"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.980392, 0.941176, 1) or hex 0xFFFAF0FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ForestGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.133333, 0.545098, 0.133333, 1) or hex 0x228B22FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Fuchsia"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0, 1, 1) or hex 0xFF00FFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Gainsboro"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.862745, 0.862745, 0.862745, 1) or hex 0xDCDCDCFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "GhostWhite"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.972549, 0.972549, 1, 1) or hex 0xF8F8FFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Gold"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.843137, 0, 1) or hex 0xFFD700FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Goldenrod"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.854902, 0.647059, 0.12549, 1) or hex 0xDAA520FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Gray"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.498039, 0.498039, 0.498039, 1) or hex 0x7F7F7FFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "GreenYellow"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.678431, 1, 0.184314, 1) or hex 0xADFF2FFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Honeydew"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.941176, 1, 0.941176, 1) or hex 0xF0FFF0FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "HotPink"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.411765, 0.705882, 1) or hex 0xFF69B4FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "IndianRed"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.803922, 0.360784, 0.360784, 1) or hex 0xCD5C5CFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Indigo"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.294118, 0, 0.509804, 1) or hex 0x4B0082FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Ivory"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 1, 0.941176, 1) or hex 0xFFFFF0FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Khaki"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.941176, 0.901961, 0.54902, 1) or hex 0xF0E68CFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Lavender"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.901961, 0.901961, 0.980392, 1) or hex 0xE6E6FAFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LavenderBlush"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.941176, 0.960784, 1) or hex 0xFFF0F5FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LawnGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.486275, 0.988235, 0, 1) or hex 0x7CFC00FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LemonChiffon"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.980392, 0.803922, 1) or hex 0xFFFACDFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.678431, 0.847059, 0.901961, 1) or hex 0xADD8E6FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightCoral"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.941176, 0.501961, 0.501961, 1) or hex 0xF08080FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightCyan"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.878431, 1, 1, 1) or hex 0xE0FFFFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightGoldenrod"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.980392, 0.980392, 0.823529, 1) or hex 0xFAFAD2FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.564706, 0.933333, 0.564706, 1) or hex 0x90EE90FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightGray"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.827451, 0.827451, 0.827451, 1) or hex 0xD3D3D3FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightPink"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.713726, 0.756863, 1) or hex 0xFFB6C1FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightSalmon"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.627451, 0.478431, 1) or hex 0xFFA07AFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightSeaGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.12549, 0.698039, 0.666667, 1) or hex 0x20B2AAFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightSkyBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.529412, 0.807843, 0.980392, 1) or hex 0x87CEFAFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightSlateGray"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.466667, 0.533333, 0.6, 1) or hex 0x778899FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightSteelBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.690196, 0.768627, 0.870588, 1) or hex 0xB0C4DEFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LightYellow"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 1, 0.878431, 1) or hex 0xFFFFE0FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Lime"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 1, 0, 1) or hex 0x00FF00FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "LimeGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.196078, 0.803922, 0.196078, 1) or hex 0x32CD32FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Linen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.980392, 0.941176, 0.901961, 1) or hex 0xFAF0E6FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Maroon"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.498039, 0, 0, 1) or hex 0x7F0000FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MediumAquamarine"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.4, 0.803922, 0.666667, 1) or hex 0x66CDAAFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MediumBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 0, 0.803922, 1) or hex 0x0000CDFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MediumOrchid"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.729412, 0.333333, 0.827451, 1) or hex 0xBA55D3FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MediumPurple"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.576471, 0.439216, 0.858824, 1) or hex 0x9370DBFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MediumSeaGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.235294, 0.701961, 0.443137, 1) or hex 0x3CB371FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MediumSlateBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.482353, 0.407843, 0.933333, 1) or hex 0x7B68EEFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MediumSpringGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 0.980392, 0.603922, 1) or hex 0x00FA9AFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MediumTurquoise"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.282353, 0.819608, 0.8, 1) or hex 0x48D1CCFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MediumVioletRed"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.780392, 0.0823529, 0.521569, 1) or hex 0xC71585FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MidnightBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.0980392, 0.0980392, 0.439216, 1) or hex 0x191970FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MintCream"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.960784, 1, 0.980392, 1) or hex 0xF5FFFAFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "MistyRose"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.894118, 0.882353, 1) or hex 0xFFE4E1FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Moccasin"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.894118, 0.709804, 1) or hex 0xFFE4B5FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NavajoWhite"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.870588, 0.678431, 1) or hex 0xFFDEADFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Navy"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 0, 0.501961, 1) or hex 0x000080FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "OldLace"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.992157, 0.960784, 0.901961, 1) or hex 0xFDF5E6FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Olive"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.501961, 0.501961, 0, 1) or hex 0x808000FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "OliveDrab"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.419608, 0.556863, 0.137255, 1) or hex 0x6B8E23FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Orange"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.647059, 0, 1) or hex 0xFFA500FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "OrangeRed"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.270588, 0, 1) or hex 0xFF4500FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Orchid"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.854902, 0.439216, 0.839216, 1) or hex 0xDA70D6FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PaleGoldenrod"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.933333, 0.909804, 0.666667, 1) or hex 0xEEE8AAFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PaleGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.596078, 0.984314, 0.596078, 1) or hex 0x98FB98FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PaleTurquoise"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.686275, 0.933333, 0.933333, 1) or hex 0xAFEEEEFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PaleVioletRed"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.858824, 0.439216, 0.576471, 1) or hex 0xDB7093FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PapayaWhip"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.937255, 0.835294, 1) or hex 0xFFEFD5FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PeachPuff"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.854902, 0.72549, 1) or hex 0xFFDAB9FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Peru"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.803922, 0.521569, 0.247059, 1) or hex 0xCD853FFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Pink"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.752941, 0.796078, 1) or hex 0xFFC0CBFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Plum"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.866667, 0.627451, 0.866667, 1) or hex 0xDDA0DDFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PowderBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.690196, 0.878431, 0.901961, 1) or hex 0xB0E0E6FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "RebeccaPurple"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.4, 0.2, 0.6, 1) or hex 0x663399FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "RosyBrown"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.737255, 0.560784, 0.560784, 1) or hex 0xBC8F8FFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "RoyalBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.254902, 0.411765, 0.882353, 1) or hex 0x4169E1FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "SaddleBrown"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.545098, 0.270588, 0.0745098, 1) or hex 0x8B4513FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Salmon"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.980392, 0.501961, 0.447059, 1) or hex 0xFA8072FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "SandyBrown"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.956863, 0.643137, 0.376471, 1) or hex 0xF4A460FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "SeaGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.180392, 0.545098, 0.341176, 1) or hex 0x2E8B57FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Seashell"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.960784, 0.933333, 1) or hex 0xFFF5EEFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Sienna"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.627451, 0.321569, 0.176471, 1) or hex 0xA0522DFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Silver"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.752941, 0.752941, 0.752941, 1) or hex 0xC0C0C0FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "SkyBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.529412, 0.807843, 0.921569, 1) or hex 0x87CEEBFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "SlateBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.415686, 0.352941, 0.803922, 1) or hex 0x6A5ACDFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "SlateGray"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.439216, 0.501961, 0.564706, 1) or hex 0x708090FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Snow"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.980392, 0.980392, 1) or hex 0xFFFAFAFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "SpringGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 1, 0.498039, 1) or hex 0x00FF7FFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "SteelBlue"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.27451, 0.509804, 0.705882, 1) or hex 0x4682B4FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Tan"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.823529, 0.705882, 0.54902, 1) or hex 0xD2B48CFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Teal"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0, 0.501961, 0.501961, 1) or hex 0x008080FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Thistle"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.847059, 0.74902, 0.847059, 1) or hex 0xD8BFD8FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Tomato"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 0.388235, 0.278431, 1) or hex 0xFF6347FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Turquoise"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.25098, 0.878431, 0.815686, 1) or hex 0x40E0D0FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Violet"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.933333, 0.509804, 0.933333, 1) or hex 0xEE82EEFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Wheat"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.960784, 0.870588, 0.701961, 1) or hex 0xF5DEB3FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "White"
					var Type = "Real4"
					var Description = "RGBA color of Real4(1, 1, 1, 1) or hex 0xFFFFFFFF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "WhiteSmoke"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.960784, 0.960784, 0.960784, 1) or hex 0xF5F5F5FF"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "YellowGreen"
					var Type = "Real4"
					var Description = "RGBA color of Real4(0.603922, 0.803922, 0.196078, 1) or hex 0x9ACD32FF"
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRed"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYellow"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCyan"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPurple"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMagenta"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAliceBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAntiqueWhite"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAqua"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAquamarine"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAzure"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetBeige"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetBisque"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetBlack"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetBlanchedAlmond"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetBlueViolet"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetBrown"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetBurlywood"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCadetBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetChartreuse"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetChocolate"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetClear"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCoral"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCornflower"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCornsilk"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCrimson"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkGoldenrod"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkGray"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkKhaki"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkMagenta"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkOliveGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkOrange"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkOrchid"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkSalmon"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkSeaGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkSlateBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkSlateGray"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkTurquoise"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDarkViolet"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDeepGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDeepPink"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDeepSkyBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDimGray"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDodgerBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetFirebrick"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetFloralWhite"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetForestGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetFuchsia"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetGainsboro"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetGhostWhite"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetGold"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetGoldenrod"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetGray"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetGreenYellow"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetHoneydew"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetHotPink"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetIndianRed"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetIndigo"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetIvory"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetKhaki"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLavender"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLavenderBlush"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLawnGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLemonChiffon"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightCoral"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightCyan"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightGoldenrod"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightGray"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightPink"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightSalmon"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightSeaGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightSkyBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightSlateGray"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightSteelBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLightYellow"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLime"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLimeGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetLinen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMaroon"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMediumAquamarine"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMediumBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMediumOrchid"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMediumPurple"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMediumSeaGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMediumSlateBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMediumSpringGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMediumTurquoise"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMediumVioletRed"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMidnightBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMintCream"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMistyRose"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMoccasin"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNavajoWhite"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNavy"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOldLace"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOlive"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOliveDrab"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOrange"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOrangeRed"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOrchid"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPaleGoldenrod"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPaleGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPaleTurquoise"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPaleVioletRed"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPapayaWhip"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPeachPuff"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPeru"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPink"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPlum"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPowderBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetRebeccaPurple"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetRosyBrown"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetRoyalBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSaddleBrown"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSalmon"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSandyBrown"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSeaGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSeashell"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSienna"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSilver"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSkyBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSlateBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSlateGray"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSnow"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSpringGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSteelBlue"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetTan"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetTeal"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetThistle"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetTomato"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetTurquoise"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetViolet"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetWheat"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetWhite"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetWhiteSmoke"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYellowGreen"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Keyboard"
			var BaseClass = "EventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "KeyIsDown"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "Keys"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "KeyIsUp"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "Keys"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "KeyIsPressed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "Keys"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "KeyIsReleased"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "Keys"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetKeyName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "Keys"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "KeyUp"
					var Type = "KeyboardEvent"
					var Senders = Array
					{
						"Keyboard"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "KeyDown"
					var Type = "KeyboardEvent"
					var Senders = Array
					{
						"Keyboard"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "KeyRepeated"
					var Type = "KeyboardEvent"
					var Senders = Array
					{
						"Keyboard"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "TextTyped"
					var Type = "KeyboardTextEvent"
					var Senders = Array
					{
						"Keyboard"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Array[T]"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Capacity"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LastIndex"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "All"
					var Type = "ArrayRange[T]"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "T"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Add"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Reserve"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "capacity"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Resize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "size"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Resize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "size"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "defaultValue"
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Push"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Pop"
					var Description = ""
					var ReturnType = "T"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Insert"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveAt"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveFirst"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveAll"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveSwap"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Range"
					var Description = ""
					var ReturnType = "ArrayRange[T]"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "count"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Copy"
					var Description = ""
					var ReturnType = "Array[T]"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindFirstIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Sort"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "compare"
							var Type = "delegate (left : any, right : any) : Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Sort"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "compare"
							var Type = "delegate (left : any, right : any) : Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCapacity"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLastIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "ArrayRange[T]"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Array[T]"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Array[T]"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "size"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Array[T]"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "size"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "defaultValue"
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "MeshParticleEmitter"
			var BaseClass = "ParticleEmitterShared"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Mesh"
					var Type = "Mesh"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MeshEmitMode"
					var Type = "MeshEmitMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "NormalExtrude"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMesh"
					var Description = ""
					var ReturnType = "Mesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMesh"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Mesh"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMeshEmitMode"
					var Description = ""
					var ReturnType = "MeshEmitMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMeshEmitMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "MeshEmitMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNormalExtrude"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNormalExtrude"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MeshParticleEmitter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "WebRequester"
			var BaseClass = "Component"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Url"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetUrl"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUrl"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Run"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHeader"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "data"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPostData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "data"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WebRequester"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "WebResponse"
					var Type = "WebResponseEvent"
					var Senders = Array
					{
						"WebRequester"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DebugObb"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Position"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HalfExtents"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Rotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Corners"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Filled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHalfExtents"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHalfExtents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCorners"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCorners"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFilled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFilled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugObb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugObb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugObb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugObb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "rotation"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugObb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "rotation"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugObb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "rotation"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugObb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "aabb"
							var Type = "Aabb"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "StringRange"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "StringRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Current"
					var Type = "Rune"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Empty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Begin"
					var Type = "RuneIterator"
					var Description = "Returns the RuneIterator at the start of this range."
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "End"
					var Type = "RuneIterator"
					var Description = "Returns the RuneIterator at the end (one past the last Rune) of this range."
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OriginalString"
					var Type = "String"
					var Description = "Returns the entire string that this range was constructed from."
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Compare"
					var Description = "Compares the two string ranges and returns an integer to denote their relative sort order."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "left"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "right"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MoveNext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "Rune"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBegin"
					var Description = ""
					var ReturnType = "RuneIterator"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CompareTo"
					var Description = "Returns if this string range is equal to the given range."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Contains"
					var Description = "Returns if the string Contains the specified substring."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEnd"
					var Description = ""
					var ReturnType = "RuneIterator"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EndsWith"
					var Description = "Returns if the string ends with the specified substring."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindFirstOf"
					var Description = "Returns a StringRange that Contains the first occurrence of given StringRange."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindLastOf"
					var Description = "Returns a StringRange that Contains the last occurrence of given StringRange."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindRangeInclusive"
					var Description = "Finds the first StringRange that starts with 'startRange' and ends with 'endRange'. This substring includes 'startRange' and 'endRange'."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "startRange"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "endRange"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindRangeExclusive"
					var Description = "Finds the first StringRange that starts with 'startRange' and ends with 'endRange'. This substring excludes 'startRange' and 'endRange'."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "startRange"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "endRange"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Replace"
					var Description = "Returns a new string with all occurances of a substrings replaced with another substring."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "oldValue"
							var Type = "StringRange"
							var Description = ""
						}
						Parameter
						{
							var Name = "newValue"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Split"
					var Description = "Splits the string, according to the separator string, into a range of substrings."
					var ReturnType = "StringSplitRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "separator"
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SubString"
					var Description = "Constructs a StringRange from the given begin and end iterators."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "begin"
							var Type = "RuneIterator"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "RuneIterator"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SubStringBytes"
					var Description = "Constructs a substring based upon a number of bytes. WARNING: strings are UTF8 so indexing by bytes could produce unexpected results on non-ascii strings."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "startByteIndex"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "lengthInBytes"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StartsWith"
					var Description = "Returns if the string ends with the specified substring."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Trim"
					var Description = "Trims all leading and trailing whitespace."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TrimEnd"
					var Description = "Trims all trailing whitespace."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TrimStart"
					var Description = "Trims all leading whitespace."
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ToLower"
					var Description = "Returns a copy of the string that has been converted to lowercase."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ToString"
					var Description = "Returns a new string of the current range."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ToUpper"
					var Description = "Returns a copy of the string that has been converted to uppercase."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOriginalString"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RuneIteratorFromByteIndex"
					var Description = "Finds the iterator from a byte index. WARNING: Strings are UTF8 and constructing an iterator from bytes indices can make an iterator in the middle of a rune."
					var ReturnType = "RuneIterator"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "byteIndex"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RuneIteratorFromRuneIndex"
					var Description = "Finds the iterator from a rune index (the 'character' index). WARNING: this may be slow as finding an iterator from rune index requires a linear search."
					var ReturnType = "RuneIterator"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "runeIndex"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StringRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "CameraViewport"
			var BaseClass = "Component"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "RenderInEditor"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RenderInGame"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RenderOrder"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CameraPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RendererPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ResolutionOrAspect"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RenderToViewport"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ForwardViewportEvents"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewportScaling"
					var Type = "ViewportScaling"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MarginColor"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "NormalizedSize"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "NormalizedOffset"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewportHasFocus"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldToView"
					var Type = "Real4x4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ViewToPerspective"
					var Type = "Real4x4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldToPerspective"
					var Type = "Real4x4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "FinalTexture"
					var Type = "Texture"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "MouseWorldRay"
					var Type = "Ray"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ViewportResolution"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ViewportResolutionWithMargin"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ViewportOffset"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ViewportOffsetWithMargin"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRenderInEditor"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRenderInEditor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRenderInGame"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRenderInGame"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRenderOrder"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRenderOrder"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCameraPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCameraPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRendererPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRendererPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetResolutionOrAspect"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetResolutionOrAspect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRenderToViewport"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRenderToViewport"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetForwardViewportEvents"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetForwardViewportEvents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewportScaling"
					var Description = ""
					var ReturnType = "ViewportScaling"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewportScaling"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "ViewportScaling"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMarginColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMarginColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNormalizedSize"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNormalizedSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNormalizedOffset"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNormalizedOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ViewportTakeFocus"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewportHasFocus"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldToView"
					var Description = ""
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewToPerspective"
					var Description = ""
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldToPerspective"
					var Description = ""
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFinalTexture"
					var Description = ""
					var ReturnType = "Texture"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMouseWorldRay"
					var Description = ""
					var ReturnType = "Ray"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ScreenToWorldRay"
					var Description = ""
					var ReturnType = "Ray"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "screenPoint"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ScreenToWorldZPlane"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "screenPoint"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldDepth"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ScreenToWorldViewPlane"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "screenPoint"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "viewDepth"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ScreenToWorldPlane"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "screenPoint"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPlaneNormal"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPlanePosition"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WorldToScreen"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "worldPoint"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ScreenToViewport"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "screenPoint"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ViewportToScreen"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "viewportPoint"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ViewPlaneSize"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "viewDepth"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewportResolution"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewportResolutionWithMargin"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewportOffset"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewportOffsetWithMargin"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CameraViewport"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Members"
			var BaseClass = "Enum"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Instance"
					var Type = "Members"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Static"
					var Type = "Members"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Inherited"
					var Type = "Members"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Extension"
					var Type = "Members"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "InstanceStatic"
					var Type = "Members"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "InheritedInstanceStatic"
					var Type = "Members"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "InheritedInstance"
					var Type = "Members"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "InheritedStatic"
					var Type = "Members"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "All"
					var Type = "Members"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetInstance"
					var Description = ""
					var ReturnType = "Members"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetStatic"
					var Description = ""
					var ReturnType = "Members"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetInherited"
					var Description = ""
					var ReturnType = "Members"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetExtension"
					var Description = ""
					var ReturnType = "Members"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetInstanceStatic"
					var Description = ""
					var ReturnType = "Members"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetInheritedInstanceStatic"
					var Description = ""
					var ReturnType = "Members"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetInheritedInstance"
					var Description = ""
					var ReturnType = "Members"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetInheritedStatic"
					var Description = ""
					var ReturnType = "Members"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "Members"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "SelectionIcon"
			var BaseClass = "Component"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Visible"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "VisibilityEvents"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Material"
					var Type = "Material"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ShaderInputs"
					var Type = "ShaderInputs"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpriteSource"
					var Type = "SpriteSource"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScale"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OverrideSelections"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVisible"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVisible"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVisibilityEvents"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVisibilityEvents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaterial"
					var Description = ""
					var ReturnType = "Material"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaterial"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Material"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetShaderInputs"
					var Description = ""
					var ReturnType = "ShaderInputs"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetShaderInputs"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "ShaderInputs"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpriteSource"
					var Description = ""
					var ReturnType = "SpriteSource"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpriteSource"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SpriteSource"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScale"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScale"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOverrideSelections"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOverrideSelections"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SelectionIcon"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Console"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Write"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Write"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Write"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Write"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Write"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "WriteLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "WriteLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "WriteLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "WriteLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "WriteLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "WriteLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "DumpValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "DumpValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ReadString"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ReadInteger"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ReadBoolean"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ReadReal"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ChorusNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "MaxDelayMillisec"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MinDelayMillisec"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ModulationFrequency"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FeedbackPercent"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FeedbackValue"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OffsetMillisec"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMaxDelayMillisec"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxDelayMillisec"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMinDelayMillisec"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMinDelayMillisec"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetModulationFrequency"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetModulationFrequency"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFeedbackPercent"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFeedbackPercent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFeedbackValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFeedbackValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOffsetMillisec"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOffsetMillisec"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetUserLostObjectOwnership"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LostObject"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CurrentNetUserOwner"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLostObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrentNetUserOwner"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "GenericPhysicsMesh"
			var BaseClass = "Resource"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Vertices"
					var Type = "PhysicsMeshVertexData"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Indices"
					var Type = "PhysicsMeshIndexData"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVertices"
					var Description = ""
					var ReturnType = "PhysicsMeshVertexData"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIndices"
					var Description = ""
					var ReturnType = "PhysicsMeshIndexData"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Validate"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "throwExceptionIfInvalid"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UpdateAndNotifyIfModified"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "StringSplitRange"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "StringSplitRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Current"
					var Type = "StringRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "StringSplitRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MoveNext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "StringRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "IndirectionType"
			var BaseClass = "Type"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ReferencedType"
					var Type = "BoundType"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetReferencedType"
					var Description = ""
					var ReturnType = "BoundType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ActionGroup"
			var BaseClass = "ActionSet"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ObjectStore"
			var BaseClass = ""
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "EntryCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetEntryCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsStored"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsEntryStored"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEntryAt"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Store"
					var Description = ""
					var ReturnType = "StoreResult"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "object"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Restore"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "space"
							var Type = "Space"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RestoreOrArchetype"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "archetype"
							var Type = "Archetype"
							var Description = ""
						}
						Parameter
						{
							var Name = "space"
							var Type = "Space"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Erase"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearStore"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirectoryPath"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Real4x3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M30"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M31"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M32"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM30"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM30"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM31"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM31"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM32"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM32"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m30"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m31"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m32"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Aabb"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Min"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Max"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Extents"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HalfExtents"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Center"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Volume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SurfaceArea"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Expand"
					var Description = "Creates an aabb that contains the given aabb and point."
					var ReturnType = "Aabb"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Aabb"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Expand"
					var Description = "Creates an aabb that contains the two given aabbs."
					var ReturnType = "Aabb"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Aabb"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Aabb"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Expand"
					var Description = "Expand this aabb to contain the given point."
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Expand"
					var Description = "Expand this aabb to contain the given aabb."
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Aabb"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ContainsPoint"
					var Description = "Does this aabb contain the given point?"
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Overlaps"
					var Description = "Does this aabb overlap/intersect the given aabb?"
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Aabb"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "center"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInvalid"
					var Description = "Sets this aabb to an invalid aabb (Real3.PositiveMax, Real3.NegativeMin)). This also makes expansion easier."
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetExtents"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetExtents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHalfExtents"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHalfExtents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCenter"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCenter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSurfaceArea"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ZeroOut"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Overlap"
					var Description = "This function is deprecated. Use Overlaps instead"
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Aabb"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMin"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMin"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMax"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMax"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Aabb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Aabb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Aabb"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Aabb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "center"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "halfExtents"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ObjectLinkAnchor"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ObjectLinks"
					var Type = "ObjectLinkRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetObjectLinks"
					var Description = ""
					var ReturnType = "ObjectLinkRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ObjectLinkAnchor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ActionSet"
			var BaseClass = "Action"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "KeyboardEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Key"
					var Type = "Keys"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "State"
					var Type = "KeyState"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ShiftPressed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AltPressed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CtrlPressed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SpacePressed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HandledEvent"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Keyboard"
					var Type = "Keyboard"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OsKey"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ModififierPressed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetKey"
					var Description = ""
					var ReturnType = "Keys"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetKey"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Keys"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetState"
					var Description = ""
					var ReturnType = "KeyState"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetState"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "KeyState"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetShiftPressed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetShiftPressed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAltPressed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAltPressed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCtrlPressed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCtrlPressed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpacePressed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpacePressed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHandledEvent"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHandledEvent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetKeyboard"
					var Description = ""
					var ReturnType = "Keyboard"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOsKey"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOsKey"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetModififierPressed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ErrorType"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "VortexEffect"
			var BaseClass = "PhysicsEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalAxis"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MinDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TwistStrengthAtMinDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TwistStrengthAtMaxDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InwardStrengthAtMinDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InwardStrengthAtMaxDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "VortexAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldVortexAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "InterpolationType"
					var Type = "PhysicsEffectInterpolationType"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EndCondition"
					var Type = "PhysicsEffectEndCondition"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalAxis"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMinDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMinDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTwistStrengthAtMinDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTwistStrengthAtMinDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTwistStrengthAtMaxDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTwistStrengthAtMaxDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInwardStrengthAtMinDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInwardStrengthAtMinDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInwardStrengthAtMaxDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInwardStrengthAtMaxDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVortexAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVortexAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldVortexAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInterpolationType"
					var Description = ""
					var ReturnType = "PhysicsEffectInterpolationType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInterpolationType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "PhysicsEffectInterpolationType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEndCondition"
					var Description = ""
					var ReturnType = "PhysicsEffectEndCondition"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEndCondition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "PhysicsEffectEndCondition"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "VortexEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer4x2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M30"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M31"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM30"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM30"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM31"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM31"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m30"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m31"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "DebugCone"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Position"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Direction"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Length"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Radius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugCone"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugCone"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "direction"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "length"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "radius"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "UpdateEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Dt"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TimePassed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RealTimePassed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetDt"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDt"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTimePassed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTimePassed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRealTimePassed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRealTimePassed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PhysicsCar"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DebugDraw"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxSpeed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxTorque"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "GripScalar"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AntiLockBrakes"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TorqueGovernor"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WheelFrictionSideRollCoef"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WheelFrictionFrontRollCoef"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Steer"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Gas"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Brake"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WheelCogs"
					var Type = "CarWheelArray"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDebugDraw"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDebugDraw"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxSpeed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxSpeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxTorque"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxTorque"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGripScalar"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGripScalar"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAntiLockBrakes"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAntiLockBrakes"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTorqueGovernor"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTorqueGovernor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWheelFrictionSideRollCoef"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWheelFrictionSideRollCoef"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWheelFrictionFrontRollCoef"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWheelFrictionFrontRollCoef"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSteer"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSteer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGas"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGas"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBrake"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBrake"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWheelCogs"
					var Description = ""
					var ReturnType = "CarWheelArray"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "NumberOfWheelsInContact"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PhysicsCar"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetPropertyInfo"
			var BaseClass = "SafeId32"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Component"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Property"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetChannelConfig"
					var Type = "NetChannelConfig"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "NetPropertyConfig"
					var Type = "NetPropertyConfig"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetComponent"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProperty"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetChannelConfig"
					var Description = ""
					var ReturnType = "NetChannelConfig"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNetChannelConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "NetChannelConfig"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetPropertyConfig"
					var Description = ""
					var ReturnType = "NetPropertyConfig"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNetPropertyConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "NetPropertyConfig"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetProperty"
			var BaseClass = "SafeId32Object"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Networking"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetPropertyType"
					var Type = "NetPropertyType"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetChannel"
					var Type = "NetChannel"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LastChangeTimestamp"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LastChangeTimePassed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetPropertyType"
					var Description = ""
					var ReturnType = "NetPropertyType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetChannel"
					var Description = ""
					var ReturnType = "NetChannel"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLastChangeTimestamp"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLastChangeTimePassed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AreaEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Area"
					var Type = "Area"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetArea"
					var Description = ""
					var ReturnType = "Area"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetArea"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Area"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "RigidBody"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Velocity"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AngularVelocity"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Force"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Torque"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DynamicState"
					var Type = "RigidBodyDynamicState"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AllowSleep"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Asleep"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RotationLocked"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Mode2D"
					var Type = "Mode2DStates"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Mass"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LocalInverseInertiaTensor"
					var Type = "Real3x3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldInverseInertiaTensor"
					var Type = "Real3x3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldCenterOfMass"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ActiveBody"
					var Type = "RigidBody"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVelocity"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVelocity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAngularVelocity"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAngularVelocity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyLinearVelocity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "linear"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyAngularVelocity"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "angular"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyVelocityAtPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "velocity"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPoint"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPointVelocity"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "worldPoint"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetForce"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetForce"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTorque"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTorque"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyForceNoWakeUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "force"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyTorqueNoWakeUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "torque"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyForceAtOffsetVectorNoWakeUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "force"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldOffset"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyForceAtPointNoWakeUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "force"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPoint"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyForce"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "force"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyTorque"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "torque"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyForceAtOffsetVector"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "force"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldOffset"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyForceAtPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "force"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPoint"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyLinearImpulse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "linear"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyAngularImpulse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "angular"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyImpulseAtOffsetVector"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "impulse"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldOffset"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ApplyImpulseAtPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "impulse"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPoint"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDynamicState"
					var Description = ""
					var ReturnType = "RigidBodyDynamicState"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDynamicState"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "RigidBodyDynamicState"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAllowSleep"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAllowSleep"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAsleep"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAsleep"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ForceAwake"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ForceAsleep"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRotationLocked"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRotationLocked"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMode2D"
					var Description = ""
					var ReturnType = "Mode2DStates"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMode2D"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Mode2DStates"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMass"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalInverseInertiaTensor"
					var Description = ""
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldInverseInertiaTensor"
					var Description = ""
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldCenterOfMass"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetActiveBody"
					var Description = ""
					var ReturnType = "RigidBody"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RigidBody"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "RigidBodySlept"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"RigidBody"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "RigidBodyAwoke"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"RigidBody"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DelegateParameterRange"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "DelegateParameterRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Current"
					var Type = "DelegateParameter"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "DelegateParameterRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "DelegateParameter"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MoveNext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DelegateParameterRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DelegateParameterRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DelegateParameterRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "DebugSphere"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Position"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Radius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Colored"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetColored"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColored"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugSphere"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugSphere"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radius"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugSphere"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sphere"
							var Type = "DebugSphere"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Boolean2x2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "GamepadEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Gamepad"
					var Type = "Gamepad"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Button"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FlickDirection"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FlickedStick"
					var Type = "FlickedStick"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetGamepad"
					var Description = ""
					var ReturnType = "Gamepad"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGamepad"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Gamepad"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetButton"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetButton"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFlickDirection"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFlickDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFlickedStick"
					var Description = ""
					var ReturnType = "FlickedStick"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFlickedStick"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "FlickedStick"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Cog"
			var BaseClass = "Object"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Archetype"
					var Type = "Archetype"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "BaseArchetype"
					var Type = "Archetype"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Space"
					var Type = "Space"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LevelSettings"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "GameSession"
					var Type = "GameSession"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Actions"
					var Type = "Actions"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "RuntimeId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Transient"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Persistent"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EditorViewportHidden"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ObjectViewHidden"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Locked"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ComponentCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Parent"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Children"
					var Type = "HierarchyListRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "MarkedForDestruction"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetName"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetArchetype"
					var Description = ""
					var ReturnType = "Archetype"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetArchetype"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Archetype"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBaseArchetype"
					var Description = ""
					var ReturnType = "Archetype"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpace"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLevelSettings"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGameSession"
					var Description = ""
					var ReturnType = "GameSession"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetActions"
					var Description = ""
					var ReturnType = "Actions"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRuntimeId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTransient"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTransient"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPersistent"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPersistent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEditorViewportHidden"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEditorViewportHidden"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObjectViewHidden"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetObjectViewHidden"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocked"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocked"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Destroy"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clone"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddComponentByType"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "componentType"
							var Type = "BoundType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddComponentByName"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetComponentByName"
					var Description = ""
					var ReturnType = "Component"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "componentTypeName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetComponentByIndex"
					var Description = ""
					var ReturnType = "Component"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetComponentCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetComponentIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "componentType"
							var Type = "BoundType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveComponentByType"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "componentType"
							var Type = "BoundType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveComponentByName"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "typeName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetParent"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindRoot"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetChildren"
					var Description = ""
					var ReturnType = "HierarchyListRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AttachToPreserveLocal"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "parent"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AttachTo"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "parent"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DetachPreserveLocal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Detach"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindChildByName"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindAllChildrenByName"
					var Description = ""
					var ReturnType = "HierarchyNameRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsDescendant"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindNextSibling"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindPreviousSibling"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindNextInOrder"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindPreviousInOrder"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PlaceBeforeSibling"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sibling"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PlaceAfterSibling"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sibling"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReplaceChild"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "oldChild"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "newChild"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsModifiedFromArchetype"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearArchetype"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UploadToArchetype"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindNearestArchetype"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindRootArchetype"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchEvent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchDown"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMarkedForDestruction"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugDraw"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SanitizeName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cog"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "CogNameChanged"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"Cog"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "TransformUpdated"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"Cog"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "CogDestroy"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"Cog"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "CogDelayedDestroy"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"Cog"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "BaseCastFilter"
			var BaseClass = ""
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "IgnoreStatic"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreDynamic"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreKinematic"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreGhost"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IgnoreChildren"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetIgnoreStatic"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreStatic"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreDynamic"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreDynamic"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreKinematic"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreKinematic"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreGhost"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreGhost"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIgnoreChildren"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIgnoreChildren"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "RingGizmoEvent"
			var BaseClass = "GizmoUpdateEvent"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "WorldRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldRotationAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RadiansAroundAxis"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaRadiansAroundAxis"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetWorldRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldRotationAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldRotationAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRadiansAroundAxis"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadiansAroundAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaRadiansAroundAxis"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaRadiansAroundAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CollisionGroupEvent"
			var BaseClass = "BaseCollisionEvent"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TypeAName"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TypeBName"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "FirstPoint"
					var Type = "ContactPoint"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTypeAName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTypeBName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFirstPoint"
					var Description = ""
					var ReturnType = "ContactPoint"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ObjectLink"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ObjectAPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ObjectBPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ObjectA"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ObjectB"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetObjectAPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetObjectAPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObjectBPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetObjectBPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObjectA"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetObjectA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObjectB"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetObjectB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ObjectLink"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "ObjectLinkChanged"
					var Type = "ObjectLinkEvent"
					var Senders = Array
					{
						"ObjectLink"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ObjectLinkPointChanged"
					var Type = "ObjectLinkPointChangedEvent"
					var Senders = Array
					{
						"ObjectLink"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SubConvexMesh"
			var BaseClass = "SafeId32Object"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Physics"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Indices"
					var Type = "MultiConvexMeshIndexData"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TriangleIndices"
					var Type = "MultiConvexMeshIndexData"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Mesh"
					var Type = "MultiConvexMesh"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Valid"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetIndices"
					var Description = ""
					var ReturnType = "MultiConvexMeshIndexData"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTriangleIndices"
					var Description = ""
					var ReturnType = "MultiConvexMeshIndexData"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMesh"
					var Description = ""
					var ReturnType = "MultiConvexMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMesh"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "MultiConvexMesh"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetValid"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "HighPassNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "CutoffFrequency"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCutoffFrequency"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCutoffFrequency"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundEmitter"
			var BaseClass = "Component"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Volume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Decibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Pitch"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Semitones"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Directional"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EmitAngle"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RearVolume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Attenuator"
					var Type = "SoundAttenuator"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Paused"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IsPlaying"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "InputNode"
					var Type = "SoundNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OutputNode"
					var Type = "SoundNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SoundNodeInput"
					var Type = "SoundNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SoundNodeOutput"
					var Type = "SoundNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPitch"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPitch"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSemitones"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSemitones"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirectional"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDirectional"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEmitAngle"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEmitAngle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRearVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRearVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttenuator"
					var Description = ""
					var ReturnType = "SoundAttenuator"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttenuator"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SoundAttenuator"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPaused"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPaused"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PlayCue"
					var Description = ""
					var ReturnType = "SoundInstance"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cue"
							var Type = "SoundCue"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PlayCuePaused"
					var Description = ""
					var ReturnType = "SoundInstance"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cue"
							var Type = "SoundCue"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsPlaying"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolatePitch"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "pitch"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateSemitones"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "pitch"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "volume"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "decibels"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInputNode"
					var Description = ""
					var ReturnType = "SoundNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOutputNode"
					var Description = ""
					var ReturnType = "SoundNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSoundNodeInput"
					var Description = ""
					var ReturnType = "SoundNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSoundNodeOutput"
					var Description = ""
					var ReturnType = "SoundNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SoundEmitter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Actions"
			var BaseClass = "ActionSet"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "BandPassNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "CentralFrequency"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QualityFactor"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCentralFrequency"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCentralFrequency"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQualityFactor"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQualityFactor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DebugText"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Position"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Rotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TextHeight"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Text"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Centered"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTextHeight"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTextHeight"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetText"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetText"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCentered"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCentered"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugText"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugText"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "textHeight"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "text"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "CollisionGroup"
			var BaseClass = "DataResource"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CreateRuntime"
					var Description = ""
					var ReturnType = "CollisionGroup"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RuntimeClone"
					var Description = ""
					var ReturnType = "CollisionGroup"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetLinkConnected"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirNetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Direction"
					var Type = "TransmissionDirection"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirection"
					var Description = ""
					var ReturnType = "TransmissionDirection"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PropertyRange"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "PropertyRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Current"
					var Type = "Property"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "PropertyRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "Property"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MoveNext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PropertyRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PropertyRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "PropertyRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "DebugLine"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Start"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "End"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HeadSize"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DualHeads"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "BoxHeads"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Filled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStart"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStart"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEnd"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEnd"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHeadSize"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHeadSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDualHeads"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDualHeads"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBoxHeads"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBoxHeads"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFilled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFilled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "headSize"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ray"
							var Type = "Ray"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "segment"
							var Type = "Segment"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ActionSequence"
			var BaseClass = "ActionSet"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AnimationGraphEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Animation"
					var Type = "Animation"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Node"
					var Type = "AnimationNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "PlayMode"
					var Type = "AnimationPlayMode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAnimation"
					var Description = ""
					var ReturnType = "Animation"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNode"
					var Description = ""
					var ReturnType = "AnimationNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPlayMode"
					var Description = ""
					var ReturnType = "AnimationPlayMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "IndexBuffer"
			var BaseClass = "SafeId32"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCount"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Add"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "BasicPointEffect"
			var BaseClass = "PhysicsEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "MinDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StrengthAtMin"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StrengthAtMax"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPositionOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InterpolationType"
					var Type = "PhysicsEffectInterpolationType"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EndCondition"
					var Type = "PhysicsEffectEndCondition"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMinDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMinDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStrengthAtMin"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStrengthAtMin"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStrengthAtMax"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStrengthAtMax"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPositionOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPositionOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInterpolationType"
					var Description = ""
					var ReturnType = "PhysicsEffectInterpolationType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInterpolationType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "PhysicsEffectInterpolationType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEndCondition"
					var Description = ""
					var ReturnType = "PhysicsEffectEndCondition"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEndCondition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "PhysicsEffectEndCondition"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "BasicDirectionEffect"
			var BaseClass = "PhysicsEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalSpaceDirection"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Strength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Direction"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldDirection"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalSpaceDirection"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalSpaceDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStrength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStrength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SphericalParticleEmitter"
			var BaseClass = "ParticleEmitterShared"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "SphericalParticleEmitter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ParticleAnimator"
			var BaseClass = "Component"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetHostRecord"
			var BaseClass = "SafeId32"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "IpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "BasicHostInfo"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Lifetime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBasicHostInfo"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLifetime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Property"
			var BaseClass = "Member"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Getter"
					var Type = "Function"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Setter"
					var Type = "Function"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetGetter"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSetter"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetValue"
					var Description = ""
					var ReturnType = "T"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "instance"
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "instance"
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ParticleSystem"
			var BaseClass = "Graphical"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "BoundingBoxSize"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ChildSystem"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SystemSpace"
					var Type = "SystemSpace"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WarmUpTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PreviewInEditor"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetBoundingBoxSize"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBoundingBoxSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetChildSystem"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetChildSystem"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSystemSpace"
					var Description = ""
					var ReturnType = "SystemSpace"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSystemSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SystemSpace"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWarmUpTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWarmUpTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPreviewInEditor"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPreviewInEditor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AllParticles"
					var Description = ""
					var ReturnType = "ParticleListRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "ParticlesSpawned"
					var Type = "ParticleEvent"
					var Senders = Array
					{
						"ParticleSystem"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "FieldRange"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "FieldRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Current"
					var Type = "Field"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "FieldRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "Field"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MoveNext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FieldRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FieldRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "FieldRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "SplineBakedPoint"
			var BaseClass = ""
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Position"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPosition"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPosition"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SplineBakedPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SplineBakedPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "LinearParticleAnimator"
			var BaseClass = "ParticleAnimator"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Force"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RandomForce"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Torque"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Growth"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Dampening"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Twist"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetForce"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetForce"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRandomForce"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRandomForce"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTorque"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTorque"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGrowth"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGrowth"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDampening"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDampening"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTwist"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTwist"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "LinearParticleAnimator"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "IndexedHalfEdgeMeshFaceArray"
			var BaseClass = "SafeId32Object"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "IndexedHalfEdgeMeshFaceArrayRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "IndexedHalfEdgeFace"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "IndexedHalfEdgeMeshFaceArrayRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ParticleTwister"
			var BaseClass = "ParticleAnimator"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Axis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Strength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MinDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStrength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStrength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMinDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMinDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ParticleTwister"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Resource"
			var BaseClass = "EventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SimpleSound"
			var BaseClass = "Component"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Cue"
					var Type = "SoundCue"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StartPlaying"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Positional"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IsPlaying"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Paused"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCue"
					var Description = ""
					var ReturnType = "SoundCue"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SoundCue"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStartPlaying"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStartPlaying"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPositional"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPositional"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsPlaying"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPaused"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPaused"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Play"
					var Description = ""
					var ReturnType = "SoundInstance"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Stop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SimpleSound"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "TranslateGizmo"
			var BaseClass = "Component"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "UpdateMode"
					var Type = "UpdateMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Snapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapMode"
					var Type = "GizmoSnapMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetUpdateMode"
					var Description = ""
					var ReturnType = "UpdateMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUpdateMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "UpdateMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapMode"
					var Description = ""
					var ReturnType = "GizmoSnapMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "GizmoSnapMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TranslateGizmo"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Library"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Sound"
			var BaseClass = "Resource"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Length"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Channels"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetChannels"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CustomJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ConstraintCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CreateConstraint"
					var Description = ""
					var ReturnType = "CustomConstraintInfo"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddConstraint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "constraint"
							var Type = "CustomConstraintInfo"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveConstraint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "constraint"
							var Type = "CustomConstraintInfo"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearConstraints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetConstraintCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetConstraint"
					var Description = ""
					var ReturnType = "CustomConstraintInfo"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CustomJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "ComputeCustomJointInfo"
					var Type = "CustomJointEvent"
					var Senders = Array
					{
						"CustomJoint"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "WheelJoint2d"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisA"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisB"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ShockAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldShockAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisA"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisB"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetShockAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetShockAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldShockAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldShockAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WheelJoint2d"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CommandEvent"
			var BaseClass = "ObjectEvent"
			var Library = "WidgetLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Space"
					var Type = "Space"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSpace"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AsyncProcess"
			var BaseClass = "ReferenceCountedEventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "StoreStandardOutputData"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StoreStandardErrorData"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StandardInput"
					var Type = "FileStream"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StandardOutput"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "StandardError"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Create"
					var Description = ""
					var ReturnType = "AsyncProcess"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Start"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "startInfo"
							var Type = "ProcessStartInfo"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsRunning"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WaitForClose"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WaitForClose"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "milliseconds"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Close"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Terminate"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStoreStandardOutputData"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStoreStandardOutputData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStoreStandardErrorData"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStoreStandardErrorData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStandardInput"
					var Description = ""
					var ReturnType = "FileStream"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStandardInput"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "FileStream"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStandardOutput"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStandardError"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "PartialStandardOutputResponse"
					var Type = "AsyncProcessEvent"
					var Senders = Array
					{
						"AsyncProcess"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "PartialStandardErrorResponse"
					var Type = "AsyncProcessEvent"
					var Senders = Array
					{
						"AsyncProcess"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "StandardOutputFinished"
					var Type = "Event"
					var Senders = Array
					{
						"AsyncProcess"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "StandardErrorFinished"
					var Type = "Event"
					var Senders = Array
					{
						"AsyncProcess"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundEntry"
			var BaseClass = "Object"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Sound"
					var Type = "Sound"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Weight"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StartTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EndTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LoopStartTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LoopEndTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LoopTailLength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CrossFadeLoopTail"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSound"
					var Description = ""
					var ReturnType = "Sound"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSound"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Sound"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWeight"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWeight"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStartTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStartTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEndTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEndTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLoopStartTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLoopStartTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLoopEndTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLoopEndTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLoopTailLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLoopTailLength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCrossFadeLoopTail"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCrossFadeLoopTail"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Preview"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StopPreview"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PositionJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PositionJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PhysicsMeshVertexData"
			var BaseClass = "SafeId32Object"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "PhysicsMeshVertexRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Add"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "PhysicsMeshVertexRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetChannel"
			var BaseClass = "SafeId32Object"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Networking"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetChannelType"
					var Type = "NetChannelType"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsScheduled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ChangeFlag"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LastChangeTimestamp"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LastChangeTimePassed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Authority"
					var Type = "Authority"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetChannelType"
					var Description = ""
					var ReturnType = "NetChannelType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsScheduled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WakeUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TakeNap"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetChangeFlag"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetChangeFlag"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReplicateNow"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLastChangeTimestamp"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLastChangeTimePassed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAuthority"
					var Description = ""
					var ReturnType = "Authority"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAuthority"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Authority"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "HasNetProperty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "component"
							var Type = "Component"
							var Description = ""
						}
						Parameter
						{
							var Name = "propertyName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetProperty"
					var Description = ""
					var ReturnType = "NetProperty"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "component"
							var Type = "Component"
							var Description = ""
						}
						Parameter
						{
							var Name = "propertyName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Enum"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "NetPeerClosed"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Joysticks"
			var BaseClass = "EventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "JoystickCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Joysticks"
					var Type = "JoystickRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetJoystickCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJoysticks"
					var Description = ""
					var ReturnType = "JoystickRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "JoystickFound"
					var Type = "JoystickEvent"
					var Senders = Array
					{
						"Joysticks"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "JoystickLost"
					var Type = "JoystickEvent"
					var Senders = Array
					{
						"Joysticks"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "JoysticksChanged"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"Joysticks"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Boolean2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YX"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XY"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YY"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Y"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Boolean2"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Boolean2"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "YAxis"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYX"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYY"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYAxis"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXY"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetY"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "OpcodeEvent"
			var BaseClass = "EventData"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Ray"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Start"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Direction"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPoint"
					var Description = "Returns the point at the given t-value."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "tValue"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTValue"
					var Description = "Returns the t-value that would result in the given point projected onto the ray."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStart"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStart"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Ray"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Ray"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Ray"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Ray"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "direction"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Frustum"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Plane"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Plane"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAabb"
					var Description = ""
					var ReturnType = "Aabb"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Frustum"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Frustum"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Frustum"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "CollisionStartBlock"
			var BaseClass = "CollisionFilterBlock"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CollisionStartBlock"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ObjectLinkEdge"
			var BaseClass = ""
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SelfCog"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OtherCog"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ObjectLink"
					var Type = "ObjectLink"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSelfCog"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOtherCog"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObjectLink"
					var Description = ""
					var ReturnType = "ObjectLink"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ObjectLinkEdge"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ObjectLinkEdge"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "ObjectLinkEdge"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetPeerOpened"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "LightningPluginConfig"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "AttemptedIdeToolsInstall"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAttemptedIdeToolsInstall"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttemptedIdeToolsInstall"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "LightningPluginConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "TimeSpace"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "GloballyPaused"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "DtOrZero"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TimeMode"
					var Type = "TimeMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MinDt"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxDt"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TimeScale"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Paused"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Dt"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "RealDt"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TimePassed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RealTimePassed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Frame"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StepCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "TogglePause"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Step"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGloballyPaused"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDtOrZero"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTimeMode"
					var Description = ""
					var ReturnType = "TimeMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTimeMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TimeMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMinDt"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMinDt"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxDt"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxDt"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTimeScale"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTimeScale"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPaused"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPaused"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDt"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRealDt"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTimePassed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTimePassed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRealTimePassed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRealTimePassed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFrame"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFrame"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStepCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStepCount"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TimeSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "LogicUpdate"
					var Type = "UpdateEvent"
					var Senders = Array
					{
						"TimeSpace"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "FrameUpdate"
					var Type = "UpdateEvent"
					var Senders = Array
					{
						"TimeSpace"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DelegateType"
			var BaseClass = "Type"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Signature"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Parameters"
					var Type = "DelegateParameterRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Return"
					var Type = "Type"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSignature"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetParameters"
					var Description = ""
					var ReturnType = "DelegateParameterRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReturn"
					var Description = ""
					var ReturnType = "Type"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "SweepResult"
			var BaseClass = ""
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Time"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OtherCollider"
					var Type = "Collider"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OtherObject"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Penetration"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldNormalTowardsSelf"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldNormalTowardsOther"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOtherCollider"
					var Description = ""
					var ReturnType = "Collider"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOtherObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPenetration"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldNormalTowardsSelf"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldNormalTowardsOther"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SweepResult"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SweepResult"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "SweepResult"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetPeerSentUserAddResponse"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirNetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirRequestBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurAddResponse"
					var Type = "NetUserAddResponse"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurResponseBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirNetUserId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirNetUser"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirRequestBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurAddResponse"
					var Description = ""
					var ReturnType = "NetUserAddResponse"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurResponseBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirNetUserId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirNetUser"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "TextEditorConfig"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TabWidth"
					var Type = "TabWidth"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ShowWhiteSpace"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LineNumbers"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CodeFolding"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ConfidentAutoCompleteOnSymbols"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalWordCompletion"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "KeywordAndTypeCompletion"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AutoCompleteOnEnter"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ColorScheme"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FontSize"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTabWidth"
					var Description = ""
					var ReturnType = "TabWidth"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTabWidth"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TabWidth"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetShowWhiteSpace"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetShowWhiteSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLineNumbers"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLineNumbers"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCodeFolding"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCodeFolding"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetConfidentAutoCompleteOnSymbols"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetConfidentAutoCompleteOnSymbols"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalWordCompletion"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalWordCompletion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetKeywordAndTypeCompletion"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetKeywordAndTypeCompletion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoCompleteOnEnter"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoCompleteOnEnter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetColorScheme"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColorScheme"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFontSize"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFontSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TextEditorConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MemoryLeakEvent"
			var BaseClass = "EventData"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Archetype"
			var BaseClass = "Resource"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "RenderGroup"
			var BaseClass = "DataResource"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SerializedList"
					var Type = "MaterialList"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ReferencedByList"
					var Type = "MaterialList"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "GraphicalSortMethod"
					var Type = "GraphicalSortMethod"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSerializedList"
					var Description = ""
					var ReturnType = "MaterialList"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReferencedByList"
					var Description = ""
					var ReturnType = "MaterialList"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGraphicalSortMethod"
					var Description = ""
					var ReturnType = "GraphicalSortMethod"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGraphicalSortMethod"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "GraphicalSortMethod"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundEvent"
			var BaseClass = "Event"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YX"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XY"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YY"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Y"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Integer2"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Integer2"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "YAxis"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveMax"
					var Type = "Integer2"
					var Description = "The largest (most positive) value that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "Integer2"
					var Description = "The positive value closest to zero that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeValueClosestToZero"
					var Type = "Integer2"
					var Description = "The negative value closest to zero that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeMin"
					var Type = "Integer2"
					var Description = "The smallest (most negative) value that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYX"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYY"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYAxis"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeValueClosestToZero"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeMin"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXY"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "IEncoding"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Ascii"
					var Type = "AsciiEncoding"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Utf8"
					var Type = "Utf8Encoding"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Write"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Rune"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "IStream"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Read"
					var Description = ""
					var ReturnType = "Rune"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "IStream"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAscii"
					var Description = ""
					var ReturnType = "AsciiEncoding"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetUtf8"
					var Description = ""
					var ReturnType = "Utf8Encoding"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "IEncoding"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Boolean4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWW"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWW"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YX"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZX"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WX"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XY"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YY"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZY"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WY"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZ"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZ"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZ"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZ"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XW"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YW"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZW"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WW"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Y"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Z"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "W"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Boolean4"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Boolean4"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "YAxis"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ZAxis"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "WAxis"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYX"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZX"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWX"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYY"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZY"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWY"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZ"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZ"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZ"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXW"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYW"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWW"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYAxis"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZAxis"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetWAxis"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXYZW"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZW"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXY"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZ"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZW"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetY"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZ"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetW"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "CollisionEvent"
			var BaseClass = "BaseCollisionEvent"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "FirstPoint"
					var Type = "ContactPoint"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetFirstPoint"
					var Description = ""
					var ReturnType = "ContactPoint"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Transform"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Translation"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Rotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Scale"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EulerAngles"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalScale"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalTranslation"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldScale"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldTranslation"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldMatrix"
					var Type = "Real4x4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Parent"
					var Type = "Transform"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTranslation"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTranslation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetScale"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetScale"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRotationBases"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "facing"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "right"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TransformNormal"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "normal"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TransformPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TransformNormalLocal"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "normal"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TransformPointLocal"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TransformNormalInverse"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "normal"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TransformPointInverse"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RotateLocal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rotation"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RotateWorld"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rotation"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RotateAround"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "rotation"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RotateAnglesLocal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "angles"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RotateAnglesWorld"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "angles"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEulerAnglesXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "xRadians"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "yRadians"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "zRadians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEulerAngles"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEulerAngles"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalScale"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalScale"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalTranslation"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalTranslation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldScale"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldScale"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldTranslation"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldTranslation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldMatrix"
					var Description = ""
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetParent"
					var Description = ""
					var ReturnType = "Transform"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Transform"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CollisionPersistedBlock"
			var BaseClass = "CollisionFilterBlock"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CollisionPersistedBlock"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DebugArc"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Start"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Mid"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "End"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStart"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStart"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMid"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMid"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEnd"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEnd"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugArc"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugArc"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "mid"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "GravityEffect"
			var BaseClass = "BasicDirectionEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GravityEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SplineSampleData"
			var BaseClass = ""
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Point"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Tangent"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldTangent"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTangent"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTangent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldTangent"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldTangent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SplineSampleData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetObjectOnline"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "GameSession"
					var Type = "GameSession"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Space"
					var Type = "Space"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Object"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsStartOfLifespan"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetGameSession"
					var Description = ""
					var ReturnType = "GameSession"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpace"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsStartOfLifespan"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PhysicsSpace"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SubStepCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AllowSleep"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Mode2D"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Deterministic"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CollisionTable"
					var Type = "CollisionTable"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PhysicsSolverConfig"
					var Type = "PhysicsSolverConfig"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DynamicBroadphaseType"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StaticBroadphaseType"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSubStepCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSubStepCount"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAllowSleep"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAllowSleep"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMode2D"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMode2D"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeterministic"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeterministic"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCollisionTable"
					var Description = ""
					var ReturnType = "CollisionTable"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCollisionTable"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CollisionTable"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPhysicsSolverConfig"
					var Description = ""
					var ReturnType = "PhysicsSolverConfig"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPhysicsSolverConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "PhysicsSolverConfig"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDynamicBroadphaseType"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDynamicBroadphaseType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStaticBroadphaseType"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStaticBroadphaseType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddPairFilter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog1"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "cog2"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddHierarchyPairFilter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog1"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "cog2"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemovePairFilter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog1"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "cog2"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveHierarchyPairFilter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog1"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "cog2"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FlushPhysicsQueue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastRayFirst"
					var Description = ""
					var ReturnType = "CastResult"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "worldRay"
							var Type = "Ray"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastRayFirst"
					var Description = ""
					var ReturnType = "CastResult"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "worldRay"
							var Type = "Ray"
							var Description = ""
						}
						Parameter
						{
							var Name = "filter"
							var Type = "CastFilter"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastRay"
					var Description = ""
					var ReturnType = "CastResultsRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "worldRay"
							var Type = "Ray"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxCount"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastRay"
					var Description = ""
					var ReturnType = "CastResultsRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "worldRay"
							var Type = "Ray"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxCount"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "filter"
							var Type = "CastFilter"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastSegment"
					var Description = ""
					var ReturnType = "CastResultsRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "segment"
							var Type = "Segment"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxCount"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastSegment"
					var Description = ""
					var ReturnType = "CastResultsRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "segment"
							var Type = "Segment"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxCount"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "filter"
							var Type = "CastFilter"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastAabb"
					var Description = ""
					var ReturnType = "CastResultsRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "aabb"
							var Type = "Aabb"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxCount"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "filter"
							var Type = "CastFilter"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastSphere"
					var Description = ""
					var ReturnType = "CastResultsRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sphere"
							var Type = "Sphere"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxCount"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "filter"
							var Type = "CastFilter"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastFrustum"
					var Description = ""
					var ReturnType = "CastResultsRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "frustum"
							var Type = "Frustum"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxCount"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "filter"
							var Type = "CastFilter"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CastCollider"
					var Description = ""
					var ReturnType = "CastResultsRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "offset"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "testCollider"
							var Type = "Collider"
							var Description = ""
						}
						Parameter
						{
							var Name = "filter"
							var Type = "CastFilter"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchWithinSphere"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sphere"
							var Type = "Sphere"
							var Description = ""
						}
						Parameter
						{
							var Name = "eventName"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "toSend"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchWithinSphere"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sphere"
							var Type = "Sphere"
							var Description = ""
						}
						Parameter
						{
							var Name = "filter"
							var Type = "CastFilter"
							var Description = ""
						}
						Parameter
						{
							var Name = "eventName"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "toSend"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchWithinAabb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "aabb"
							var Type = "Aabb"
							var Description = ""
						}
						Parameter
						{
							var Name = "eventName"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "toSend"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchWithinAabb"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "aabb"
							var Type = "Aabb"
							var Description = ""
						}
						Parameter
						{
							var Name = "filter"
							var Type = "CastFilter"
							var Description = ""
						}
						Parameter
						{
							var Name = "eventName"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "toSend"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SweepCollider"
					var Description = ""
					var ReturnType = "SweepResultRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "collider"
							var Type = "Collider"
							var Description = ""
						}
						Parameter
						{
							var Name = "velocity"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "dt"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "filter"
							var Type = "CastFilter"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateJoint"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog0"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "cog1"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "jointName"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPoint"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WhyAreTheyNotColliding"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog1"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "cog2"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PhysicsSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "GroupCollisionStarted"
					var Type = "CollisionGroupEvent"
					var Senders = Array
					{
						"PhysicsSpace"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GroupCollisionEnded"
					var Type = "CollisionGroupEvent"
					var Senders = Array
					{
						"PhysicsSpace"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "PhysicsUpdateFinished"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"PhysicsSpace"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ResourceTable"
			var BaseClass = "DataResource"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "All"
					var Type = "ResourceTableEntryRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ResourceType"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxWeight"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CreateRuntime"
					var Description = ""
					var ReturnType = "ResourceTable"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RuntimeClone"
					var Description = ""
					var ReturnType = "ResourceTable"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddOrError"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "entry"
							var Type = "ResourceTableEntry"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddOrIgnore"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "entry"
							var Type = "ResourceTableEntry"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddOrOverwrite"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "entry"
							var Type = "ResourceTableEntry"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOrDefault"
					var Description = ""
					var ReturnType = "ResourceTableEntry"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "defaultValue"
							var Type = "ResourceTableEntry"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOrError"
					var Description = ""
					var ReturnType = "ResourceTableEntry"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOrNull"
					var Description = ""
					var ReturnType = "ResourceTableEntry"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "ResourceTableEntry"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "entry"
							var Type = "ResourceTableEntry"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "ResourceTableEntry"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "entry"
							var Type = "ResourceTableEntry"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "entry"
							var Type = "ResourceTableEntry"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "ResourceTableEntry"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "entry"
							var Type = "ResourceTableEntry"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveAt"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveOrError"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveOrIgnore"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Contains"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "key"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "ResourceTableEntryRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetResourceType"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetResourceType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxWeight"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxWeight"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SampleIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "random1"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "random2"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Sample"
					var Description = ""
					var ReturnType = "ResourceTableEntry"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "random1"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "random2"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ForceRebuild"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "JointCreator"
			var BaseClass = ""
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "OverrideLength"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseCenter"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AutoSnaps"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AttachToWorld"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AttachToCommonParent"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Create"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "objectA"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "objectB"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "jointName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateWorldPoints"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "objectA"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "objectB"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "jointName"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "bothWorldPoints"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateWorldPoints"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "objectA"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "objectB"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "jointName"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPointA"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPointB"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateLocalPoints"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "objectA"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "objectB"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "jointName"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "localPointA"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "localPointB"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddJointLimit"
					var Description = ""
					var ReturnType = "JointLimit"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "joint"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddJointMotor"
					var Description = ""
					var ReturnType = "JointMotor"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "joint"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddJointSpring"
					var Description = ""
					var ReturnType = "JointSpring"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "joint"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOverrideLength"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOverrideLength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseCenter"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseCenter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoSnaps"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoSnaps"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttachToWorld"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttachToWorld"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttachToCommonParent"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttachToCommonParent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "JointCreator"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "LinearAxisJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "WorldAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetWorldAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "LinearAxisJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Skeleton"
			var BaseClass = "Component"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Skeleton"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "RuneIterator"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "RuneIterator"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Current"
					var Type = "Rune"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ByteIndex"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OriginalString"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "RuneIterator"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MoveNext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "Rune"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Increment"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Decrement"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Equals"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "RuneIterator"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByteIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOriginalString"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RuneIterator"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "DelayNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Delay"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FeedbackPercent"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FeedbackValue"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WetPercent"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WetValue"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetDelay"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDelay"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFeedbackPercent"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFeedbackPercent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFeedbackValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFeedbackValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWetPercent"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWetPercent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWetValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWetValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateWetPercent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "wetPercent"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "time"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateWetValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer3x3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Sprite"
			var BaseClass = "BaseSprite"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SpriteSource"
					var Type = "SpriteSource"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FlipX"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FlipY"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AnimationActive"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AnimationSpeed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StartFrame"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CurrentFrame"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSpriteSource"
					var Description = ""
					var ReturnType = "SpriteSource"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpriteSource"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SpriteSource"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFlipX"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFlipX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFlipY"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFlipY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAnimationActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAnimationActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAnimationSpeed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAnimationSpeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStartFrame"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStartFrame"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrentFrame"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCurrentFrame"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Sprite"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Boolean4x2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M30"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M31"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM30"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM30"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM31"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM31"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m30"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m31"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean4x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "CustomAudioNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Channels"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MinimumBufferSize"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SystemSampleRate"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetChannels"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetChannels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMinimumBufferSize"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSystemSampleRate"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SendBuffer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "buffer"
							var Type = "SoundBuffer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SendPartialBuffer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "buffer"
							var Type = "SoundBuffer"
							var Description = ""
						}
						Parameter
						{
							var Name = "startAtIndex"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "howManySamples"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SendMicUncompressedData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Array[Real]"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SendMicCompressedData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Array[Byte]"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "CustomAudioNodeSamplesNeeded"
					var Type = "CustomAudioNodeEvent"
					var Senders = Array
					{
						"CustomAudioNode"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PhyGunJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TargetPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TargetRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldRotation"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTargetPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTargetPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTargetRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTargetRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldRotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldRotation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PhyGunJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Real3x3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "SoundInstance"
			var BaseClass = "ReferenceCountedEventObject"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Volume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Decibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Pitch"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Semitones"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "IsPlaying"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SoundNode"
					var Type = "SoundNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Paused"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Looping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Time"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FileLength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "EndTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CustomEventTime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SoundName"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPitch"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPitch"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSemitones"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSemitones"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsPlaying"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSoundNode"
					var Description = ""
					var ReturnType = "SoundNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolatePitch"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "pitch"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateSemitones"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "pitchSemitones"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "volume"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "decibels"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPaused"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPaused"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Stop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLooping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLooping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFileLength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEndTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEndTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCustomEventTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCustomEventTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSoundName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "SoundLooped"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundInstance"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "SoundStopped"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundInstance"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MusicBeat"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundInstance"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MusicBar"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundInstance"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MusicEighthNote"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundInstance"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MusicQuarterNote"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundInstance"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MusicHalfNote"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundInstance"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MusicWholeNote"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundInstance"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MusicCustomTime"
					var Type = "SoundInstanceEvent"
					var Senders = Array
					{
						"SoundInstance"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "HeightMapCollider"
			var BaseClass = "Collider"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Thickness"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetThickness"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetThickness"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearCachedEdgeAdjacency"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "HeightMapCollider"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Real"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Real"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Real"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveMax"
					var Type = "Real"
					var Description = "The largest (most positive) value that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "Real"
					var Description = "The positive value closest to zero that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeValueClosestToZero"
					var Type = "Real"
					var Description = "The negative value closest to zero that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeMin"
					var Type = "Real"
					var Description = "The smallest (most negative) value that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Reinterpret"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Parse"
					var Description = "Attempt to convert the given StringRange to a Real. If parsing fails 0 is returned."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeValueClosestToZero"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeMin"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "NetChannelType"
			var BaseClass = "SafeId32Object"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Networking"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "DetectOutgoingChanges"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AcceptIncomingChanges"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EventOnOutgoingPropertyChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EventOnIncomingPropertyChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AuthorityMode"
					var Type = "AuthorityMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AuthorityDefault"
					var Type = "Authority"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AllowRelay"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AllowNapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AwakeDuration"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DetectionMode"
					var Type = "DetectionMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AwakeDetectionInterval"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "NapDetectionInterval"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReplicateOnOnline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReplicateOnOffline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SerializationMode"
					var Type = "SerializationMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReliabilityMode"
					var Type = "ReliabilityMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TransferMode"
					var Type = "TransferMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AccurateTimestampOnChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ResetConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netChannelConfig"
							var Type = "NetChannelConfig"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDetectOutgoingChanges"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDetectOutgoingChanges"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAcceptIncomingChanges"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAcceptIncomingChanges"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEventOnOutgoingPropertyChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEventOnOutgoingPropertyChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEventOnIncomingPropertyChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEventOnIncomingPropertyChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAuthorityMode"
					var Description = ""
					var ReturnType = "AuthorityMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAuthorityMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "AuthorityMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAuthorityDefault"
					var Description = ""
					var ReturnType = "Authority"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAuthorityDefault"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Authority"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAllowRelay"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAllowRelay"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAllowNapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAllowNapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAwakeDuration"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAwakeDuration"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDetectionMode"
					var Description = ""
					var ReturnType = "DetectionMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDetectionMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DetectionMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAwakeDetectionInterval"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAwakeDetectionInterval"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNapDetectionInterval"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNapDetectionInterval"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReplicateOnOnline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReplicateOnOnline"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReplicateOnOffline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReplicateOnOffline"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSerializationMode"
					var Description = ""
					var ReturnType = "SerializationMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSerializationMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SerializationMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReliabilityMode"
					var Description = ""
					var ReturnType = "ReliabilityMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReliabilityMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "ReliabilityMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTransferMode"
					var Description = ""
					var ReturnType = "TransferMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTransferMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TransferMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAccurateTimestampOnChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAccurateTimestampOnChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Function"
			var BaseClass = "Member"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Type"
					var Type = "DelegateType"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetType"
					var Description = ""
					var ReturnType = "DelegateType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateDelegate"
					var Description = ""
					var ReturnType = "T"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "instance"
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Invoke"
					var Description = ""
					var ReturnType = "T"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "instance"
							var Type = "T"
							var Description = ""
						}
						Parameter
						{
							var Name = "arguments"
							var Type = "Array[T]"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Component"
			var BaseClass = "Object"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Owner"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Space"
					var Type = "Space"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LevelSettings"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "GameSession"
					var Type = "GameSession"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetOwner"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpace"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLevelSettings"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGameSession"
					var Description = ""
					var ReturnType = "GameSession"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugDraw"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Component"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Math"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Pi"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "E"
					var Type = "Real"
					var Description = "Euler's number."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "RotateVector"
					var Description = "Rotate a vector about an axis by the given radians."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "vector"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "axis"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AngleBetween"
					var Description = "Returns the angle between two Real2s in radians."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AngleBetween"
					var Description = "Returns the angle between two Real3s in radians."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AngleBetween"
					var Description = "Returns the angle between two Real4s in radians."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AngleBetween"
					var Description = "Returns the angle between two Quaternions in radians."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Quaternion"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Slerp"
					var Description = "Spherical linear interpolation. Used to interpolate between two vectors by the parameter t."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Slerp"
					var Description = "Spherical linear interpolation. Used to interpolate between two vectors by the parameter t."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Slerp"
					var Description = "Spherical linear interpolation. Used to interpolate between two rotations by the parameter t."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Quaternion"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Quaternion"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RotateTowards"
					var Description = "Rotate a vector towards another vector changing at most maxRadians."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxRadians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RotateTowards"
					var Description = "Rotate a vector towards another vector changing at most maxRadians."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxRadians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RotateTowards"
					var Description = "Rotate a quaternion towards another quaternion changing at most maxRadians."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Quaternion"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Quaternion"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxRadians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SignedAngle"
					var Description = "Get the rotation angle between two vectors in radians."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Angle2D"
					var Description = "Computes the angle (in radians) about the z-axis between the vector and the x-axis."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ProjectOnVector"
					var Description = "Projects the input vector onto the given normalized vector."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeProjected"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "normalizedVector"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ProjectOnVector"
					var Description = "Projects the input vector onto the given normalized vector."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeProjected"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "normalizedVector"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ProjectOnVector"
					var Description = "Projects the input vector onto the given normalized vector."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeProjected"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "normalizedVector"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Project"
					var Description = "Projects the input vector onto the given normalized vector. Note: This function is legacy. Instead call ProjectOnVector."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeProjected"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "normalizedVector"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ProjectOnPlane"
					var Description = "Projects the input vector onto plane defined by the given normal."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeProjected"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "planeNormal"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ProjectOnPlane"
					var Description = "Projects the input vector onto plane defined by the given normal."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeProjected"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "planeNormal"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ProjectOnPlane"
					var Description = "Projects the input vector onto plane defined by the given normal."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeProjected"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "planeNormal"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ReflectAcrossPlane"
					var Description = "Reflects the input vector across the plane defined by the given normal."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeReflected"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "planeNormal"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ReflectAcrossPlane"
					var Description = "Reflects the input vector across the plane defined by the given normal."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeReflected"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "planeNormal"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ReflectAcrossPlane"
					var Description = "Reflects the input vector across the plane defined by the given normal."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeReflected"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "planeNormal"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ReflectAcrossVector"
					var Description = "Reflects the input vector across the given vector."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeReflected"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "vector"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ReflectAcrossVector"
					var Description = "Reflects the input vector across the given vector."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeReflected"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "vector"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ReflectAcrossVector"
					var Description = "Reflects the input vector across the given vector."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeReflected"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "vector"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Refract"
					var Description = "Calculates the refraction vector through a plane given a certain index of refraction."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeRefracted"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "planeNormal"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "refractionIndex"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Refract"
					var Description = "Calculates the refraction vector through a plane given a certain index of refraction."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeRefracted"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "planeNormal"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "refractionIndex"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Refract"
					var Description = "Calculates the refraction vector through a plane given a certain index of refraction."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toBeRefracted"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "planeNormal"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "refractionIndex"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToQuaternion"
					var Description = "Generates the quaternion that rotates about the axis vector by the given radians."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "axis"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AxisAngle"
					var Description = "Generates the quaternion that rotates about the axis vector by the given radians."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "axis"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToQuaternion"
					var Description = "Generates the orientation represented by the given facing and up vectors."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "facing"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToQuaternion"
					var Description = "Generates the orientation represented by the given facing, up, and right vectors."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "facing"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "right"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToQuaternion"
					var Description = "Generates the orientation from the given Euler angles."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "xRadians"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "yRadians"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "zRadians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToQuaternion"
					var Description = "Generates the orientation from the given Euler angle vector"
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eulerRadians"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Euler"
					var Description = "Generates the orientation from the given Euler angle vector"
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eulerRadians"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToQuaternion"
					var Description = "Converts a rotation matrix into a quaternion."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rotationMatrix"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RotationQuaternionBetween"
					var Description = "Generates the quaternion that rotates from parameter 1 to parameter 2."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToReal3x3"
					var Description = "Generates the three dimensional rotation matrix that rotates about 'axis' by 'radians'."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "axis"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToReal3x3"
					var Description = "Generates the orientation represented by the given facing and up vectors."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "facing"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToReal3x3"
					var Description = "Generates the orientation represented by the given facing, up, and right vectors."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "facing"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "right"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToReal3x3"
					var Description = "Generates the orientation from the given Euler angles."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "xRadians"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "yRadians"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "zRadians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToReal3x3"
					var Description = "Converts a quaternion into a rotation matrix."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rotation"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Dot"
					var Description = "The vector dot product"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Dot"
					var Description = "The vector dot product"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Dot"
					var Description = "The vector dot product"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Dot"
					var Description = "The vector dot product"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Quaternion"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cross"
					var Description = "The vector cross product. Creates a new vector perpendicular to p0 and p1 using the right hand rule."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cross"
					var Description = "2D cross product. Equivalent to Cross(Real3(p0.x, p0.y, 0), Real3(p1.x, p1.y, 0))."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cross"
					var Description = "2D cross product. Equivalent to Cross(Real3(0, 0, p0), Real3(p1.x, p1.y, 0))."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cross"
					var Description = "2D cross product. Equivalent to Cross(Real3(p0.x, p0.y, 0), Real3(0, 0, p1))."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "LengthSq"
					var Description = "The squared length of the vector. Used to avoid a square root when possible."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "LengthSq"
					var Description = "The squared length of the vector. Used to avoid a square root when possible."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "LengthSq"
					var Description = "The squared length of the vector. Used to avoid a square root when possible."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "LengthSq"
					var Description = "The squared length of the vector. Used to avoid a square root when possible."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Length"
					var Description = "The length of the vector."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Length"
					var Description = "The length of the vector."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Length"
					var Description = "The length of the vector."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Length"
					var Description = "The length of the vector."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Distance"
					var Description = "Returns the distance between two points."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Distance"
					var Description = "Returns the distance between two points."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Distance"
					var Description = "Returns the distance between two points."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "DistanceSq"
					var Description = "Returns the squared distance between two points."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "DistanceSq"
					var Description = "Returns the squared distance between two points."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "DistanceSq"
					var Description = "Returns the squared distance between two points."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Normalize"
					var Description = "Returns a vector that points in the same direction but has a length of 1."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Normalize"
					var Description = "Returns a vector that points in the same direction but has a length of 1."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Normalize"
					var Description = "Returns a vector that points in the same direction but has a length of 1."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Normalize"
					var Description = "Returns a unit quaternion that represents a pure rotation."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPi"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetE"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Creates a new rotation that represents rotating by parameter 2 and then parameter 1."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Quaternion"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Creates a new vector that represents parameter 2 being rotated by parameter 1."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Quaternion"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Invert"
					var Description = "Returns the inverse rotation."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Determinant"
					var Description = "Computes the determinant of the given matrix"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Determinant"
					var Description = "Computes the determinant of the given matrix"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Determinant"
					var Description = "Computes the determinant of the given matrix"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Invert"
					var Description = "Computes the inverse of the given matrix if it exists. Undefined if the matrix is uninvertible"
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Invert"
					var Description = "Computes the inverse of the given matrix if it exists. Undefined if the matrix is uninvertible"
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Invert"
					var Description = "Computes the inverse of the given matrix if it exists. Undefined if the matrix is uninvertible"
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Boolean2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Boolean3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Boolean4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Boolean2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Boolean3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Boolean4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Boolean2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Boolean3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Transpose"
					var Description = "Returns the transposed matrix. A transposed matrix is one where all rows are turned into columns, i.e. A^T[j][i] = A[i][j]"
					var ReturnType = "Boolean4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Multiply"
					var Description = "Multiplies the two matrices together. Matrix multiplication is in right-to-left order, that is if the matrices represent transformations, then 'the' is applied first followed by 'by'."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Integer4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MultiplyPoint"
					var Description = "Multiplies the given vector as a point while performing the homogeneous division"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MultiplyPointNoDivide"
					var Description = "Multiplies the given vector as a point without performing the homogeneous division"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MultiplyNormal"
					var Description = "Multiplies the given vector as a vector (0 for the last component)"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MultiplyPoint"
					var Description = "Multiplies the given vector as a point while performing the homogeneous division"
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MultiplyPointNoDivide"
					var Description = "Multiplies the given vector as a point without performing the homogeneous division"
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MultiplyNormal"
					var Description = "Multiplies the given vector as a vector (0 for the last component)"
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MultiplyPoint"
					var Description = "Multiplies the given vector as a point while performing the homogeneous division"
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MultiplyPointNoDivide"
					var Description = "Multiplies the given vector as a point without performing the homogeneous division"
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "MultiplyNormal"
					var Description = "Multiplies the given vector as a vector (0 for the last component)"
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "by"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "the"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateScaleMatrix2x2"
					var Description = "Generates a two-dimensional scale matrix."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scale"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateRotationMatrix2x2"
					var Description = "Generates a two-dimensional rotation matrix."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateTransformMatrix2x2"
					var Description = "Generates a two-dimensional transform."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "scale"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateScaleMatrix3x3"
					var Description = "Generates a two-dimensional scale matrix."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scale"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateScaleMatrix3x3"
					var Description = "Generates a three-dimensional scale matrix."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scale"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateRotationMatrix3x3"
					var Description = "Generates a two-dimensional rotation matrix."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateRotationMatrix3x3"
					var Description = "Generates a three-dimensional rotation matrix."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "axis"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateTranslationMatrix3x3"
					var Description = "Generates a two-dimensional translation matrix."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "translation"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateTransformMatrix3x3"
					var Description = "Generates a two-dimensions transform."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "translation"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "scale"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateTransformMatrix3x3"
					var Description = "Generates a three-dimensions transform."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rotation"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "scale"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateTransformMatrix3x3"
					var Description = "Generates a three-dimensions transform."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rotation"
							var Type = "Quaternion"
							var Description = ""
						}
						Parameter
						{
							var Name = "scale"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateScaleMatrix4x4"
					var Description = "Generates a three-dimensional scale matrix."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scale"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateRotationMatrix4x4"
					var Description = "Generates a three-dimensional rotation matrix."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "axis"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateTranslationMatrix4x4"
					var Description = "Generates a three-dimensional translation matrix."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "translation"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateTransformMatrix4x4"
					var Description = "Generates a three-dimensional translation matrix."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "translation"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "rotation"
							var Type = "Quaternion"
							var Description = ""
						}
						Parameter
						{
							var Name = "scale"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GenerateTransformMatrix4x4"
					var Description = "Generates a three-dimensional translation matrix."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "translation"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "rotation"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "scale"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc)."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc)."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc)."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc)."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero)."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc)."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc)."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root"
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc)."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc)."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real4"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ACos"
					var Description = "The transcendental function arc-cosine Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ASin"
					var Description = "The transcendental function arc-sine Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan"
					var Description = "The transcendental function arc-tangent. The return type is in radians. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "units"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ATan2"
					var Description = "Performs the arc-tangent using the signs of x and y to determine what quadrant the angle lies in. Returns a value in the range of [-pi, pi]. The return type is in radians. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Ceil"
					var Description = "Rounds value upward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cos"
					var Description = "The transcendental function cosine. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Cosh"
					var Description = "The hyperbolic cosine function. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp"
					var Description = "Returns the base-e exponentiation of value, which is e^value. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Exp2"
					var Description = "Returns the base-2 exponentiation of value, which is 2^value. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Floor"
					var Description = "Rounds value downward. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FMod"
					var Description = "Returns the floating-point remainder of numerator/denominator (rounded towards zero). Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "numerator"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "denominator"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Frac"
					var Description = "Returns the fractional part of value, a value between 0 and 1. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Lerp"
					var Description = "Linearly interpolates from start to end by the fraction t. T of 0 is start and t of 1 is end. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log"
					var Description = "Base e logarithm. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log10"
					var Description = "Base 10 logarithm. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Log2"
					var Description = "Base 2 logarithm. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Pow"
					var Description = "Returns base raised to the power of the exponent. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "exponent"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Round"
					var Description = "Returns the integer value closest to value. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RSqrt"
					var Description = "Reciprocal square root approximation. Used for efficiency when higher accuracy is not need. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Saturate"
					var Description = "Limits the value between 0 and 1 Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sin"
					var Description = "The transcendental function sine. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sinh"
					var Description = "The hyperbolic sine function. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if x is in-between min and max. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SmoothStep"
					var Description = "Returns a smooth Hermite interpolation between 0 and 1 if t is in-between min and max. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "t"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sqrt"
					var Description = "Computes the square root Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Step"
					var Description = "If y <= x then 1 is returned, otherwise 0 is returned. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tan"
					var Description = "The transcendental function tangent. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Tanh"
					var Description = "The hyperbolic tangent function. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToRadians"
					var Description = "Converts the given degrees to radians. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "degrees"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToDegrees"
					var Description = "Converts the given radians to degrees. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "radians"
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Truncate"
					var Description = "Rounds value towards zero. The place represents where in the number we want to perform rounding (0 is the 1s place, 1 is the 10s place, -1 is the tenths place, etc). Performed component-wise."
					var ReturnType = "Real4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "places"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "numericalBase"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ApproximatelyEqual"
					var Description = "Checks if the two values are within epsilon distance from each other. Performed component-wise."
					var ReturnType = "Boolean4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "p0"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "p1"
							var Type = "Real4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "epsilon"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer2x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer2x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer2x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer3x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer3x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer3x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer4x2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer4x3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Abs"
					var Description = "Returns the absolute value of value. Performed component-wise."
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is not zero."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clamp"
					var Description = "Limits the value between the provided min and max. Performed component-wise."
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "min"
							var Type = "Integer4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CountBits"
					var Description = "Counts the number of bits set on the input. Performed component-wise."
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Max"
					var Description = "Returns whichever value is larger. Performed component-wise."
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Min"
					var Description = "Returns whichever value is smaller. Performed component-wise."
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x4"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Sign"
					var Description = "Returns the sign of the value as either 1 or -1. Performed component-wise."
					var ReturnType = "Integer4x4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean3x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4x2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4x3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AllNonZero"
					var Description = "Returns true if all values are true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AnyNonZero"
					var Description = "Returns true if any value is true."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean4x4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "NetChannelConfig"
			var BaseClass = "DataResource"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "DetectOutgoingChanges"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AcceptIncomingChanges"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EventOnOutgoingPropertyChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EventOnIncomingPropertyChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AuthorityMode"
					var Type = "AuthorityMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AuthorityDefault"
					var Type = "Authority"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AllowRelay"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AllowNapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AwakeDuration"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DetectionMode"
					var Type = "DetectionMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AwakeDetectionInterval"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "NapDetectionInterval"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReplicateOnOnline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReplicateOnOffline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SerializationMode"
					var Type = "SerializationMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReliabilityMode"
					var Type = "ReliabilityMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TransferMode"
					var Type = "TransferMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AccurateTimestampOnChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetDetectOutgoingChanges"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDetectOutgoingChanges"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAcceptIncomingChanges"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAcceptIncomingChanges"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEventOnOutgoingPropertyChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEventOnOutgoingPropertyChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEventOnIncomingPropertyChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEventOnIncomingPropertyChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAuthorityMode"
					var Description = ""
					var ReturnType = "AuthorityMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAuthorityMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "AuthorityMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAuthorityDefault"
					var Description = ""
					var ReturnType = "Authority"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAuthorityDefault"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Authority"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAllowRelay"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAllowRelay"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAllowNapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAllowNapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAwakeDuration"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAwakeDuration"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDetectionMode"
					var Description = ""
					var ReturnType = "DetectionMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDetectionMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DetectionMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAwakeDetectionInterval"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAwakeDetectionInterval"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNapDetectionInterval"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNapDetectionInterval"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReplicateOnOnline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReplicateOnOnline"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReplicateOnOffline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReplicateOnOffline"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSerializationMode"
					var Description = ""
					var ReturnType = "SerializationMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSerializationMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SerializationMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReliabilityMode"
					var Description = ""
					var ReturnType = "ReliabilityMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReliabilityMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "ReliabilityMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTransferMode"
					var Description = ""
					var ReturnType = "TransferMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTransferMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "TransferMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAccurateTimestampOnChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAccurateTimestampOnChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "IStream"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Capabilities"
					var Type = "StreamCapabilities"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Position"
					var Type = "DoubleInteger"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "DoubleInteger"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCapabilities"
					var Description = ""
					var ReturnType = "StreamCapabilities"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPosition"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPosition"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCount"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Seek"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "DoubleInteger"
							var Description = ""
						}
						Parameter
						{
							var Name = "origin"
							var Type = "StreamOrigin"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Write"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "data"
							var Type = "Array[Byte]"
							var Description = ""
						}
						Parameter
						{
							var Name = "byteStart"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "byteCount"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteByte"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Byte"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Read"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "data"
							var Type = "Array[Byte]"
							var Description = ""
						}
						Parameter
						{
							var Name = "byteStart"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "byteCount"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadByte"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Flush"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Write"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "data"
							var Type = "Array[Byte]"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteText"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "text"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "sourceStreamEncoding"
							var Type = "IEncoding"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteText"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "text"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadLine"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "IEncoding"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadLine"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadAllText"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "IEncoding"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReadAllText"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IStream"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "AnimationNode"
			var BaseClass = "ReferenceCountedEventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "CollapseToPoseOnFinish"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Paused"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Time"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Duration"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TimeScale"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Clone"
					var Description = ""
					var ReturnType = "AnimationNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PrintNode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "tabs"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CollapseToPose"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNormalizedTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "normalizedTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNormalizedTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCollapseToPoseOnFinish"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCollapseToPoseOnFinish"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPaused"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPaused"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDuration"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDuration"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTimeScale"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTimeScale"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Real2x4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M03"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M13"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM03"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM03"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM13"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM13"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m03"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m13"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Real4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWW"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWW"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XW"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YW"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZW"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WW"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Y"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Z"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "W"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Real4"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Real4"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "YAxis"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ZAxis"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "WAxis"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveMax"
					var Type = "Real4"
					var Description = "The largest (most positive) value that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "Real4"
					var Description = "The positive value closest to zero that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeValueClosestToZero"
					var Type = "Real4"
					var Description = "The negative value closest to zero that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeMin"
					var Type = "Real4"
					var Description = "The smallest (most negative) value that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXW"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYW"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWW"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYAxis"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZAxis"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetWAxis"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeValueClosestToZero"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeMin"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXYZW"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZW"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZW"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetY"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZ"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetW"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Segment"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Start"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "End"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPoint"
					var Description = "Returns the point at the given t-value."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "tValue"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTValue"
					var Description = "Returns the t-value that would result in the given point projected onto the segment."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStart"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStart"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEnd"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEnd"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Segment"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Segment"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Segment"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Segment"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "JointDebugDrawConfig"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Size"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Detail"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ObjectAPerspective"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ObjectBPerspective"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSize"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDetail"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDetail"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObjectAPerspective"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetObjectAPerspective"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObjectBPerspective"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetObjectBPerspective"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "JointDebugDrawConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "UniversalJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxis0OfBodyA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxis1OfBodyA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxis0OfBodyB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxis1OfBodyB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxis0OfBodyA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxis0OfBodyA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxis1OfBodyA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxis1OfBodyA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxis0OfBodyB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxis0OfBodyB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxis1OfBodyB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxis1OfBodyB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UniversalJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Color"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "FromBytes"
					var Description = "Converts RGB Bytes [0-255] into an RGBA Real4 (alpha defaults to 1.0). Integer is used in place of Byte for convenience."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "r"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "g"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "b"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromBytes"
					var Description = "Converts RGBA Bytes [0-255] into an RGBA Real4. Integer is used in place of Byte for convenience."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "r"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "g"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "b"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "a"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromBytes"
					var Description = "Converts RGBA Bytes [0-255] into an RGBA Real4. Integer is used in place of Byte for convenience."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rgba"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromInteger"
					var Description = "Converts an RGBA packed Integer into an RGBA Real4. Endianness is handled so that 0x00FF00FF always means full green and full alpha."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rgba"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromInteger"
					var Description = "Converts an RGB packed Integer and an alpha Byte [0-255] into an RGBA Real4. Endianness is handled so that 0x00FF00FF always means full green and full alpha."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rgb"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "a"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromInteger"
					var Description = "Converts an RGB packed Integer and an alpha Real into an RGBA Real4. Endianness is handled so that 0x00FF00FF always means full green and full alpha."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rgb"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "a"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromHsva"
					var Description = "Converts HSV Reals into an RGBA Real4 (alpha defaults to 1.0). The hue parameter will wrap if is beyond [0-1]. The saturation and value parameters may go beyond [0-1] to represent HDR values."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "h"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "s"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "v"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromHsva"
					var Description = "Converts HSVA Reals into an RGBA Real4. The hue parameter will wrap if is beyond [0-1]. The saturation and value parameters may go beyond [0-1] to represent HDR values."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "h"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "s"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "v"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "a"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromHsva"
					var Description = "Converts an HSVA Real4 into an RGBA Real4. The hue parameter will wrap if is beyond [0-1]. The saturation and value parameters may go beyond [0-1] to represent HDR values."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "hsva"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "FromHexString"
					var Description = "Converts a hex String into an RGBA Real4. Must be a 3, 4, 6, or 8 digit RGB[A] representation with an optional preceding '#' or '0x' (case insensitive). E.g. #f00, #F00F, ff0000, 0x00FF00FF."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToBytes"
					var Description = "Converts an RGBA Real4 into an RGBA Integer4 [0-255]. Integer is used in place of Byte for convenience."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rgba"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToBytes"
					var Description = "Converts RGB Reals into an RGBA Integer4 [0-255] (alpha defaults to 255). Integer is used in place of Byte for convenience."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "r"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "g"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "b"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToBytes"
					var Description = "Converts RGBA Reals into an RGBA Integer4 [0-255]. Integer is used in place of Byte for convenience."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "r"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "g"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "b"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "a"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToInteger"
					var Description = "Converts an RGBA Real4 into an RGBA packed Integer. Endianness is handled so that 0x00FF00FF always means full green and full alpha."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rgba"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToInteger"
					var Description = "Converts RGB Reals into an RGBA packed Integer (alpha defaults to 255). Endianness is handled so that 0x00FF00FF always means full green and full alpha."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "r"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "g"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "b"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToInteger"
					var Description = "Converts RGBA Reals into an RGBA packed Integer. Endianness is handled so that 0x00FF00FF always means full green and full alpha."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "r"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "g"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "b"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "a"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToHsva"
					var Description = "Converts an RGBA Real4 into an HSVA Real4."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rgba"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToHsva"
					var Description = "Converts RGB Reals into an HSVA Real4 (alpha defaults to 1.0)."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "r"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "g"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "b"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToHsva"
					var Description = "Converts RGBA Reals into an HSVA Real4."
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "r"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "g"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "b"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "a"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToHexString"
					var Description = "Converts an RGBA Real4 into the 8 digit hex format RRGGBBAA."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rgba"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToHexString"
					var Description = "Converts RGB Reals into the 8 digit hex format RRGGBBAA (alpha defaults to 1.0 so the end will always be FF)."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "r"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "g"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "b"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ToHexString"
					var Description = "Converts RGBA Reals into the 8 digit hex format RRGGBBAA."
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "r"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "g"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "b"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "a"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "PrismaticJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisA"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisB"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxisA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxisB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisA"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisB"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxisA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxisB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PrismaticJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "RandomContext"
			var BaseClass = "Component"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Seed"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RandomSeed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxInt"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSeed"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRandomSeed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRandomSeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxInt"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Bool"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Int"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Float"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DoubleReal"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UnitVector2"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Vector2"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "minLength"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxLength"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UnitVector3"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Vector3"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "minLength"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxLength"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RangeInclusiveMax"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RangeExclusiveMax"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IntVariance"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "variance"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Range"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DoubleRange"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FloatVariance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "variance"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RealVariance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "variance"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DoubleRealVariance"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DieRoll"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sides"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Probability"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "probOfTrue"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CoinFlip"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Rotation"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "BellCurve"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "BellCurveRange"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "center"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "range"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "BellCurveDistribution"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "center"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "range"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "standardDeviation"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RandomContext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DelegateParameter"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Type"
					var Type = "Type"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetType"
					var Description = ""
					var ReturnType = "Type"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ConvexMesh"
			var BaseClass = "GenericPhysicsMesh"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CreateRuntime"
					var Description = ""
					var ReturnType = "ConvexMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RuntimeClone"
					var Description = ""
					var ReturnType = "ConvexMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ConvexMesh"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Joystick"
			var BaseClass = "EventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "IsActive"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ButtonCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "AxisCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetIsActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAxisValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAxisName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAxisIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAxisValueByName"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetButtonValue"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetButtonCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAxisCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "LoadInputMapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SaveInputMapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StartCalibration"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EndCalibration"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Calibrating"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "JoystickButtonDown"
					var Type = "JoystickEvent"
					var Senders = Array
					{
						"Joystick"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "JoystickButtonUp"
					var Type = "JoystickEvent"
					var Senders = Array
					{
						"Joystick"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "JoystickUpdated"
					var Type = "JoystickEvent"
					var Senders = Array
					{
						"Joystick"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetPropertyType"
			var BaseClass = "SafeId32Object"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Networking"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ResetConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPropertyConfig"
							var Type = "NetPropertyConfig"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Plane"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Normal"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Distance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Data"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "data"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "normal"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNormal"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetData"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Plane"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Plane"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Plane"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Plane"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "data"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Plane"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "normal"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "PrismaticJoint2d"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisA"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisB"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxisA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxisB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisA"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisB"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxisA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxisB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PrismaticJoint2d"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Boolean3x4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M03"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M13"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M23"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM03"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM03"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM13"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM13"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM23"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM23"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m03"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m13"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m23"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "AdditiveSynthNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "AddHarmonic"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "frequencyMultiplier"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "volume"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "envelope"
							var Type = "AdsrEnvelope"
							var Description = ""
						}
						Parameter
						{
							var Name = "type"
							var Type = "SynthWaveType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveAllHarmonics"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "NoteOn"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "midiNote"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "volume"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "NoteOff"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "midiNote"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StopAllNotes"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "FunctionRange"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "FunctionRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Current"
					var Type = "Function"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "FunctionRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MoveNext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FunctionRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FunctionRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "FunctionRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Integer4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWYX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWX"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWXY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWY"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWZ"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWXW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWYW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWWW"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWX"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XWY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WWY"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WXZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WYZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YWZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZWZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWZ"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WXW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WYW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XWW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YWW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZWW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WWW"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YX"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZX"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WX"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XY"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YY"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZY"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WY"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZ"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZ"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZ"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WZ"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XW"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YW"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZW"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WW"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Y"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Z"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "W"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Integer4"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Integer4"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "YAxis"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ZAxis"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "WAxis"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveMax"
					var Type = "Integer4"
					var Description = "The largest (most positive) value that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "Integer4"
					var Description = "The positive value closest to zero that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeValueClosestToZero"
					var Type = "Integer4"
					var Description = "The negative value closest to zero that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeMin"
					var Type = "Integer4"
					var Description = "The smallest (most negative) value that can be represented by an Integer."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWX"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWY"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWZ"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWXW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWYW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWWW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWX"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWY"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWXW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWYW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXWW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYWW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZWW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWWW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYX"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZX"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWX"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYY"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZY"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWY"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZ"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZ"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWZ"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXW"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYW"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWW"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYAxis"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZAxis"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetWAxis"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeValueClosestToZero"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeMin"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXYZW"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZ"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZW"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXY"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZ"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZW"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZ"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetW"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetW"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "JointGraphEdge"
			var BaseClass = ""
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Object"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OtherObject"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Valid"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Joint"
					var Type = "Joint"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Owner"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOtherObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetValid"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJoint"
					var Description = ""
					var ReturnType = "Joint"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOwner"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "JointGraphEdge"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "JointGraphEdge"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "JointGraphEdge"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Gamepad"
			var BaseClass = "EventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "IsActive"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "GamepadIndex"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LeftStick"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RightStick"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LeftStickDelta"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RightStickDelta"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LeftTrigger"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RightTrigger"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetIsActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetIsActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGamepadIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGamepadIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLeftStick"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLeftStick"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRightStick"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRightStick"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLeftStickDelta"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLeftStickDelta"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRightStickDelta"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRightStickDelta"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLeftTrigger"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLeftTrigger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRightTrigger"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRightTrigger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsButtonPressed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsButtonHeld"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsButtonReleased"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TimeButtonHeld"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Vibrate"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "time"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "LeftSpeed"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "RightSpeed"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "ButtonDown"
					var Type = "GamepadEvent"
					var Senders = Array
					{
						"Gamepad"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ButtonUp"
					var Type = "GamepadEvent"
					var Senders = Array
					{
						"Gamepad"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GamepadUpdated"
					var Type = "ObjectEvent"
					var Senders = Array
					{
						"Gamepad"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GamepadStickFlicked"
					var Type = "GamepadEvent"
					var Senders = Array
					{
						"Gamepad"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ThrustEffect"
			var BaseClass = "PhysicsEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalSpaceDirection"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ForceStrength"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ForceDirection"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldForceDirection"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalSpaceDirection"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalSpaceDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetForceStrength"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetForceStrength"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetForceDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetForceDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldForceDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ThrustEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MainConfig"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ApplicationName"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "BuildDate"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "BuildVersion"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetApplicationName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBuildDate"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBuildVersion"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MainConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CompressorNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "InputGainDecibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ThresholdDecibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AttackMillisec"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReleaseMillisec"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Ratio"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OutputGainDecibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "KneeWidth"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetInputGainDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInputGainDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetThresholdDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetThresholdDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttackMillisec"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttackMillisec"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReleaseMillisec"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReleaseMillisec"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRatio"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRatio"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOutputGainDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOutputGainDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetKneeWidth"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetKneeWidth"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetLevelStarted"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "GameSession"
					var Type = "GameSession"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Space"
					var Type = "Space"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LevelName"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetGameSession"
					var Description = ""
					var ReturnType = "GameSession"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpace"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLevelName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "GameSession"
			var BaseClass = "Cog"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "AllSpaces"
					var Type = "SpaceMapValueRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Focused"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Resolution"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "FullScreen"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Start"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quit"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RequestQuit"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateSpace"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "archetype"
							var Type = "Archetype"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateNamedSpace"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "archetype"
							var Type = "Archetype"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindSpaceByName"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindAllSpacesByName"
					var Description = ""
					var ReturnType = "SpaceMapValueRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsEditorMode"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAllSpaces"
					var Description = ""
					var ReturnType = "SpaceMapValueRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFocused"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetResolution"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFullScreen"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GameSession"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "GameSetup"
					var Type = "GameEvent"
					var Senders = Array
					{
						"GameSession"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GameLoad"
					var Type = "GameEvent"
					var Senders = Array
					{
						"GameSession"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GameFocusIn"
					var Type = "GameEvent"
					var Senders = Array
					{
						"GameSession"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GameFocusOut"
					var Type = "GameEvent"
					var Senders = Array
					{
						"GameSession"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GameQuit"
					var Type = "GameEvent"
					var Senders = Array
					{
						"GameSession"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GameRequestQuit"
					var Type = "GameEvent"
					var Senders = Array
					{
						"GameSession"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "GameStarted"
					var Type = "GameEvent"
					var Senders = Array
					{
						"GameSession"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "LevelStarted"
					var Type = "GameEvent"
					var Senders = Array
					{
						"GameSession"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "EditSpaces"
					var Type = "Event"
					var Senders = Array
					{
						"GameSession"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "TcpSocket"
			var BaseClass = "EventObject"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "OutgoingConnectionCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IncomingConnectionCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ConnectionCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Connect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "host"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "port"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Listen"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "port"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxConnections"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Listen"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "port"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxConnections"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "bindTo"
							var Type = "TcpSocketBind"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Close"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CloseConnection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SendTo"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "SendableEvent"
							var Description = ""
						}
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SendToAll"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "SendableEvent"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SendToAllExcept"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "SendableEvent"
							var Description = ""
						}
						Parameter
						{
							var Name = "exceptIndex"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SendToAllAndSelf"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "SendableEvent"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsConnected"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOutgoingConnectionCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIncomingConnectionCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetConnectionCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "SocketError"
					var Type = "TextErrorEvent"
					var Senders = Array
					{
						"TcpSocket"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ConnectionCompleted"
					var Type = "ConnectionEvent"
					var Senders = Array
					{
						"TcpSocket"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ConnectionFailed"
					var Type = "ConnectionEvent"
					var Senders = Array
					{
						"TcpSocket"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "Disconnected"
					var Type = "ConnectionEvent"
					var Senders = Array
					{
						"TcpSocket"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ReceivedData"
					var Type = "ReceivedDataEvent"
					var Senders = Array
					{
						"TcpSocket"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundListener"
			var BaseClass = "Component"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SoundNode"
					var Type = "SoundNode"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSoundNode"
					var Description = ""
					var ReturnType = "SoundNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SoundListener"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "RevoluteJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisA"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisB"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldBasis"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FrameOfReference"
					var Type = "JointFrameOfReference"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisA"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisB"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldBasis"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldBasis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFrameOfReference"
					var Description = ""
					var ReturnType = "JointFrameOfReference"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFrameOfReference"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "JointFrameOfReference"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldFrame"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "rot"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RevoluteJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ParticleColorAnimator"
			var BaseClass = "ParticleAnimator"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TimeGradient"
					var Type = "ColorGradient"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "VelocityGradient"
					var Type = "ColorGradient"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxParticleSpeed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTimeGradient"
					var Description = ""
					var ReturnType = "ColorGradient"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTimeGradient"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "ColorGradient"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVelocityGradient"
					var Description = ""
					var ReturnType = "ColorGradient"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVelocityGradient"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "ColorGradient"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxParticleSpeed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxParticleSpeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ParticleColorAnimator"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetEventReceived"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirNetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetEvent"
					var Type = "Event"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Destination"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ReturnAllow"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetEvent"
					var Description = ""
					var ReturnType = "Event"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDestination"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReturnAllow"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReturnAllow"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PointForceEffect"
			var BaseClass = "BasicPointEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "PointForceEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Real3x2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Joint"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SendsEvents"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AutoSnaps"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CollideConnected"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxImpulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSendsEvents"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSendsEvents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoSnaps"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoSnaps"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCollideConnected"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCollideConnected"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxImpulse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOtherObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCog"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Joint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "JointExceedImpulseLimit"
					var Type = "JointEvent"
					var Senders = Array
					{
						"Joint"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PhysicsEffect"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WakeUpOnChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DebugDrawEffect"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EffectType"
					var Type = "PhysicsEffectType"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Toggle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWakeUpOnChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWakeUpOnChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDebugDrawEffect"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDebugDrawEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEffectType"
					var Description = ""
					var ReturnType = "PhysicsEffectType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Member"
			var BaseClass = "ReflectionObject"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Owner"
					var Type = "BoundType"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsStatic"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Library"
					var Type = "Library"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Type"
					var Type = "Type"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOwner"
					var Description = ""
					var ReturnType = "BoundType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsStatic"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLibrary"
					var Description = ""
					var ReturnType = "Library"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetType"
					var Description = ""
					var ReturnType = "Type"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "PhysicsMesh"
			var BaseClass = "GenericPhysicsMesh"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CreateRuntime"
					var Description = ""
					var ReturnType = "PhysicsMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RuntimeClone"
					var Description = ""
					var ReturnType = "PhysicsMesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PhysicsMesh"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "UiFocusEvent"
			var BaseClass = "Event"
			var Library = "UiWidgetLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "HeightMapModel"
			var BaseClass = "Graphical"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "HeightMapModel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "RotateGizmo"
			var BaseClass = "Component"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Snapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapAngle"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSnapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapAngle"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapAngle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RotateGizmo"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "FatalErrorEvent"
			var BaseClass = "EventData"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "GraphicsSpace"
			var BaseClass = "Component"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RandomSeed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Seed"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRandomSeed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRandomSeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSeed"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GraphicsSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SplineEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Spline"
					var Type = "Spline"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSpline"
					var Description = ""
					var ReturnType = "Spline"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpline"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Spline"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SplineEvent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SplineEvent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "SplineEvent"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ArrayRange[T]"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Current"
					var Type = "T"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "All"
					var Type = "ArrayRange[T]"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "MoveNext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Reset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "T"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "ArrayRange[T]"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ArrayRange[T]"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "DebugFrustum"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugFrustum"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugFrustum"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Frustum"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ObjectScaleTool"
			var BaseClass = "ObjectTransformTool"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Snapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapMode"
					var Type = "GizmoSnapMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AffectTranslation"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AffectScale"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSnapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapDistance"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapMode"
					var Description = ""
					var ReturnType = "GizmoSnapMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "GizmoSnapMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAffectTranslation"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAffectTranslation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAffectScale"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAffectScale"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ObjectScaleTool"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ModulationNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "UseAmplitudeModulation"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Frequency"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WetPercent"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WetValue"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetUseAmplitudeModulation"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseAmplitudeModulation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFrequency"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFrequency"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWetPercent"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWetPercent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWetValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWetValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AnyHandle"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "JointSpring"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FrequencyHz"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DampingRatio"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AtomIds"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFrequencyHz"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFrequencyHz"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDampingRatio"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDampingRatio"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAtomIds"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAtomIds"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "JointSpring"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CastFilterEvent"
			var BaseClass = "Event"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Object"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "FilterState"
					var Type = "CastFilterState"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFilterState"
					var Description = ""
					var ReturnType = "CastFilterState"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFilterState"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CastFilterState"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetGameStarted"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "GameSession"
					var Type = "GameSession"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetGameSession"
					var Description = ""
					var ReturnType = "GameSession"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MouseCapture"
			var BaseClass = "Component"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "IsCaptured"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Capture"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "e"
							var Type = "ViewportMouseEvent"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReleaseCapture"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReleaseCapture"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "e"
							var Type = "ViewportMouseEvent"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsCaptured"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MouseCapture"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "MouseDragStart"
					var Type = "ViewportMouseEvent"
					var Senders = Array
					{
						"MouseCapture"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseDragMove"
					var Type = "ViewportMouseEvent"
					var Senders = Array
					{
						"MouseCapture"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseDragUpdate"
					var Type = "ViewportMouseEvent"
					var Senders = Array
					{
						"MouseCapture"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseDragEnd"
					var Type = "ViewportMouseEvent"
					var Senders = Array
					{
						"MouseCapture"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Level"
			var BaseClass = "Resource"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ProcessClass"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "StandardError"
					var Type = "FileStream"
					var Description = "The stream where standard error is re-directed to. Null if not re-directed"
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "StandardInput"
					var Type = "FileStream"
					var Description = "The stream where standard input is re-directed to. Null if not re-directed"
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "StandardOutput"
					var Type = "FileStream"
					var Description = "The stream where standard output is re-directed to. Null if not re-directed"
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Start"
					var Description = "Begins the execution of another process using the given parameters. "
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "startInfo"
							var Type = "ProcessStartInfo"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WaitForClose"
					var Description = "Waits for a process to close, this will block until the process closes."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsRunning"
					var Description = "Returns true if the process is still running, false otherwise."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Close"
					var Description = "Closes the wrapper around the process, does not close the process launched."
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Terminate"
					var Description = "Attempts to manually shut down the process. This is not safe for the other process or what it's handling."
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStandardError"
					var Description = ""
					var ReturnType = "FileStream"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStandardInput"
					var Description = ""
					var ReturnType = "FileStream"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStandardOutput"
					var Description = ""
					var ReturnType = "FileStream"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ProcessClass"
					var Description = "Process class used for managing external processes and redirecting their stdio. Used to launch and monitor various external programs."
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "AsciiEncoding"
			var BaseClass = "IEncoding"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "NetPeer"
			var BaseClass = "NetObject"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LanDiscoverable"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InternetDiscoverable"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HostPortRangeStart"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HostPortRangeEnd"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HostPingInterval"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InternetHostPublishInterval"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InternetHostRecordLifetime"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InternetSameIpHostRecordLimit"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Info"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsOpen"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Ipv4Address"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Ipv4Host"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Ipv4Port"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetObjectCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetUserCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetSpaceCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "FrameFillWarning"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FrameFillSkip"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LinkCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "UsersAddedByMyPeer"
					var Type = "NetUserRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Users"
					var Type = "NetUserRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "UserCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "InternetHostListTimeout"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "BasicHostInfoTimeout"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ExtraHostInfoTimeout"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLanDiscoverable"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLanDiscoverable"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInternetDiscoverable"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInternetDiscoverable"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHostPortRangeStart"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHostPortRangeStart"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHostPortRangeEnd"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHostPortRangeEnd"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHostPingInterval"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHostPingInterval"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInternetHostPublishInterval"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInternetHostPublishInterval"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInternetHostRecordLifetime"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInternetHostRecordLifetime"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInternetSameIpHostRecordLimit"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInternetSameIpHostRecordLimit"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SubscribeToMasterServer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UnsubscribeFromMasterServer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHostByIndex"
					var Description = ""
					var ReturnType = "NetHost"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "network"
							var Type = "Network"
							var Description = ""
						}
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHostByAddress"
					var Description = ""
					var ReturnType = "NetHost"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "network"
							var Type = "Network"
							var Description = ""
						}
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHostByAddress"
					var Description = ""
					var ReturnType = "NetHost"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHostList"
					var Description = ""
					var ReturnType = "NetHostRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "network"
							var Type = "Network"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DiscoverHostList"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "network"
							var Type = "Network"
							var Description = ""
						}
						Parameter
						{
							var Name = "removeStaleHosts"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearHostList"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "network"
							var Type = "Network"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearHostLists"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RefreshHost"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "network"
							var Type = "Network"
							var Description = ""
						}
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
						Parameter
						{
							var Name = "getExtraHostInfo"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "allowDiscovery"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "removeStaleHosts"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RefreshHostList"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "network"
							var Type = "Network"
							var Description = ""
						}
						Parameter
						{
							var Name = "getExtraHostInfo"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "allowDiscovery"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "removeStaleHosts"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CancelHostRequests"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInfo"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsOpen"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Open"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "role"
							var Type = "NetRole"
							var Description = ""
						}
						Parameter
						{
							var Name = "port"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "retries"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Open"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "role"
							var Type = "NetRole"
							var Description = ""
						}
						Parameter
						{
							var Name = "port"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Open"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "role"
							var Type = "NetRole"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "OpenClient"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "port"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "retries"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "OpenClient"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "port"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "OpenClient"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "OpenServer"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "port"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "OpenServer"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "OpenOffline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Close"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIpv4Address"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIpv4Host"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIpv4Port"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetObjectCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetUserCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetSpaceCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFrameFillWarning"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFrameFillWarning"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFrameFillSkip"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFrameFillSkip"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinkCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ConnectLink"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
						Parameter
						{
							var Name = "requestBundle"
							var Type = "EventBundle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ConnectLink"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
						Parameter
						{
							var Name = "requestEvent"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ConnectLink"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DisconnectLink"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
						Parameter
						{
							var Name = "requestBundle"
							var Type = "EventBundle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DisconnectLink"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
						Parameter
						{
							var Name = "requestEvent"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DisconnectLink"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DisconnectLink"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "requestBundle"
							var Type = "EventBundle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DisconnectLink"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "requestEvent"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DisconnectLink"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DisconnectAllLinks"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "requestBundle"
							var Type = "EventBundle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DisconnectAllLinks"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "requestEvent"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DisconnectAllLinks"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinkCreationDirection"
					var Description = ""
					var ReturnType = "TransmissionDirection"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinkStatus"
					var Description = ""
					var ReturnType = "LinkStatus"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinkState"
					var Description = ""
					var ReturnType = "LinkState"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinkIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurIpAddressFromLink"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinkInternetProtocol"
					var Description = ""
					var ReturnType = "InternetProtocol"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLinkNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "ipAddress"
							var Type = "IpAddress"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddUser"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "requestBundle"
							var Type = "EventBundle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddUser"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "requestEvent"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddUser"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUser"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netUserId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUsersAddedByMyPeer"
					var Description = ""
					var ReturnType = "NetUserRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUsersAddedByPeer"
					var Description = ""
					var ReturnType = "NetUserRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUsers"
					var Description = ""
					var ReturnType = "NetUserRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUserCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveUser"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "requestBundle"
							var Type = "EventBundle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveUser"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "requestEvent"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveUser"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInternetHostListTimeout"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInternetHostListTimeout"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBasicHostInfoTimeout"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBasicHostInfoTimeout"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetExtraHostInfoTimeout"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetExtraHostInfoTimeout"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetSpace"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netObjectId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netObjectId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "NetPeer"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "AcquireBasicNetHostInfo"
					var Type = "AcquireNetHostInfo"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "AcquireExtraNetHostInfo"
					var Type = "AcquireNetHostInfo"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetHostDiscovered"
					var Type = "NetHostUpdate"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetHostListDiscovered"
					var Type = "NetHostListUpdate"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetHostRefreshed"
					var Type = "NetHostUpdate"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetHostListRefreshed"
					var Type = "NetHostListUpdate"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetPeerOpened"
					var Type = "NetPeerOpened"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetPeerClosed"
					var Type = "NetPeerClosed"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetGameOnline"
					var Type = "NetObjectOnline"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetGameOffline"
					var Type = "NetObjectOffline"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetGameStarted"
					var Type = "NetGameStarted"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetPeerSentConnectRequest"
					var Type = "NetPeerSentConnectRequest"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetPeerReceivedConnectRequest"
					var Type = "NetPeerReceivedConnectRequest"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetPeerSentConnectResponse"
					var Type = "NetPeerSentConnectResponse"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetPeerReceivedConnectResponse"
					var Type = "NetPeerReceivedConnectResponse"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetLinkConnected"
					var Type = "NetLinkConnected"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetLinkDisconnected"
					var Type = "NetLinkDisconnected"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetSpaceOnline"
					var Type = "NetObjectOnline"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetSpaceOffline"
					var Type = "NetObjectOffline"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetLevelStarted"
					var Type = "NetLevelStarted"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetPeerSentUserAddRequest"
					var Type = "NetPeerSentUserAddRequest"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetPeerReceivedUserAddRequest"
					var Type = "NetPeerReceivedUserAddRequest"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetPeerSentUserAddResponse"
					var Type = "NetPeerSentUserAddResponse"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetPeerReceivedUserAddResponse"
					var Type = "NetPeerReceivedUserAddResponse"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetUserOnline"
					var Type = "NetObjectOnline"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetUserOffline"
					var Type = "NetObjectOffline"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetUserLostObjectOwnership"
					var Type = "NetUserLostObjectOwnership"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetUserAcquiredObjectOwnership"
					var Type = "NetUserAcquiredObjectOwnership"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetObjectOnline"
					var Type = "NetObjectOnline"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetObjectOffline"
					var Type = "NetObjectOffline"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetUserOwnerChanged"
					var Type = "NetUserOwnerChanged"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetChannelOutgoingPropertyInitialized"
					var Type = "NetChannelPropertyChange"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetChannelIncomingPropertyInitialized"
					var Type = "NetChannelPropertyChange"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetChannelOutgoingPropertyUninitialized"
					var Type = "NetChannelPropertyChange"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetChannelIncomingPropertyUninitialized"
					var Type = "NetChannelPropertyChange"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetChannelOutgoingPropertyChanged"
					var Type = "NetChannelPropertyChange"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetChannelIncomingPropertyChanged"
					var Type = "NetChannelPropertyChange"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetEventSent"
					var Type = "NetEventSent"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetEventReceived"
					var Type = "NetEventReceived"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetHostRecordDiscovered"
					var Type = "NetHostRecordEvent"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetHostRecordUpdate"
					var Type = "NetHostRecordEvent"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "NetHostRecordExpired"
					var Type = "NetHostRecordEvent"
					var Senders = Array
					{
						"NetPeer"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "AudioByteDataEvent"
			var BaseClass = "Event"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "AudioData"
					var Type = "Array[Byte]"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAudioData"
					var Description = ""
					var ReturnType = "Array[Byte]"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAudioData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Array[Byte]"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "RegisterCppNetProperties"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ParticleEmitter"
			var BaseClass = "Component"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetObjectOffline"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "GameSession"
					var Type = "GameSession"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Space"
					var Type = "Space"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Object"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEndOfLifespan"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetGameSession"
					var Description = ""
					var ReturnType = "GameSession"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpace"
					var Description = ""
					var ReturnType = "Space"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEndOfLifespan"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "KeyboardTextEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Rune"
					var Type = "Rune"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRune"
					var Description = ""
					var ReturnType = "Rune"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRune"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Rune"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "VertexBuffer"
			var BaseClass = "SafeId32"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "VertexCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "AddAttribute"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "semantic"
							var Type = "VertexSemantic"
							var Description = ""
						}
						Parameter
						{
							var Name = "elementType"
							var Type = "VertexElementType"
							var Description = ""
						}
						Parameter
						{
							var Name = "elementCount"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttributes"
					var Description = ""
					var ReturnType = "VertexSemanticRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddByte"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddByte"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddByte"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddByte"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddShort"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddShort"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddShort"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddShort"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVertexData"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "vertexIndex"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "semantic"
							var Type = "VertexSemantic"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVertexData"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "vertexIndex"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "semantic"
							var Type = "VertexSemantic"
							var Description = ""
						}
						Parameter
						{
							var Name = "type"
							var Type = "VertexElementType"
							var Description = ""
						}
						Parameter
						{
							var Name = "count"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsValidVertexData"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "vertexIndex"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "semantic"
							var Type = "VertexSemantic"
							var Description = ""
						}
						Parameter
						{
							var Name = "type"
							var Type = "VertexElementType"
							var Description = ""
						}
						Parameter
						{
							var Name = "count"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearAttributes"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetElementType"
					var Description = ""
					var ReturnType = "VertexElementType"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "semantic"
							var Type = "VertexSemantic"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetElementCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "semantic"
							var Type = "VertexSemantic"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVertexCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ObjectLinkPointChangedEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "OldLocalPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "NewLocalPoint"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EdgeId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetOldLocalPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOldLocalPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNewLocalPoint"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNewLocalPoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEdgeId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEdgeId"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "HeightMapSource"
			var BaseClass = "Resource"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CustomCollisionEventTracker"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "AddCollision"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "otherCollider"
							var Type = "Collider"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldPoint"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "worldNormalTowardsOther"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SendEvents"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventPrefix"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CustomCollisionEventTracker"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CustomPhysicsEffect"
			var BaseClass = "PhysicsEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CustomPhysicsEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "CustomPhysicsEffectPrecalculatePhase"
					var Type = "CustomPhysicsEffectEvent"
					var Senders = Array
					{
						"CustomPhysicsEffect"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "ApplyCustomPhysicsEffect"
					var Type = "CustomPhysicsEffectEvent"
					var Senders = Array
					{
						"CustomPhysicsEffect"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ContentConfig"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "ContentConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Spline"
			var BaseClass = "ReferenceCountedEventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SplineType"
					var Type = "SplineType"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Closed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Error"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TotalDistance"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ControlPoints"
					var Type = "SplineControlPoints"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "BakedPoints"
					var Type = "SplineBakedPoints"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Create"
					var Description = ""
					var ReturnType = "Spline"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Clone"
					var Description = ""
					var ReturnType = "Spline"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSplineType"
					var Description = ""
					var ReturnType = "SplineType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSplineType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SplineType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetClosed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetClosed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetError"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetError"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTotalDistance"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SampleDistance"
					var Description = ""
					var ReturnType = "SplineSampleData"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "distance"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SampleNormalized"
					var Description = ""
					var ReturnType = "SplineSampleData"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RebuildIfModified"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ForceRebuild"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugDraw"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "color"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetControlPoints"
					var Description = ""
					var ReturnType = "SplineControlPoints"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBakedPoints"
					var Description = ""
					var ReturnType = "SplineBakedPoints"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetObject"
			var BaseClass = "Component"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Role"
					var Type = "NetRole"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsClient"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsServer"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsOffline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsClientOrOffline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsServerOrOffline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsClientOrServer"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "DetectOutgoingChanges"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AcceptIncomingChanges"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AllowNapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AccurateTimestampOnOnline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AccurateTimestampOnChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AccurateTimestampOnOffline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnlineTimestamp"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LastChangeTimestamp"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OfflineTimestamp"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsOnline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetObjectId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNapping"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OnlineTimePassed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "LastChangeTimePassed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OfflineTimePassed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsOwnedByAUser"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotOwnedByAUser"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsMine"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotMine"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsClientAndMine"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsClientButNotMine"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsServerAndMine"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsServerButNotMine"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsOfflineAndMine"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsOfflineButNotMine"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetUserOwner"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "NetUserOwnerPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetUserOwnerUserId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetUserOwnerPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "AutomaticChannel"
					var Type = "NetChannelConfig"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "NetPropertyInfos"
					var Type = "NetPropertyInfos"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRole"
					var Description = ""
					var ReturnType = "NetRole"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsClient"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsServer"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsOffline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsClientOrOffline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsServerOrOffline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsClientOrServer"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDetectOutgoingChanges"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDetectOutgoingChanges"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAcceptIncomingChanges"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAcceptIncomingChanges"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAllowNapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAllowNapping"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAccurateTimestampOnOnline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAccurateTimestampOnOnline"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAccurateTimestampOnChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAccurateTimestampOnChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAccurateTimestampOnOffline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAccurateTimestampOnOffline"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnlineTimestamp"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLastChangeTimestamp"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOfflineTimestamp"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsOnline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetObjectId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNapping"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnlineTimePassed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLastChangeTimePassed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOfflineTimePassed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SelectRemote"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReplicateNow"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WakeUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TakeNap"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Forget"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "HasNetChannel"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netChannelName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetChannel"
					var Description = ""
					var ReturnType = "NetChannel"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netChannelName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsOwnedByAUser"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotOwnedByAUser"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsOwnedByUser"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsOwnedByPeer"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsMine"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotMine"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsClientAndMine"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsClientButNotMine"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsServerAndMine"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsServerButNotMine"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsOfflineAndMine"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsOfflineButNotMine"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetUserOwner"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNetUserOwner"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetUserOwnerPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetUserOwnerUserId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetUserOwnerPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNetUserOwnerUp"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNetUserOwnerDown"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "cog"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchLocal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchRemote"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "Event"
							var Description = ""
						}
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchBroadcast"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchLocalAndRemote"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "Event"
							var Description = ""
						}
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchLocalAndBroadcast"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "event"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutomaticChannel"
					var Description = ""
					var ReturnType = "NetChannelConfig"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutomaticChannel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "NetChannelConfig"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetPropertyInfos"
					var Description = ""
					var ReturnType = "NetPropertyInfos"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNetPropertyInfos"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "NetPropertyInfos"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "NetObject"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SimpleAnimation"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "PlayMode"
					var Type = "AnimationPlayMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Animation"
					var Type = "Animation"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPlayMode"
					var Description = ""
					var ReturnType = "AnimationPlayMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPlayMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "AnimationPlayMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAnimation"
					var Description = ""
					var ReturnType = "Animation"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAnimation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Animation"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PlaySingle"
					var Description = ""
					var ReturnType = "AnimationNode"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "animation"
							var Type = "Animation"
							var Description = ""
						}
						Parameter
						{
							var Name = "playMode"
							var Type = "AnimationPlayMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DirectBlend"
					var Description = ""
					var ReturnType = "AnimationNode"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "animation"
							var Type = "Animation"
							var Description = ""
						}
						Parameter
						{
							var Name = "transitionTime"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "playMode"
							var Type = "AnimationPlayMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CrossBlend"
					var Description = ""
					var ReturnType = "AnimationNode"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "animation"
							var Type = "Animation"
							var Description = ""
						}
						Parameter
						{
							var Name = "transitionTime"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "playMode"
							var Type = "AnimationPlayMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PlayIsolatedAnimation"
					var Description = ""
					var ReturnType = "AnimationNode"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "animation"
							var Type = "Animation"
							var Description = ""
						}
						Parameter
						{
							var Name = "rootBone"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "playMode"
							var Type = "AnimationPlayMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ChainAnimation"
					var Description = ""
					var ReturnType = "AnimationNode"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "animation"
							var Type = "Animation"
							var Description = ""
						}
						Parameter
						{
							var Name = "playMode"
							var Type = "AnimationPlayMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SimpleAnimation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer3x4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M03"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M13"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M23"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM03"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM03"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM13"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM13"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM23"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM23"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m03"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m13"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m23"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "NetUserAcquiredObjectOwnership"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "AcquiredObject"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "PreviousNetUserOwner"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAcquiredObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPreviousNetUserOwner"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "GearJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Ratio"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Constant"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "JointAPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "JointBPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "JointA"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "JointB"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRatio"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRatio"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetConstant"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetConstant"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJointAPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetJointAPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJointBPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetJointBPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJointA"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetJointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJointB"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetJointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GearJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ObjectTransformGizmo"
			var BaseClass = "Component"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Basis"
					var Type = "GizmoBasis"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Pivot"
					var Type = "GizmoPivot"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ObjectCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetBasis"
					var Description = ""
					var ReturnType = "GizmoBasis"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBasis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "GizmoBasis"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPivot"
					var Description = ""
					var ReturnType = "GizmoPivot"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPivot"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "GizmoPivot"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddObject"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "AnyHandle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveObject"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "AnyHandle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ClearObjects"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOperationQueue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "opQueue"
							var Type = "OperationQueue"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ToggleCoordinateMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObjectCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObjectAtIndex"
					var Description = ""
					var ReturnType = "AnyHandle"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ObjectTransformGizmo"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "GizmoObjectsDuplicated"
					var Type = "Event"
					var Senders = Array
					{
						"ObjectTransformGizmo"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "FileMode"
			var BaseClass = "Enum"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Read"
					var Type = "FileMode"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Write"
					var Type = "FileMode"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Append"
					var Type = "FileMode"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ShareRead"
					var Type = "FileMode"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ShareWrite"
					var Type = "FileMode"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ShareDelete"
					var Type = "FileMode"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Sequential"
					var Type = "FileMode"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRead"
					var Description = ""
					var ReturnType = "FileMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetWrite"
					var Description = ""
					var ReturnType = "FileMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAppend"
					var Description = ""
					var ReturnType = "FileMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetShareRead"
					var Description = ""
					var ReturnType = "FileMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetShareWrite"
					var Description = ""
					var ReturnType = "FileMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetShareDelete"
					var Description = ""
					var ReturnType = "FileMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetSequential"
					var Description = ""
					var ReturnType = "FileMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "StringBuilder"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "ToString"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Write"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WriteLine"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "T"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "StringBuilder"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Real3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZX"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZY"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZZ"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZX"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZY"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZ"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZX"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZY"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZ"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Y"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Z"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Real3"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Real3"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "YAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ZAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveMax"
					var Type = "Real3"
					var Description = "The largest (most positive) value that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "Real3"
					var Description = "The positive value closest to zero that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeValueClosestToZero"
					var Type = "Real3"
					var Description = "The negative value closest to zero that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "NegativeMin"
					var Type = "Real3"
					var Description = "The smallest (most negative) value that can be represented by a Real."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZX"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZY"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZZ"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZX"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZY"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZX"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeValueClosestToZero"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetNegativeMin"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXYZ"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXY"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZ"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetY"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZ"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "PitchNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Pitch"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Semitones"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetPitch"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPitch"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSemitones"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSemitones"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolatePitch"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "pitchRatio"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateSemitones"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "pitchSemitones"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PhysicsRaycastProvider"
			var BaseClass = "RaycastProvider"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "DynamicColliders"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SelectGhosts"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StaticColliders"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MultiSelectStatic"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MultiSelectKinematic"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetDynamicColliders"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDynamicColliders"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSelectGhosts"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSelectGhosts"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStaticColliders"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStaticColliders"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMultiSelectStatic"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMultiSelectStatic"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMultiSelectKinematic"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMultiSelectKinematic"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "HeightMapEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Boolean3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZY"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZXZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZYZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZZ"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZXY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XYY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YYY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZY"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YXZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZXZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XYZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YYZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZYZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XZZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YZZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZZZ"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "YX"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZX"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XY"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YY"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ZY"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "XZ"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "YZ"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ZZ"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Y"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Z"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Boolean3"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Boolean3"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "YAxis"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ZAxis"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZY"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZXZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZYZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZZ"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXYY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZY"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYXZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZXZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYYZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZYZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYX"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZX"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYY"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZY"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXZ"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZZ"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetYAxis"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZAxis"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXYZ"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXY"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetXY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetYZ"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetYZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetY"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetY"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetZ"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetZ"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean2"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Boolean"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "XXXX"
					var Type = "Boolean4"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XXX"
					var Type = "Boolean3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "XX"
					var Type = "Boolean2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "X"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Zero"
					var Type = "Boolean"
					var Description = "The zero vector (a vector containing all zeroes)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "One"
					var Type = "Boolean"
					var Description = "The one vector (a vector containing all ones)."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "XAxis"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetXXXX"
					var Description = ""
					var ReturnType = "Boolean4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXXX"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetXX"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAxis"
					var Description = "Returns an axis vector from the given index (ie. 0 is XAxis, 1 is YAxis, etc..."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetZero"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOne"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetXAxis"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetX"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetX"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "scalar"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "NetSpace"
			var BaseClass = "NetObject"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "NetObjectCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetUserCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetNetObjectCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetUserCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "NetSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "InputDeviceEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Device"
					var Type = "InputDevice"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LastDevice"
					var Type = "InputDevice"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetDevice"
					var Description = ""
					var ReturnType = "InputDevice"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDevice"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "InputDevice"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLastDevice"
					var Description = ""
					var ReturnType = "InputDevice"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLastDevice"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "InputDevice"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "TextBlock"
			var BaseClass = "DocumentResource"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Text"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetText"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DebugCylinder"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Start"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "End"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Radius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStart"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStart"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEnd"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEnd"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugCylinder"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugCylinder"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radius"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugCylinder"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "axis"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "height"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "radius"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "MultipleMethodsOfTheSameName"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Bone"
			var BaseClass = "Component"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Bone"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "EditorSettings"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ViewCube"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewCubeSize"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AutoUpdateContentChanges"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetViewCube"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewCube"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewCubeSize"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewCubeSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoUpdateContentChanges"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoUpdateContentChanges"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EditorSettings"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetPeerSentConnectResponse"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirNetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirRequestBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirPendingUserAddRequestCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurConnectResponse"
					var Type = "ConnectResponse"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurResponseBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirRequestBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirPendingUserAddRequestCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurConnectResponse"
					var Description = ""
					var ReturnType = "ConnectResponse"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurResponseBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer4x4"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M03"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M13"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M23"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M30"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M31"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M32"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M33"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM03"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM03"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM13"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM13"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM23"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM23"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM30"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM30"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM31"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM31"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM32"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM32"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM33"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM33"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m03"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m13"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m23"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m30"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m31"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m32"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m33"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer4x4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "FlangerNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "MaxDelayMillisec"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ModulationFrequency"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FeedbackPercent"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FeedbackValue"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMaxDelayMillisec"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxDelayMillisec"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetModulationFrequency"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetModulationFrequency"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFeedbackPercent"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFeedbackPercent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFeedbackValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFeedbackValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Void"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "LightningScript"
			var BaseClass = "LightningDocumentResource"
			var Library = "LightningScriptLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DynamicMotor"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxMoveImpulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "MoveInDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "direction"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "up"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReferenceFrameToWorld"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReferenceFrameToObject"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "object"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxMoveImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxMoveImpulse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DynamicMotor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "CustomJointEvent"
			var BaseClass = "Event"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Owner"
					var Type = "CustomJoint"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Dt"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetOwner"
					var Description = ""
					var ReturnType = "CustomJoint"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOwner"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CustomJoint"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDt"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDt"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer3x2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer3x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Rune"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Value"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetValue"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Rune"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Rune"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ToolUiEvent"
			var BaseClass = "Event"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "NeedsPropertyGrid"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Parent"
					var Type = "Composite"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SelectTool"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetNeedsPropertyGrid"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNeedsPropertyGrid"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetParent"
					var Description = ""
					var ReturnType = "Composite"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSelectTool"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "JointMotor"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Reverse"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Speed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxImpulse"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AtomIds"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReverse"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReverse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSpeed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSpeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxImpulse"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxImpulse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAtomIds"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAtomIds"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "JointMotor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "VolumeNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Volume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Decibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "volume"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InterpolateDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "volumeDB"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "interpolationTime"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "HierarchySpline"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Spline"
					var Type = "Spline"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Closed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SplineType"
					var Type = "SplineType"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Error"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DebugDrawSpline"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SplineColor"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSpline"
					var Description = ""
					var ReturnType = "Spline"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetClosed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetClosed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSplineType"
					var Description = ""
					var ReturnType = "SplineType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSplineType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SplineType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetError"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetError"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDebugDrawSpline"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDebugDrawSpline"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSplineColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSplineColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RebuildIfModified"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ForceRebuild"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "HierarchySpline"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "QuerySpline"
					var Type = "SplineEvent"
					var Senders = Array
					{
						"HierarchySpline"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "SplineModified"
					var Type = "SplineEvent"
					var Senders = Array
					{
						"HierarchySpline"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Mouse"
			var BaseClass = "EventObject"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Cursor"
					var Type = "Cursor"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ClientPosition"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CursorMovement"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Trapped"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RawMovement"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCursor"
					var Description = ""
					var ReturnType = "Cursor"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCursor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cursor"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsButtonDown"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "button"
							var Type = "MouseButtons"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetClientPosition"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCursorMovement"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTrapped"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTrapped"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ToggleTrapped"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRawMovement"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRawMovement"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Boolean3x2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Real4x2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M30"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M31"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM30"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM30"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM31"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM31"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m30"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m31"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real4x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "EditorConfig"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "EditorConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "BoxParticleEmitter"
			var BaseClass = "ParticleEmitterShared"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "BoxParticleEmitter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ObjectLinkEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "NewCog"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OldCog"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EdgeId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetNewCog"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNewCog"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOldCog"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOldCog"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEdgeId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEdgeId"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "WindEffect"
			var BaseClass = "PhysicsEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalSpaceDirection"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WindSpeed"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WindDirection"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldWindDirection"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetWindSpeed"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWindSpeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWindDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWindDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldWindDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalSpaceDirection"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalSpaceDirection"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WindEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetUser"
			var BaseClass = "NetObject"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "NetUserId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "NetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "AddedByMyPeer"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OwnedNetObjects"
					var Type = "CogHashSetRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OwnedNetObjectCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetNetUserId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAddedByMyPeer"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddedByPeer"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "netPeerId"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindOwnedNetObjectByNameInSpace"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "space"
							var Type = "Space"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindOwnedNetObjectByName"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOwnedNetObjects"
					var Description = ""
					var ReturnType = "CogHashSetRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOwnedNetObjectCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReleaseOwnedNetObjects"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "NetUser"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "WheelJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LocalPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldPointB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisA"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalBasisB"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxisA"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LocalAxisB"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ShockAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldShockAxis"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLocalPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPoints"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "point"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldPointB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldPointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisA"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalBasisB"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalBasisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxisA"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxisA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLocalAxisB"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLocalAxisB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetShockAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetShockAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldShockAxis"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWorldShockAxis"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WheelJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DataResource"
			var BaseClass = "Resource"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DefaultGameSetup"
			var BaseClass = "Component"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "StartingSpace"
					var Type = "Archetype"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StartingLevel"
					var Type = "Level"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "LoadEditingLevel"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetStartingSpace"
					var Description = ""
					var ReturnType = "Archetype"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStartingSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Archetype"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStartingLevel"
					var Description = ""
					var ReturnType = "Level"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStartingLevel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Level"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLoadEditingLevel"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLoadEditingLevel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DefaultGameSetup"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Null"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Gizmo"
			var BaseClass = "Component"
			var Library = "EditorLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ForwardEventsToChildren"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EditingObject"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "MouseOver"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetForwardEventsToChildren"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetForwardEventsToChildren"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEditingObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMouseOver"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Gizmo"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "MouseEnterGizmo"
					var Type = "GizmoEvent"
					var Senders = Array
					{
						"Gizmo"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseEnterGizmoHierarchy"
					var Type = "GizmoEvent"
					var Senders = Array
					{
						"Gizmo"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseExitGizmo"
					var Type = "GizmoEvent"
					var Senders = Array
					{
						"Gizmo"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "MouseExitGizmoHierarchy"
					var Type = "GizmoEvent"
					var Senders = Array
					{
						"Gizmo"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Integer2x2"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer2x2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "DebugCapsule"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Start"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "End"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Radius"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStart"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStart"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEnd"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEnd"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRadius"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadius"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugCapsule"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugCapsule"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "start"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "end"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "radius"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugCapsule"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "axis"
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = "height"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "radius"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Byte"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "PositiveMax"
					var Type = "Byte"
					var Description = "The largest (most positive) value that can be represented by a Byte."
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "PositiveValueClosestToZero"
					var Type = "Byte"
					var Description = "The positive value closest to zero that can be represented by a Byte."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Parse"
					var Description = "Attempt to convert the given StringRange to a Byte. If parsing fails 0 is returned."
					var ReturnType = "Byte"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "StringRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveMax"
					var Description = ""
					var ReturnType = "Byte"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetPositiveValueClosestToZero"
					var Description = ""
					var ReturnType = "Byte"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "CollisionFilterBlock"
			var BaseClass = "SafeId32Object"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "BlockType"
					var Type = "CollisionFilterBlockType"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "SendEventsToA"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SendEventsToB"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SendEventsToSpace"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EventOverride"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetBlockType"
					var Description = ""
					var ReturnType = "CollisionFilterBlockType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSendEventsToA"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSendEventsToA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSendEventsToB"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSendEventsToB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSendEventsToSpace"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSendEventsToSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEventOverride"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEventOverride"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "TextureData"
			var BaseClass = ""
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Format"
					var Type = "TextureFormat"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Width"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Height"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "PixelCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetFormat"
					var Description = ""
					var ReturnType = "TextureFormat"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWidth"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHeight"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPixelCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "TextureData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "TextureFormat"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Type"
			var BaseClass = "ReflectionObject"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsHandle"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsValue"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsDelegate"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEnum"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsFlags"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEnumOrFlags"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsAny"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Library"
					var Type = "Library"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "IsA"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "baseType"
							var Type = "Type"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsCastableTo"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toType"
							var Type = "Type"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsRawCastableTo"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "toType"
							var Type = "Type"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsHandle"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsValue"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsDelegate"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEnum"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsFlags"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEnumOrFlags"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsAny"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLibrary"
					var Description = ""
					var ReturnType = "Library"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Zero"
			var BaseClass = ""
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Keyboard"
					var Type = "Keyboard"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Mouse"
					var Type = "Mouse"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Editor"
					var Type = "Editor"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Engine"
					var Type = "Engine"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Environment"
					var Type = "Environment"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Gamepads"
					var Type = "Gamepads"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Joysticks"
					var Type = "Joysticks"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ObjectStore"
					var Type = "ObjectStore"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ResourceSystem"
					var Type = "ResourceSystem"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "OsShell"
					var Type = "OsShell"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "Audio"
					var Type = "Audio"
					var Description = ""
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Connect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Object"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "delegate ()"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Disconnect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Object"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Object"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "DisconnectAll"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Object"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Object"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetKeyboard"
					var Description = ""
					var ReturnType = "Keyboard"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetMouse"
					var Description = ""
					var ReturnType = "Mouse"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetEditor"
					var Description = ""
					var ReturnType = "Editor"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetEngine"
					var Description = ""
					var ReturnType = "Engine"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetEnvironment"
					var Description = ""
					var ReturnType = "Environment"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetGamepads"
					var Description = ""
					var ReturnType = "Gamepads"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetJoysticks"
					var Description = ""
					var ReturnType = "Joysticks"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetObjectStore"
					var Description = ""
					var ReturnType = "ObjectStore"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetResourceSystem"
					var Description = ""
					var ReturnType = "ResourceSystem"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetOsShell"
					var Description = ""
					var ReturnType = "OsShell"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetAudio"
					var Description = ""
					var ReturnType = "Audio"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DebugTriangle"
			var BaseClass = ""
			var Library = "GeometryLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Color"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OnTop"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewAligned"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ViewScaleOffset"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Point0"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Point1"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Point2"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Filled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetColor"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetColor"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOnTop"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOnTop"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewAligned"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewAligned"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetViewScaleOffset"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetViewScaleOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPoint0"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPoint0"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPoint1"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPoint1"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPoint2"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPoint2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFilled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFilled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugTriangle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DebugTriangle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Material"
			var BaseClass = "DataResource"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SerializedList"
					var Type = "RenderGroupList"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ReferencedByList"
					var Type = "RenderGroupList"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CompositionLabel"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "RuntimeClone"
					var Description = ""
					var ReturnType = "Material"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSerializedList"
					var Description = ""
					var ReturnType = "RenderGroupList"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReferencedByList"
					var Description = ""
					var ReturnType = "RenderGroupList"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCompositionLabel"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "LightningLibraryResource"
			var BaseClass = "Resource"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MidiEvent"
			var BaseClass = "Event"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Channel"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MIDINumber"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Value"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetChannel"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetChannel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMIDINumber"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMIDINumber"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetHost"
			var BaseClass = "SafeId32"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "RoundTripTime"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Latency"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Network"
					var Type = "Network"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "BasicHostInfo"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ExtraHostInfo"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRoundTripTime"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetLatency"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNetwork"
					var Description = ""
					var ReturnType = "Network"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBasicHostInfo"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetExtraHostInfo"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetPropertyConfig"
			var BaseClass = "DataResource"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "BasicNetType"
					var Type = "BasicNetType"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseDeltaThreshold"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdInteger"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdDoubleInteger"
					var Type = "DoubleInteger"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdInteger2"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdInteger3"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdInteger4"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdReal"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdDoubleReal"
					var Type = "DoubleReal"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdReal2"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdReal3"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdReal4"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "DeltaThresholdQuaternion"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SerializationMode"
					var Type = "SerializationMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseHalfFloats"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseQuantization"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinInteger"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinDoubleInteger"
					var Type = "DoubleInteger"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinInteger2"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinInteger3"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinInteger4"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinReal"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinDoubleReal"
					var Type = "DoubleReal"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinReal2"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinReal3"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinReal4"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMinQuaternion"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxInteger"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxDoubleInteger"
					var Type = "DoubleInteger"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxInteger2"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxInteger3"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxInteger4"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxReal"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxDoubleReal"
					var Type = "DoubleReal"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxReal2"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxReal3"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxReal4"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "QuantizationRangeMaxQuaternion"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseInterpolation"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "InterpolationCurve"
					var Type = "CurveType"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SampleTimeOffset"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ExtrapolationLimit"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "UseConvergence"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "EventOnConvergenceStateChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ActiveConvergenceWeight"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "RestingConvergenceDuration"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ConvergenceInterval"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdInteger"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdDoubleInteger"
					var Type = "DoubleInteger"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdInteger2"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdInteger3"
					var Type = "Integer3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdInteger4"
					var Type = "Integer4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdReal"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdDoubleReal"
					var Type = "DoubleReal"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdReal2"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdReal3"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdReal4"
					var Type = "Real4"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "SnapThresholdQuaternion"
					var Type = "Quaternion"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetBasicNetType"
					var Description = ""
					var ReturnType = "BasicNetType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBasicNetType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "BasicNetType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseDeltaThreshold"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseDeltaThreshold"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdInteger"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdInteger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdDoubleInteger"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdDoubleInteger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdInteger2"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdInteger2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdInteger3"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdInteger3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdInteger4"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdInteger4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdReal"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdDoubleReal"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdDoubleReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdReal2"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdReal2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdReal3"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdReal3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdReal4"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdReal4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDeltaThresholdQuaternion"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetDeltaThresholdQuaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSerializationMode"
					var Description = ""
					var ReturnType = "SerializationMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSerializationMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "SerializationMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseHalfFloats"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseHalfFloats"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseQuantization"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseQuantization"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinInteger"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinInteger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinDoubleInteger"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinDoubleInteger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinInteger2"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinInteger2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinInteger3"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinInteger3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinInteger4"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinInteger4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinReal"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinDoubleReal"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinDoubleReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinReal2"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinReal2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinReal3"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinReal3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinReal4"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinReal4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMinQuaternion"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMinQuaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxInteger"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxInteger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxDoubleInteger"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxDoubleInteger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxInteger2"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxInteger2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxInteger3"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxInteger3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxInteger4"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxInteger4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxReal"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxDoubleReal"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxDoubleReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxReal2"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxReal2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxReal3"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxReal3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxReal4"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxReal4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetQuantizationRangeMaxQuaternion"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetQuantizationRangeMaxQuaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseInterpolation"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseInterpolation"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInterpolationCurve"
					var Description = ""
					var ReturnType = "CurveType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInterpolationCurve"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CurveType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSampleTimeOffset"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSampleTimeOffset"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetExtrapolationLimit"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetExtrapolationLimit"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUseConvergence"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUseConvergence"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEventOnConvergenceStateChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetEventOnConvergenceStateChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetActiveConvergenceWeight"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActiveConvergenceWeight"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRestingConvergenceDuration"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRestingConvergenceDuration"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetConvergenceInterval"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetConvergenceInterval"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdInteger"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdInteger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdDoubleInteger"
					var Description = ""
					var ReturnType = "DoubleInteger"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdDoubleInteger"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DoubleInteger"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdInteger2"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdInteger2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdInteger3"
					var Description = ""
					var ReturnType = "Integer3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdInteger3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdInteger4"
					var Description = ""
					var ReturnType = "Integer4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdInteger4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdReal"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdDoubleReal"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdDoubleReal"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdReal2"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdReal2"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdReal3"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdReal3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdReal4"
					var Description = ""
					var ReturnType = "Real4"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdReal4"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real4"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSnapThresholdQuaternion"
					var Description = ""
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSnapThresholdQuaternion"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Quaternion"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Animation"
			var BaseClass = "Resource"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Duration"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetDuration"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "EventBundle"
			var BaseClass = "Object"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "IsEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "GameSession"
					var Type = "GameSession"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetIsEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddEvent"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "event"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGameSession"
					var Description = ""
					var ReturnType = "GameSession"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetGameSession"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "GameSession"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetEvents"
					var Description = ""
					var ReturnType = "EventRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveEvent"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "event"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveEvent"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EventBundle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EventBundle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EventBundle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "GameSession"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EventBundle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "GameSession"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EventBundle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "EventBundle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Model"
			var BaseClass = "Graphical"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Mesh"
					var Type = "Mesh"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetMesh"
					var Description = ""
					var ReturnType = "Mesh"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMesh"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Mesh"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Model"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetPeerReceivedUserAddResponse"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirNetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurRequestBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirAddResponse"
					var Type = "NetUserAddResponse"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirResponseBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OurNetUserId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurRequestBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirAddResponse"
					var Description = ""
					var ReturnType = "NetUserAddResponse"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirResponseBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOurNetUserId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Area"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Origin"
					var Type = "Location"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TopLeft"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TopCenter"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TopRight"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CenterLeft"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Center"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CenterRight"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "BottomLeft"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "BottomCenter"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "BottomRight"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Size"
					var Type = "Real2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetOrigin"
					var Description = ""
					var ReturnType = "Location"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOrigin"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Location"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTopLeft"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTopCenter"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTopRight"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCenterLeft"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCenter"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCenterRight"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBottomLeft"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBottomCenter"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBottomRight"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSize"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "LocalOffsetOf"
					var Description = ""
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "location"
							var Type = "Location"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Area"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "AreaChanged"
					var Type = "AreaEvent"
					var Senders = Array
					{
						"Area"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ReactiveSpace"
			var BaseClass = "Component"
			var Library = "GameplayLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Over"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetOver"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReactiveSpace"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "EventData"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "EventData"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "HandleableEvent"
			var BaseClass = "Event"
			var Library = "WidgetLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Handled"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetHandled"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHandled"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ActionDelay"
			var BaseClass = "Action"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TimeLeft"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTimeLeft"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTimeLeft"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "MemberRange"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "MemberRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Current"
					var Type = "Member"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNotEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEmpty"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "MemberRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrent"
					var Description = ""
					var ReturnType = "Member"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNotEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEmpty"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MoveNext"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MemberRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MemberRange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "MemberRange"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Real2x3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Camera"
			var BaseClass = "Component"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "NearPlane"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FarPlane"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PerspectiveMode"
					var Type = "PerspectiveMode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "FieldOfView"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Size"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "CameraViewportCog"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldTranslation"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldDirection"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "WorldUp"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetNearPlane"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNearPlane"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFarPlane"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFarPlane"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPerspectiveMode"
					var Description = ""
					var ReturnType = "PerspectiveMode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPerspectiveMode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "PerspectiveMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFieldOfView"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFieldOfView"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetSize"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCameraViewportCog"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldTranslation"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldDirection"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldUp"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Camera"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PhysicsSolverConfig"
			var BaseClass = "DataResource"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Resource"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SolverIterationCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PositionIterationCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "VelocityRestitutionThreshold"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "PositionCorrectionType"
					var Type = "PhysicsSolverPositionCorrection"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSolverIterationCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSolverIterationCount"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPositionIterationCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPositionIterationCount"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetVelocityRestitutionThreshold"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetVelocityRestitutionThreshold"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPositionCorrectionType"
					var Description = ""
					var ReturnType = "PhysicsSolverPositionCorrection"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetPositionCorrectionType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "PhysicsSolverPositionCorrection"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PhysicsSolverConfig"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ParseEvent"
			var BaseClass = "EventData"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "BoundType"
			var BaseClass = "Type"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "BaseType"
					var Type = "BoundType"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TemplateBaseName"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsNative"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsTypeOrBaseNative"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Destructor"
					var Type = "Function"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "PreConstructor"
					var Type = "Function"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "GetterSetters"
					var Type = "GetterSetterRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Fields"
					var Type = "FieldRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Properties"
					var Type = "PropertyRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Functions"
					var Type = "FunctionRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Members"
					var Type = "MemberRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "DefaultConstructor"
					var Type = "Function"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetBaseType"
					var Description = ""
					var ReturnType = "BoundType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTemplateBaseName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsNative"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsTypeOrBaseNative"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDestructor"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPreConstructor"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InstantiatePreConstructedObject"
					var Description = ""
					var ReturnType = "T"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGetterSetters"
					var Description = ""
					var ReturnType = "GetterSetterRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFields"
					var Description = ""
					var ReturnType = "FieldRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProperties"
					var Description = ""
					var ReturnType = "PropertyRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFunctions"
					var Description = ""
					var ReturnType = "FunctionRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMembers"
					var Description = ""
					var ReturnType = "MemberRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDefaultConstructor"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGetterSetters"
					var Description = ""
					var ReturnType = "GetterSetterRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProperties"
					var Description = ""
					var ReturnType = "PropertyRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFields"
					var Description = ""
					var ReturnType = "FieldRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFunctions"
					var Description = ""
					var ReturnType = "FunctionRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFunctions"
					var Description = ""
					var ReturnType = "FunctionRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMembers"
					var Description = ""
					var ReturnType = "MemberRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGetterSetter"
					var Description = ""
					var ReturnType = "GetterSetter"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGetterSetter"
					var Description = ""
					var ReturnType = "GetterSetter"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetGetterSetter"
					var Description = ""
					var ReturnType = "GetterSetter"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "declaredType"
							var Type = "Type"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProperty"
					var Description = ""
					var ReturnType = "Property"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProperty"
					var Description = ""
					var ReturnType = "Property"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetProperty"
					var Description = ""
					var ReturnType = "Property"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "declaredType"
							var Type = "Type"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetField"
					var Description = ""
					var ReturnType = "Field"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetField"
					var Description = ""
					var ReturnType = "Field"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetField"
					var Description = ""
					var ReturnType = "Field"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "declaredType"
							var Type = "Type"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFunction"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFunction"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFunction"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "signatureType"
							var Type = "DelegateType"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMember"
					var Description = ""
					var ReturnType = "Member"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMember"
					var Description = ""
					var ReturnType = "Member"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMember"
					var Description = ""
					var ReturnType = "Member"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "declaredType"
							var Type = "Type"
							var Description = ""
						}
						Parameter
						{
							var Name = "options"
							var Type = "Members"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDefaultConstructor"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "inherited"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetConstructor"
					var Description = ""
					var ReturnType = "Function"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "signatureType"
							var Type = "DelegateType"
							var Description = ""
						}
						Parameter
						{
							var Name = "inherited"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "BuildEvent"
			var BaseClass = "EventData"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Random"
			var BaseClass = ""
			var Library = "Core"
			var Description = "Contains utility functions for random generation."
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Seed"
					var Type = "Integer"
					var Description = "The seed controls what random numbers are generated in a sequence (determanistically) The same seed will always generate the same string of random numbers."
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxInteger"
					var Type = "Integer"
					var Description = "Returns the max integer value that can be returned."
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSeed"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSeed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxInteger"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "Boolean"
					var Description = "Returns a random boolean value."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Integer"
					var Description = "Returns a random integer in the range of [0, MaxInt]."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real"
					var Description = "Returns a random real in the range [0,1]."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DoubleReal"
					var Description = "Returns a random double real in the range [0,1]."
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UnitReal2"
					var Description = "Generates a unit length Real2."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real2"
					var Description = "Randomly generates a Real2 with its length between min and max."
					var ReturnType = "Real2"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "minLength"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxLength"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "UnitReal3"
					var Description = "Generates a unit length Real3."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Real3"
					var Description = "Randomly generates a Real3 with its length between min and max."
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "minLength"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "maxLength"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Quaternion"
					var Description = "Random unit length quaternion. This is also a unit quaternion."
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RangeInclusiveMax"
					var Description = "Integer in the range [min, max)"
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RangeExclusiveMax"
					var Description = "Integer in the range [min, max]."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Range"
					var Description = "A random Real in the range [min,max]."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "min"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "max"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DoubleRange"
					var Description = ""
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Variance"
					var Description = "Integer in the range [base - variance, base + variance]."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "variance"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Variance"
					var Description = "Returns a number in the range [base - variance, base + variance]."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "base"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "variance"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Variance"
					var Description = "Integer in the range [base - variance, base + variance]."
					var ReturnType = "DoubleReal"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "DoubleReal"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DieRoll"
					var Description = "Randomly rolls a number in the range [1, sides]."
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "sides"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Probability"
					var Description = "Takes a given probability that we get a true value."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "probOfTrue"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CoinFlip"
					var Description = "Returns true if the coin flips heads."
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Rotation"
					var Description = "Random rotation quaternion. This is the same as calling Quaternion()"
					var ReturnType = "Quaternion"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "BellCurve"
					var Description = "Samples a bell curve with standard normal distribution in the range [0,1] This is equivalent to a Gaussian distribution with standard deviation of 1."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "BellCurve"
					var Description = "Samples a bell curve with in the range [center - range, center + range] This uses a standard deviation of 1."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "center"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "range"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "BellCurve"
					var Description = "Samples a bell curve in the range [center - range, center + range] with the given standard deviation. Around 68% will lie within the 1st standard deviation."
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "center"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "range"
							var Type = "Real"
							var Description = ""
						}
						Parameter
						{
							var Name = "standardDeviation"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Random"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Random"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "NetPeerReceivedUserAddRequest"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "TheirNetPeerId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirIpAddress"
					var Type = "IpAddress"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "TheirRequestBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ReturnOurAddResponse"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReturnOurResponseBundle"
					var Type = "EventBundle"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReturnTheirNetUser"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TheirNetUserId"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTheirNetPeerId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirIpAddress"
					var Description = ""
					var ReturnType = "IpAddress"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirRequestBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReturnOurAddResponse"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReturnOurAddResponse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReturnOurResponseBundle"
					var Description = ""
					var ReturnType = "EventBundle"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReturnOurResponseBundle"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "EventBundle"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReturnTheirNetUser"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReturnTheirNetUser"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTheirNetUserId"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ContactGraphEdge"
			var BaseClass = ""
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Object"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OtherObject"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsGhost"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ContactPointCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ContactPoints"
					var Type = "ContactPointRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "FirstPoint"
					var Type = "ContactPoint"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOtherObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsGhost"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContactPointCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContactPoints"
					var Description = ""
					var ReturnType = "ContactPointRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFirstPoint"
					var Description = ""
					var ReturnType = "ContactPoint"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ContactGraphEdge"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ContactGraphEdge"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "ContactGraphEdge"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ExpanderNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "InputGainDecibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ThresholdDecibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "AttackMillisec"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "ReleaseMillisec"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Ratio"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "OutputGainDecibels"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "KneeWidth"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetInputGainDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetInputGainDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetThresholdDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetThresholdDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAttackMillisec"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAttackMillisec"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReleaseMillisec"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetReleaseMillisec"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRatio"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRatio"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOutputGainDecibels"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetOutputGainDecibels"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetKneeWidth"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetKneeWidth"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SplineControlPoints"
			var BaseClass = "SafeId32Object"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "SplineControlPoint"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "SplineControlPoint"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Add"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "controlPoint"
							var Type = "SplineControlPoint"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "FileStream"
			var BaseClass = "IStream"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Close"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FileStream"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "filePath"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "mode"
							var Type = "FileMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FileStream"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FileStream"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "FileStream"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "CustomAudioNodeEvent"
			var BaseClass = "Event"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "SamplesNeeded"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSamplesNeeded"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetSamplesNeeded"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PulleyJoint"
			var BaseClass = "Joint"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Ratio"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "JointAPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "JointBPath"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "JointA"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "JointB"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRatio"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRatio"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJointAPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetJointAPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJointBPath"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetJointBPath"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJointA"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetJointA"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetJointB"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetJointB"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PulleyJoint"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Variable"
			var BaseClass = "ReflectionObject"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "SoundNode"
			var BaseClass = "ReferenceCountedEventObject"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "AutoCollapse"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "HasInputs"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "HasOutputs"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "InputCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OutputCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "BypassPercent"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "BypassValue"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "AddInputNode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "node"
							var Type = "SoundNode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InsertNodeAfter"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "node"
							var Type = "SoundNode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "InsertNodeBefore"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "node"
							var Type = "SoundNode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReplaceWith"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "node"
							var Type = "SoundNode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveInputNode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "node"
							var Type = "SoundNode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveAllInputs"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveAllOutputs"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "RemoveAndAttachInputsToOutputs"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAutoCollapse"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetAutoCollapse"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHasInputs"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetHasOutputs"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetInputCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOutputCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBypassPercent"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBypassPercent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetBypassValue"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBypassValue"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "AudioInterpolationDone"
					var Type = "SoundEvent"
					var Senders = Array
					{
						"SoundNode"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "SoundNodeDisconnected"
					var Type = "SoundEvent"
					var Senders = Array
					{
						"SoundNode"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "HeightMap"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Source"
					var Type = "HeightMapSource"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "UnitsPerPatch"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetSource"
					var Description = ""
					var ReturnType = "HeightMapSource"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetUnitsPerPatch"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetUnitsPerPatch"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "HeightMap"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "FilePath"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "DirectorySeparator"
					var Type = "String"
					var Description = "Gets the character(s) used for separating directories and files. This value is often different depending on the operating system (generally either '/' or '\\')
"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "WorkingDirectory"
					var Type = "String"
					var Description = "A directory that all relative paths start resolving from. In general the changing of the working directory is discouraged because it may affect assumptions of the host application. This will always include a directory separator at the end of the result.
"
					var ReadOnly = false
					var Static = true
				}
				Property
				{
					var Name = "TemporaryDirectory"
					var Type = "String"
					var Description = "Temporary files should be placed here. This will always include a directory separator at the end of the result.
"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "UserLocalDirectory"
					var Type = "String"
					var Description = "Application saved information should be placed here (read/write/create permissions should be allowed). This will always include a directory separator at the end of the result.
"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "UserDocumentsDirectory"
					var Type = "String"
					var Description = "User saved data that the user can backup or modify should be placed here (read/write/create permissions should be allowed). This will always include a directory separator at the end of the result.
"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ExecutableDirectory"
					var Type = "String"
					var Description = "The directory the executable lives with in (exe, elf...). This will always include a directory separator at the end of the result.
"
					var ReadOnly = true
					var Static = true
				}
				Property
				{
					var Name = "ExecutableFile"
					var Type = "String"
					var Description = "A path directly to the executable itself (exe, elf...).
"
					var ReadOnly = true
					var Static = true
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "CombineDirectories"
					var Description = "Combines directory paths and directories names together (empty entries are skipped). This will always include a directory separator at the end of the result.
Example: ('Content', 'Powerups') results in 'Content\\Powerups\\'
Example: ('Content\\', 'Powerups\\') results in 'Content\\Powerups\\'
Example: ('Content\\', '', 'Powerups') results in 'Content\\Powerups\\'
Example: ('C:\\Sandbox\\', 'Content') results in 'C:\\Sandbox\\Content\\'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "dir0"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir1"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CombineDirectories"
					var Description = "Combines directory paths and directories names together (empty entries are skipped). This will always include a directory separator at the end of the result.
Example: ('Content', 'Powerups') results in 'Content\\Powerups\\'
Example: ('Content\\', 'Powerups\\') results in 'Content\\Powerups\\'
Example: ('Content\\', '', 'Powerups') results in 'Content\\Powerups\\'
Example: ('C:\\Sandbox\\', 'Content') results in 'C:\\Sandbox\\Content\\'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "dir0"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir1"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir2"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CombineDirectories"
					var Description = "Combines directory paths and directories names together (empty entries are skipped). This will always include a directory separator at the end of the result.
Example: ('Content', 'Powerups') results in 'Content\\Powerups\\'
Example: ('Content\\', 'Powerups\\') results in 'Content\\Powerups\\'
Example: ('Content\\', '', 'Powerups') results in 'Content\\Powerups\\'
Example: ('C:\\Sandbox\\', 'Content') results in 'C:\\Sandbox\\Content\\'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "dir0"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir1"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir2"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir3"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CombineDirectories"
					var Description = "Combines directory paths and directories names together (empty entries are skipped). This will always include a directory separator at the end of the result.
Example: ('Content', 'Powerups') results in 'Content\\Powerups\\'
Example: ('Content\\', 'Powerups\\') results in 'Content\\Powerups\\'
Example: ('Content\\', '', 'Powerups') results in 'Content\\Powerups\\'
Example: ('C:\\Sandbox\\', 'Content') results in 'C:\\Sandbox\\Content\\'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "dir0"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir1"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir2"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir3"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir4"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CombineDirectoriesAndFile"
					var Description = "Combines directory paths, directories names, and a single file name together (empty entries are skipped). Because we are combining a file name at the end, this will not result in a trailing directory separator.
Example: ('Content\\Powerups\\', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('Content\\Powerups', '', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('Content', 'Powerups', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('C:\\Sandbox\\', 'Content\\Player.png') results in 'C:\\Sandbox\\Content\\Player.png'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "dir0"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "fileName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CombineDirectoriesAndFile"
					var Description = "Combines directory paths, directories names, and a single file name together (empty entries are skipped). Because we are combining a file name at the end, this will not result in a trailing directory separator.
Example: ('Content\\Powerups\\', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('Content\\Powerups', '', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('Content', 'Powerups', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('C:\\Sandbox\\', 'Content\\Player.png') results in 'C:\\Sandbox\\Content\\Player.png'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "dir0"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir1"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "fileName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CombineDirectoriesAndFile"
					var Description = "Combines directory paths, directories names, and a single file name together (empty entries are skipped). Because we are combining a file name at the end, this will not result in a trailing directory separator.
Example: ('Content\\Powerups\\', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('Content\\Powerups', '', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('Content', 'Powerups', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('C:\\Sandbox\\', 'Content\\Player.png') results in 'C:\\Sandbox\\Content\\Player.png'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "dir0"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir1"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir2"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "fileName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "CombineDirectoriesAndFile"
					var Description = "Combines directory paths, directories names, and a single file name together (empty entries are skipped). Because we are combining a file name at the end, this will not result in a trailing directory separator.
Example: ('Content\\Powerups\\', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('Content\\Powerups', '', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('Content', 'Powerups', 'Recharge.png') results in 'Content\\Powerups\\Recharge.png'
Example: ('C:\\Sandbox\\', 'Content\\Player.png') results in 'C:\\Sandbox\\Content\\Player.png'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "dir0"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir1"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir2"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "dir3"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "fileName"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDirectorySeparator"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "ChangeExtension"
					var Description = "Changes the extension of a path (with file name at the end) to a new extension. If the file has no extension, then this will automatically add the extension to the end. The extension is allowed to contain a leading dot '.' character (or not). The path is also allowed to contain a trailing dot '.' character (or not).
Example: ('Content\\Player.png', 'jpg') results in 'Content\\Player.jpg'
Example: ('Content\\Player', 'jpg') results in 'Content\\Player.jpg'
Example: ('Content\\Player.', '.jpg') results in 'Content\\Player.jpg'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetExtensionWithDot"
					var Description = "Returns only the extension of a file (everything after the last dot, including the dot). If the file has no extension then this will return an empty string.
Example: ('Content\\Player.png') results in '.png'
Example: ('Content\\Player.') results in ''
Example: ('Parent.Directory\\Log') results in ''
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetExtensionWithoutDot"
					var Description = "Returns only the extension of a file (everything after the last dot, not including the dot). If the file has no extension then this will return an empty string.
Example: ('Content\\Player.png') results in 'png'
Example: ('Content\\Player.') results in ''
Example: ('Parent.Directory\\Log') results in ''
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetFileNameWithExtension"
					var Description = "Returns only the file portion of a path (everything past the last separator including the extension).
Example: ('Content\\Player.png') results in 'Player.png'
Example: ('Content\\Powerups\\') results in ''
Example: ('Content\\Powerups') results in 'Powerups'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetFileNameWithoutExtension"
					var Description = "Returns only the file portion of a path (everything past the last separator excluding the extension).
Example: ('Content\\Player.png') results in 'Player'
Example: ('Content\\Powerups\\') results in ''
Example: ('Content\\Powerups') results in 'Powerups'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "AddTrailingDirectorySeparator"
					var Description = "Pass in a directory path with or without the separator and this will add it at the end (if needed).
Example: ('Content\\Powerups') results in 'Content\\Powerups\\'
Example: ('Content\\Powerups\\') results in 'Content\\Powerups\\'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "RemoveTrailingDirectorySeparator"
					var Description = "Pass in a directory path with or without the separator and this will remove it from the end (if needed).
Example: ('Content\\Powerups') results in 'Content\\Powerups'
Example: ('Content\\Powerups\\') results in 'Content\\Powerups'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDirectoryPath"
					var Description = "If a file path is passed in, this will return the parent directory. If a directory path is passed in (ending in a separator), this will return the directy back with no modifications. A directory path without a trailing separator is abiguous with a file that has no extension. This will always include a directory separator at the end of the result. In this case, we always assume it is a file and therefore get the parent directory's name.
Example: ('Content\\Powerups\\Recharge.png') results in 'Content\\Powerups\\'
Example: ('Content\\Powerups\\') results in 'Content\\Powerups\\'
Example: ('Content\\Powerups') results in 'Content\\'
Example: ('Content') results in ''
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetDirectoryName"
					var Description = "If a file path is passed in, this will return the name of the parent directory. If a directory path is passed in (ending in a separator), this will return the name of the directory. A directory path without a trailing separator is abiguous with a file that has no extension. In this case, we always assume it is a file and therefore get the parent directory's name.
Example: ('Content\\Powerups\\Recharge.png') results in 'Powerups'
Example: ('Content\\Powerups\\') results in 'Powerups'
Example: ('Content\\Powerups') results in 'Content'
Example: ('Content') results in ''
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCanonicalizedPathFromAbsolutePath"
					var Description = "Changes all directory separators to be the current operating system directory separator, removes duplicate separators, and removes '..' and '.' from the paths. Canonicalized is only guaranteed to work on absolute paths. This behavior is operating system dependent and may call the related OS functions.
Example: ('C:/Sandbox//Engine/../Content/./Player.png') results in 'C:\\Sandbox\\Content\\Player.png'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetComparablePathFromAbsolutePath"
					var Description = "First this normalizes the path, then if the operating system is case insensative, it will make the path all lowercase so that it compares.
Example: ('C:\\Sandbox\\Engine\\..\\Content\\.\\Player.png') results in 'c:\\sandbox\\content\\player.png'
"
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "IsRelative"
					var Description = "Returns true if a path has no root (such as a volume/hard drive specifier, or unix like systems a beginning slash). Even a beginning slash that means 'relative to the current working directory volume' is still relative. Empty paths will return that they are relative.
Example: ('C:\\Sandbox\\Engine\\..\\Content\\.\\Player.png') results in 'false'
Example: ('Sandbox') results in 'true'
Example: ('Content\\Powerups\\Recharge.png') results in 'true'
Example: ('/usr/Content/Player.png') results in 'false'
"
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetWorkingDirectory"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "SetWorkingDirectory"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetTemporaryDirectory"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetUserLocalDirectory"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetUserDocumentsDirectory"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetExecutableDirectory"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetExecutableFile"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "ReflectionObject"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "NetChannelPropertyChange"
			var BaseClass = "Event"
			var Library = "NetworkingLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Timestamp"
					var Type = "Real"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ReplicationPhase"
					var Type = "ReplicationPhase"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Direction"
					var Type = "TransmissionDirection"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Object"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ChannelName"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ComponentName"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "PropertyName"
					var Type = "String"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetTimestamp"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetReplicationPhase"
					var Description = ""
					var ReturnType = "ReplicationPhase"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetDirection"
					var Description = ""
					var ReturnType = "TransmissionDirection"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetChannelName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetComponentName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetPropertyName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "ParticleCollisionHeightmap"
			var BaseClass = "ParticleAnimator"
			var Library = "GraphicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "HeightMap"
					var Type = "CogPath"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Restitution"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Friction"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetHeightMap"
					var Description = ""
					var ReturnType = "CogPath"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetHeightMap"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "CogPath"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetRestitution"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRestitution"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetFriction"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetFriction"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ParticleCollisionHeightmap"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "SoundBuilder"
			var BaseClass = "BuilderComponent"
			var Library = "ContentMetaLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Name"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Streamed"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Normalize"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "MaxVolume"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetName"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetName"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStreamed"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStreamed"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetNormalize"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetNormalize"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetMaxVolume"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetMaxVolume"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "DebuggerEvent"
			var BaseClass = "EventData"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "AsyncProcessEvent"
			var BaseClass = "Event"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Bytes"
					var Type = "String"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "StreamType"
					var Type = "StreamType"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetBytes"
					var Description = ""
					var ReturnType = "String"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetBytes"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetStreamType"
					var Description = ""
					var ReturnType = "StreamType"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetStreamType"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "StreamType"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AsyncProcessEvent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "BaseCollisionEvent"
			var BaseClass = "Event"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Event"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Object"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "OtherObject"
					var Type = "Cog"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ContactPointCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsGhost"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "ContactPoints"
					var Type = "ContactPointRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetOtherObject"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContactPointCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsGhost"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetContactPoints"
					var Description = ""
					var ReturnType = "ContactPointRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Boolean3x3"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountX"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CountY"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "M00"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M01"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M02"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M10"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M11"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M12"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M20"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M21"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "M22"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetByIndex"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "x"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetByIndex"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "index"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Boolean3"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "y"
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = "value"
							var Type = "Boolean3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountX"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCountY"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = true
				}
				Method
				{
					var Name = "GetM00"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM00"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM01"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM01"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM02"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM02"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM10"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM10"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM11"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM11"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM12"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM12"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM20"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM20"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM21"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM21"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetM22"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetM22"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "m00"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m01"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m02"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m10"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m11"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m12"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m20"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m21"
							var Type = "Boolean"
							var Description = ""
						}
						Parameter
						{
							var Name = "m22"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Boolean3x3"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "MultiPrimitive"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "PhysicsMeshIndexData"
			var BaseClass = "SafeId32Object"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "All"
					var Type = "PhysicsMeshIndexRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "Count"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "Get"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Set"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Add"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Integer"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Clear"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAll"
					var Description = ""
					var ReturnType = "PhysicsMeshIndexRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "PointGravityEffect"
			var BaseClass = "BasicPointEffect"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
				Method
				{
					var Name = "PointGravityEffect"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "WindowLaunchSettings"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "LaunchFullscreen"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WindowedResolution"
					var Type = "Integer2"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetLaunchFullscreen"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetLaunchFullscreen"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWindowedResolution"
					var Description = ""
					var ReturnType = "Integer2"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWindowedResolution"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Integer2"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "WindowLaunchSettings"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Space"
			var BaseClass = "Cog"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ObjectCount"
					var Type = "Integer"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "CurrentLevel"
					var Type = "Level"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "IsEditorMode"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "AllObjects"
					var Type = "SpaceRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
				Property
				{
					var Name = "AllRootObjects"
					var Type = "HierarchyListRange"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetObjectCount"
					var Description = ""
					var ReturnType = "Integer"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Create"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "archetype"
							var Type = "Archetype"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateAtPosition"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "archetype"
							var Type = "Archetype"
							var Description = ""
						}
						Parameter
						{
							var Name = "position"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateLink"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "archetype"
							var Type = "Archetype"
							var Description = ""
						}
						Parameter
						{
							var Name = "objectA"
							var Type = "Cog"
							var Description = ""
						}
						Parameter
						{
							var Name = "objectB"
							var Type = "Cog"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "LoadLevel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "level"
							var Type = "Level"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "ReloadLevel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetCurrentLevel"
					var Description = ""
					var ReturnType = "Level"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AddObjectsFromLevel"
					var Description = ""
					var ReturnType = "Level"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "levelName"
							var Type = "Level"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindObjectByName"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindFirstObjectByName"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindLastObjectByName"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindFirstRootObjectByName"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindLastRootObjectByName"
					var Description = ""
					var ReturnType = "Cog"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "FindAllObjectsByName"
					var Description = ""
					var ReturnType = "CogNameRange"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "name"
							var Type = "String"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DestroyAll"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DestroyAllFromLevel"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetIsEditorMode"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MarkModified"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetModified"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "MarkNotModified"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAllObjects"
					var Description = ""
					var ReturnType = "SpaceRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetAllRootObjects"
					var Description = ""
					var ReturnType = "HierarchyListRange"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Space"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "LowPassNode"
			var BaseClass = "SoundNode"
			var Library = "SoundLibrary"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
				Property
				{
					var Name = "CutoffFrequency"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetCutoffFrequency"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetCutoffFrequency"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "EllipsoidCollider"
			var BaseClass = "Collider"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "Radii"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "WorldRadii"
					var Type = "Real3"
					var Description = ""
					var ReadOnly = true
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetRadii"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetRadii"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real3"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetWorldRadii"
					var Description = ""
					var ReturnType = "Real3"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "EllipsoidCollider"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "Region"
			var BaseClass = "Component"
			var Library = "PhysicsLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "WakeUpOnEffectChange"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetWakeUpOnEffectChange"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetWakeUpOnEffectChange"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "DispatchEvent"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "eventId"
							var Type = "String"
							var Description = ""
						}
						Parameter
						{
							var Name = "toSend"
							var Type = "Event"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Region"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = true
		}
		ClassDoc
		{
			var Name = "GetterSetter"
			var BaseClass = "Property"
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "Wrapper"
			var BaseClass = ""
			var Library = "Core"
			var Description = ""
			var Tags = Array
			{
			}
			var Properties = Array
			{
			}
			var Methods = Array
			{
			}
			var EventsSent = Array
			{
			}
			var ImportDocumentation = false
		}
		ClassDoc
		{
			var Name = "AnimationGraph"
			var BaseClass = "Component"
			var Library = "EngineLibrary"
			var Description = ""
			var Tags = Array
			{
				"Component"
			}
			var Properties = Array
			{
				Property
				{
					var Name = "ActiveNode"
					var Type = "AnimationNode"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "Active"
					var Type = "Boolean"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
				Property
				{
					var Name = "TimeScale"
					var Type = "Real"
					var Description = ""
					var ReadOnly = false
					var Static = false
				}
			}
			var Methods = Array
			{
				Method
				{
					var Name = "GetActiveNode"
					var Description = ""
					var ReturnType = "AnimationNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActiveNode"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "AnimationNode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "IsPlayingInGraph"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "animation"
							var Type = "Animation"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "PrintGraph"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "Update"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = ""
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetActive"
					var Description = ""
					var ReturnType = "Boolean"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetActive"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Boolean"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "GetTimeScale"
					var Description = ""
					var ReturnType = "Real"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "SetTimeScale"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "value"
							var Type = "Real"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateBasicNode"
					var Description = ""
					var ReturnType = "BasicAnimation"
					var Parameters = ""
					var ParameterList = Array
					{
						Parameter
						{
							var Name = "animation"
							var Type = "Animation"
							var Description = ""
						}
						Parameter
						{
							var Name = "mode"
							var Type = "AnimationPlayMode"
							var Description = ""
						}
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateDirectBlendNode"
					var Description = ""
					var ReturnType = "DirectBlend"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateCrossBlendNode"
					var Description = ""
					var ReturnType = "CrossBlend"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateSelectiveNode"
					var Description = ""
					var ReturnType = "SelectiveNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "CreateChainNode"
					var Description = ""
					var ReturnType = "ChainNode"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
				Method
				{
					var Name = "AnimationGraph"
					var Description = ""
					var ReturnType = "Void"
					var Parameters = ""
					var ParameterList = Array
					{
					}
					var PossibleExceptionThrows = Array
					{
					}
					var Static = false
				}
			}
			var EventsSent = Array
			{
				Object
				{
					var Name = "AnimationBlendEnded"
					var Type = "AnimationGraphEvent"
					var Senders = Array
					{
						"AnimationGraph"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "AnimationEnded"
					var Type = "AnimationGraphEvent"
					var Senders = Array
					{
						"AnimationGraph"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "AnimationLooped"
					var Type = "AnimationGraphEvent"
					var Senders = Array
					{
						"AnimationGraph"
					}
					var Listeners = Array
					{
					}
				}
				Object
				{
					var Name = "AnimationPostUpdate"
					var Type = "Event"
					var Senders = Array
					{
						"AnimationGraph"
					}
					var Listeners = Array
					{
					}
				}
			}
			var ImportDocumentation = true
		}
	}
	var Enums = Array
	{
		Object
		{
			var Name = "CollisionFilterCollisionFlags"
			var EnumValues = Map
			{
				Object
				{
					var key = "Resolve"
					var value = ""
				}
				Object
				{
					var key = "SkipDetection"
					var value = ""
				}
				Object
				{
					var key = "SkipResolution"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "GraphicalSortMethod"
			var EnumValues = Map
			{
				Object
				{
					var key = "BackToFrontView"
					var value = ""
				}
				Object
				{
					var key = "FrontToBackView"
					var value = ""
				}
				Object
				{
					var key = "GraphicalSortValue"
					var value = ""
				}
				Object
				{
					var key = "NegativeToPositiveX"
					var value = ""
				}
				Object
				{
					var key = "NegativeToPositiveY"
					var value = ""
				}
				Object
				{
					var key = "NegativeToPositiveZ"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "PositiveToNegativeX"
					var value = ""
				}
				Object
				{
					var key = "PositiveToNegativeY"
					var value = ""
				}
				Object
				{
					var key = "PositiveToNegativeZ"
					var value = ""
				}
				Object
				{
					var key = "SortEvent"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ImageImport"
			var EnumValues = Map
			{
				Object
				{
					var key = "Sprites"
					var value = ""
				}
				Object
				{
					var key = "Textures"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "AudioCueImport"
			var EnumValues = Map
			{
				Object
				{
					var key = "Grouped"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "PerSound"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "FlickedStick"
			var EnumValues = Map
			{
				Object
				{
					var key = "Left"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "Right"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TransportProtocol"
			var EnumValues = Map
			{
				Object
				{
					var key = "Tcp"
					var value = ""
				}
				Object
				{
					var key = "Udp"
					var value = ""
				}
				Object
				{
					var key = "Unspecified"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsEffectInterpolationType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Linear"
					var value = ""
				}
				Object
				{
					var key = "Quadratic"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpringSortOrder"
			var EnumValues = Map
			{
				Object
				{
					var key = "BottomUp"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "TopDown"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "JointTypes"
			var EnumValues = Map
			{
				Object
				{
					var key = "CustomJoint"
					var value = ""
				}
				Object
				{
					var key = "FixedAngleJoint"
					var value = ""
				}
				Object
				{
					var key = "GearJoint"
					var value = ""
				}
				Object
				{
					var key = "LinearAxisJoint"
					var value = ""
				}
				Object
				{
					var key = "ManipulatorJoint"
					var value = ""
				}
				Object
				{
					var key = "PhyGunJoint"
					var value = ""
				}
				Object
				{
					var key = "PositionJoint"
					var value = ""
				}
				Object
				{
					var key = "PrismaticJoint"
					var value = ""
				}
				Object
				{
					var key = "PrismaticJoint2d"
					var value = ""
				}
				Object
				{
					var key = "PulleyJoint"
					var value = ""
				}
				Object
				{
					var key = "RelativeVelocityJoint"
					var value = ""
				}
				Object
				{
					var key = "RevoluteJoint"
					var value = ""
				}
				Object
				{
					var key = "RevoluteJoint2d"
					var value = ""
				}
				Object
				{
					var key = "StickJoint"
					var value = ""
				}
				Object
				{
					var key = "UniversalJoint"
					var value = ""
				}
				Object
				{
					var key = "UprightJoint"
					var value = ""
				}
				Object
				{
					var key = "WeldJoint"
					var value = ""
				}
				Object
				{
					var key = "WheelJoint"
					var value = ""
				}
				Object
				{
					var key = "WheelJoint2d"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "GizmoSnapMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Relative"
					var value = ""
				}
				Object
				{
					var key = "WorldAxes"
					var value = ""
				}
				Object
				{
					var key = "WorldGrid"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpriteFill"
			var EnumValues = Map
			{
				Object
				{
					var key = "NineSlice"
					var value = ""
				}
				Object
				{
					var key = "Stretch"
					var value = ""
				}
				Object
				{
					var key = "Tiled"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "MultiConvexMeshDrawMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Edges"
					var value = ""
				}
				Object
				{
					var key = "Filled"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ConnectResponseMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Accept"
					var value = ""
				}
				Object
				{
					var key = "Custom"
					var value = ""
				}
				Object
				{
					var key = "Deny"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UiFocusDirection"
			var EnumValues = Map
			{
				Object
				{
					var key = "Backwards"
					var value = ""
				}
				Object
				{
					var key = "Forward"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "CapsuleScalingMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "PreserveHeight"
					var value = ""
				}
				Object
				{
					var key = "PreserveScale"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "GizmoPivot"
			var EnumValues = Map
			{
				Object
				{
					var key = "Average"
					var value = ""
				}
				Object
				{
					var key = "Center"
					var value = ""
				}
				Object
				{
					var key = "Primary"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "WindowStyleFlags"
			var EnumValues = Map
			{
				Object
				{
					var key = "ClientOnly"
					var value = ""
				}
				Object
				{
					var key = "Close"
					var value = ""
				}
				Object
				{
					var key = "MainWindow"
					var value = ""
				}
				Object
				{
					var key = "NotVisible"
					var value = ""
				}
				Object
				{
					var key = "OnTaskBar"
					var value = ""
				}
				Object
				{
					var key = "Resizable"
					var value = ""
				}
				Object
				{
					var key = "TitleBar"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "VerticalAlignment"
			var EnumValues = Map
			{
				Object
				{
					var key = "Bottom"
					var value = ""
				}
				Object
				{
					var key = "Center"
					var value = ""
				}
				Object
				{
					var key = "Top"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ConstraintPositionCorrection"
			var EnumValues = Map
			{
				Object
				{
					var key = "Baumgarte"
					var value = ""
				}
				Object
				{
					var key = "Inherit"
					var value = ""
				}
				Object
				{
					var key = "PostStabilization"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "NetRole"
			var EnumValues = Map
			{
				Object
				{
					var key = "Client"
					var value = ""
				}
				Object
				{
					var key = "MasterServer"
					var value = ""
				}
				Object
				{
					var key = "Offline"
					var value = ""
				}
				Object
				{
					var key = "Server"
					var value = ""
				}
				Object
				{
					var key = "Unspecified"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "StreamOrigin"
			var EnumValues = Map
			{
				Object
				{
					var key = "Current"
					var value = ""
				}
				Object
				{
					var key = "End"
					var value = ""
				}
				Object
				{
					var key = "Start"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Keys"
			var EnumValues = Map
			{
				Object
				{
					var key = "A"
					var value = ""
				}
				Object
				{
					var key = "Add"
					var value = ""
				}
				Object
				{
					var key = "Alt"
					var value = ""
				}
				Object
				{
					var key = "Apostrophe"
					var value = ""
				}
				Object
				{
					var key = "B"
					var value = ""
				}
				Object
				{
					var key = "Back"
					var value = ""
				}
				Object
				{
					var key = "Backslash"
					var value = ""
				}
				Object
				{
					var key = "C"
					var value = ""
				}
				Object
				{
					var key = "Capital"
					var value = ""
				}
				Object
				{
					var key = "Comma"
					var value = ""
				}
				Object
				{
					var key = "Control"
					var value = ""
				}
				Object
				{
					var key = "D"
					var value = ""
				}
				Object
				{
					var key = "Decimal"
					var value = ""
				}
				Object
				{
					var key = "Delete"
					var value = ""
				}
				Object
				{
					var key = "Divide"
					var value = ""
				}
				Object
				{
					var key = "Down"
					var value = ""
				}
				Object
				{
					var key = "E"
					var value = ""
				}
				Object
				{
					var key = "Eight"
					var value = ""
				}
				Object
				{
					var key = "End"
					var value = ""
				}
				Object
				{
					var key = "Enter"
					var value = ""
				}
				Object
				{
					var key = "Equal"
					var value = ""
				}
				Object
				{
					var key = "Escape"
					var value = ""
				}
				Object
				{
					var key = "F"
					var value = ""
				}
				Object
				{
					var key = "F1"
					var value = ""
				}
				Object
				{
					var key = "F10"
					var value = ""
				}
				Object
				{
					var key = "F11"
					var value = ""
				}
				Object
				{
					var key = "F12"
					var value = ""
				}
				Object
				{
					var key = "F2"
					var value = ""
				}
				Object
				{
					var key = "F3"
					var value = ""
				}
				Object
				{
					var key = "F4"
					var value = ""
				}
				Object
				{
					var key = "F5"
					var value = ""
				}
				Object
				{
					var key = "F6"
					var value = ""
				}
				Object
				{
					var key = "F7"
					var value = ""
				}
				Object
				{
					var key = "F8"
					var value = ""
				}
				Object
				{
					var key = "F9"
					var value = ""
				}
				Object
				{
					var key = "Five"
					var value = ""
				}
				Object
				{
					var key = "Four"
					var value = ""
				}
				Object
				{
					var key = "G"
					var value = ""
				}
				Object
				{
					var key = "H"
					var value = ""
				}
				Object
				{
					var key = "Home"
					var value = ""
				}
				Object
				{
					var key = "I"
					var value = ""
				}
				Object
				{
					var key = "J"
					var value = ""
				}
				Object
				{
					var key = "K"
					var value = ""
				}
				Object
				{
					var key = "L"
					var value = ""
				}
				Object
				{
					var key = "Left"
					var value = ""
				}
				Object
				{
					var key = "LeftBracket"
					var value = ""
				}
				Object
				{
					var key = "M"
					var value = ""
				}
				Object
				{
					var key = "Minus"
					var value = ""
				}
				Object
				{
					var key = "Multiply"
					var value = ""
				}
				Object
				{
					var key = "N"
					var value = ""
				}
				Object
				{
					var key = "Nine"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "NumPad0"
					var value = ""
				}
				Object
				{
					var key = "NumPad1"
					var value = ""
				}
				Object
				{
					var key = "NumPad2"
					var value = ""
				}
				Object
				{
					var key = "NumPad3"
					var value = ""
				}
				Object
				{
					var key = "NumPad4"
					var value = ""
				}
				Object
				{
					var key = "NumPad5"
					var value = ""
				}
				Object
				{
					var key = "NumPad6"
					var value = ""
				}
				Object
				{
					var key = "NumPad7"
					var value = ""
				}
				Object
				{
					var key = "NumPad8"
					var value = ""
				}
				Object
				{
					var key = "NumPad9"
					var value = ""
				}
				Object
				{
					var key = "O"
					var value = ""
				}
				Object
				{
					var key = "One"
					var value = ""
				}
				Object
				{
					var key = "P"
					var value = ""
				}
				Object
				{
					var key = "PageDown"
					var value = ""
				}
				Object
				{
					var key = "PageUp"
					var value = ""
				}
				Object
				{
					var key = "Period"
					var value = ""
				}
				Object
				{
					var key = "Q"
					var value = ""
				}
				Object
				{
					var key = "R"
					var value = ""
				}
				Object
				{
					var key = "Right"
					var value = ""
				}
				Object
				{
					var key = "RightBracket"
					var value = ""
				}
				Object
				{
					var key = "S"
					var value = ""
				}
				Object
				{
					var key = "Semicolon"
					var value = ""
				}
				Object
				{
					var key = "Seven"
					var value = ""
				}
				Object
				{
					var key = "Shift"
					var value = ""
				}
				Object
				{
					var key = "Six"
					var value = ""
				}
				Object
				{
					var key = "Slash"
					var value = ""
				}
				Object
				{
					var key = "Space"
					var value = ""
				}
				Object
				{
					var key = "Subtract"
					var value = ""
				}
				Object
				{
					var key = "T"
					var value = ""
				}
				Object
				{
					var key = "Tab"
					var value = ""
				}
				Object
				{
					var key = "Three"
					var value = ""
				}
				Object
				{
					var key = "Tilde"
					var value = ""
				}
				Object
				{
					var key = "Two"
					var value = ""
				}
				Object
				{
					var key = "U"
					var value = ""
				}
				Object
				{
					var key = "Unknown"
					var value = ""
				}
				Object
				{
					var key = "Up"
					var value = ""
				}
				Object
				{
					var key = "V"
					var value = ""
				}
				Object
				{
					var key = "W"
					var value = ""
				}
				Object
				{
					var key = "X"
					var value = ""
				}
				Object
				{
					var key = "Y"
					var value = ""
				}
				Object
				{
					var key = "Z"
					var value = ""
				}
				Object
				{
					var key = "Zero"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextureAddressing"
			var EnumValues = Map
			{
				Object
				{
					var key = "Clamp"
					var value = ""
				}
				Object
				{
					var key = "Mirror"
					var value = ""
				}
				Object
				{
					var key = "Repeat"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "StreamType"
			var EnumValues = Map
			{
				Object
				{
					var key = "StandardError"
					var value = ""
				}
				Object
				{
					var key = "StandardInput"
					var value = ""
				}
				Object
				{
					var key = "StandardOutput"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Location"
			var EnumValues = Map
			{
				Object
				{
					var key = "BottomCenter"
					var value = ""
				}
				Object
				{
					var key = "BottomLeft"
					var value = ""
				}
				Object
				{
					var key = "BottomRight"
					var value = ""
				}
				Object
				{
					var key = "Center"
					var value = ""
				}
				Object
				{
					var key = "CenterLeft"
					var value = ""
				}
				Object
				{
					var key = "CenterRight"
					var value = ""
				}
				Object
				{
					var key = "TopCenter"
					var value = ""
				}
				Object
				{
					var key = "TopLeft"
					var value = ""
				}
				Object
				{
					var key = "TopRight"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SplineAnimatorMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Exact"
					var value = ""
				}
				Object
				{
					var key = "Spring"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "GizmoGrab"
			var EnumValues = Map
			{
				Object
				{
					var key = "Hold"
					var value = ""
				}
				Object
				{
					var key = "Toggle"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "BlendMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Disabled"
					var value = ""
				}
				Object
				{
					var key = "Enabled"
					var value = ""
				}
				Object
				{
					var key = "Separate"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "VertexElementType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Byte"
					var value = ""
				}
				Object
				{
					var key = "Half"
					var value = ""
				}
				Object
				{
					var key = "NormByte"
					var value = ""
				}
				Object
				{
					var key = "NormShort"
					var value = ""
				}
				Object
				{
					var key = "Real"
					var value = ""
				}
				Object
				{
					var key = "Short"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "AudioMixTypes"
			var EnumValues = Map
			{
				Object
				{
					var key = "AutoDetect"
					var value = ""
				}
				Object
				{
					var key = "FiveOne"
					var value = ""
				}
				Object
				{
					var key = "Mono"
					var value = ""
				}
				Object
				{
					var key = "Quad"
					var value = ""
				}
				Object
				{
					var key = "SevenOne"
					var value = ""
				}
				Object
				{
					var key = "Stereo"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextureCompression"
			var EnumValues = Map
			{
				Object
				{
					var key = "BC1"
					var value = ""
				}
				Object
				{
					var key = "BC2"
					var value = ""
				}
				Object
				{
					var key = "BC3"
					var value = ""
				}
				Object
				{
					var key = "BC4"
					var value = ""
				}
				Object
				{
					var key = "BC5"
					var value = ""
				}
				Object
				{
					var key = "BC6"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "BlendEquation"
			var EnumValues = Map
			{
				Object
				{
					var key = "Add"
					var value = ""
				}
				Object
				{
					var key = "Max"
					var value = ""
				}
				Object
				{
					var key = "Min"
					var value = ""
				}
				Object
				{
					var key = "ReverseSubtract"
					var value = ""
				}
				Object
				{
					var key = "Subtract"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "GizmoBasis"
			var EnumValues = Map
			{
				Object
				{
					var key = "Local"
					var value = ""
				}
				Object
				{
					var key = "World"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpriteParticleGeometryMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Beam"
					var value = ""
				}
				Object
				{
					var key = "Billboarded"
					var value = ""
				}
				Object
				{
					var key = "FaceVelocity"
					var value = ""
				}
				Object
				{
					var key = "Flat"
					var value = ""
				}
				Object
				{
					var key = "Outward"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "NetRefreshResult"
			var EnumValues = Map
			{
				Object
				{
					var key = "DirectBasicHostInfo"
					var value = ""
				}
				Object
				{
					var key = "ExtraHostInfo"
					var value = ""
				}
				Object
				{
					var key = "IndirectBasicHostInfo"
					var value = ""
				}
				Object
				{
					var key = "NoResponse"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Network"
			var EnumValues = Map
			{
				Object
				{
					var key = "Internet"
					var value = ""
				}
				Object
				{
					var key = "LAN"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "CameraDragMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "NotActive"
					var value = ""
				}
				Object
				{
					var key = "Pan"
					var value = ""
				}
				Object
				{
					var key = "Rotation"
					var value = ""
				}
				Object
				{
					var key = "Zoom"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "NetUserAddResponse"
			var EnumValues = Map
			{
				Object
				{
					var key = "Accept"
					var value = ""
				}
				Object
				{
					var key = "Deny"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextureCompareMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Disabled"
					var value = ""
				}
				Object
				{
					var key = "Enabled"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsIslandPreProcessingMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "ColliderCount"
					var value = ""
				}
				Object
				{
					var key = "ConstraintCount"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TcpSocketBind"
			var EnumValues = Map
			{
				Object
				{
					var key = "Any"
					var value = ""
				}
				Object
				{
					var key = "Loopback"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "LinkState"
			var EnumValues = Map
			{
				Object
				{
					var key = "Connected"
					var value = ""
				}
				Object
				{
					var key = "Disconnected"
					var value = ""
				}
				Object
				{
					var key = "ReceivedConnectRequest"
					var value = ""
				}
				Object
				{
					var key = "ReceivedDisconnectNotice"
					var value = ""
				}
				Object
				{
					var key = "ReceivedNegativeConnectResponse"
					var value = ""
				}
				Object
				{
					var key = "SentConnectRequest"
					var value = ""
				}
				Object
				{
					var key = "SentDisconnectNotice"
					var value = ""
				}
				Object
				{
					var key = "SentNegativeConnectResponse"
					var value = ""
				}
				Object
				{
					var key = "Unspecified"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpriteSampling"
			var EnumValues = Map
			{
				Object
				{
					var key = "Linear"
					var value = ""
				}
				Object
				{
					var key = "Nearest"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "DockArea"
			var EnumValues = Map
			{
				Object
				{
					var key = "BotTool"
					var value = ""
				}
				Object
				{
					var key = "Bottom"
					var value = ""
				}
				Object
				{
					var key = "Center"
					var value = ""
				}
				Object
				{
					var key = "Count"
					var value = ""
				}
				Object
				{
					var key = "Floating"
					var value = ""
				}
				Object
				{
					var key = "Left"
					var value = ""
				}
				Object
				{
					var key = "Right"
					var value = ""
				}
				Object
				{
					var key = "Top"
					var value = ""
				}
				Object
				{
					var key = "TopTool"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextureFiltering"
			var EnumValues = Map
			{
				Object
				{
					var key = "Bilinear"
					var value = ""
				}
				Object
				{
					var key = "Nearest"
					var value = ""
				}
				Object
				{
					var key = "Trilinear"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "HeightTextureSelect"
			var EnumValues = Map
			{
				Object
				{
					var key = "Texture0"
					var value = ""
				}
				Object
				{
					var key = "Texture1"
					var value = ""
				}
				Object
				{
					var key = "Texture2"
					var value = ""
				}
				Object
				{
					var key = "Texture3"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsSolverPositionCorrection"
			var EnumValues = Map
			{
				Object
				{
					var key = "Baumgarte"
					var value = ""
				}
				Object
				{
					var key = "PostStabilization"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "AnimationBlendMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Auto"
					var value = ""
				}
				Object
				{
					var key = "Manual"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "MultiConvexMeshAutoComputeMethod"
			var EnumValues = Map
			{
				Object
				{
					var key = "MarchingSquares"
					var value = ""
				}
				Object
				{
					var key = "Pixels"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "CellIndexType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Absoulte"
					var value = ""
				}
				Object
				{
					var key = "Local"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ActionExecuteMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "FrameUpdate"
					var value = ""
				}
				Object
				{
					var key = "LogicUpdate"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Buttons"
			var EnumValues = Map
			{
				Object
				{
					var key = "A"
					var value = ""
				}
				Object
				{
					var key = "AnyButton"
					var value = ""
				}
				Object
				{
					var key = "B"
					var value = ""
				}
				Object
				{
					var key = "Back"
					var value = ""
				}
				Object
				{
					var key = "DpadDown"
					var value = ""
				}
				Object
				{
					var key = "DpadDownFiltered"
					var value = ""
				}
				Object
				{
					var key = "DpadLeft"
					var value = ""
				}
				Object
				{
					var key = "DpadLeftFiltered"
					var value = ""
				}
				Object
				{
					var key = "DpadRight"
					var value = ""
				}
				Object
				{
					var key = "DpadRightFiltered"
					var value = ""
				}
				Object
				{
					var key = "DpadUp"
					var value = ""
				}
				Object
				{
					var key = "DpadUpFiltered"
					var value = ""
				}
				Object
				{
					var key = "LeftShoulder"
					var value = ""
				}
				Object
				{
					var key = "LeftThumb"
					var value = ""
				}
				Object
				{
					var key = "RightShoulder"
					var value = ""
				}
				Object
				{
					var key = "RightThumb"
					var value = ""
				}
				Object
				{
					var key = "Start"
					var value = ""
				}
				Object
				{
					var key = "StickDown"
					var value = ""
				}
				Object
				{
					var key = "StickLeft"
					var value = ""
				}
				Object
				{
					var key = "StickRight"
					var value = ""
				}
				Object
				{
					var key = "StickUp"
					var value = ""
				}
				Object
				{
					var key = "X"
					var value = ""
				}
				Object
				{
					var key = "Y"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "BasicNetType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Boolean"
					var value = ""
				}
				Object
				{
					var key = "Boolean2"
					var value = ""
				}
				Object
				{
					var key = "Boolean3"
					var value = ""
				}
				Object
				{
					var key = "Boolean4"
					var value = ""
				}
				Object
				{
					var key = "Byte"
					var value = ""
				}
				Object
				{
					var key = "DoubleInteger"
					var value = ""
				}
				Object
				{
					var key = "DoubleReal"
					var value = ""
				}
				Object
				{
					var key = "Integer"
					var value = ""
				}
				Object
				{
					var key = "Integer2"
					var value = ""
				}
				Object
				{
					var key = "Integer3"
					var value = ""
				}
				Object
				{
					var key = "Integer4"
					var value = ""
				}
				Object
				{
					var key = "Other"
					var value = ""
				}
				Object
				{
					var key = "Quaternion"
					var value = ""
				}
				Object
				{
					var key = "Real"
					var value = ""
				}
				Object
				{
					var key = "Real2"
					var value = ""
				}
				Object
				{
					var key = "Real2x2"
					var value = ""
				}
				Object
				{
					var key = "Real3"
					var value = ""
				}
				Object
				{
					var key = "Real3x3"
					var value = ""
				}
				Object
				{
					var key = "Real4"
					var value = ""
				}
				Object
				{
					var key = "Real4x4"
					var value = ""
				}
				Object
				{
					var key = "String"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TrackType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Component"
					var value = ""
				}
				Object
				{
					var key = "Invalid"
					var value = ""
				}
				Object
				{
					var key = "Object"
					var value = ""
				}
				Object
				{
					var key = "Property"
					var value = ""
				}
				Object
				{
					var key = "SubProperty"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "GizmoDragMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Line"
					var value = ""
				}
				Object
				{
					var key = "Plane"
					var value = ""
				}
				Object
				{
					var key = "ViewPlane"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "CastFilterState"
			var EnumValues = Map
			{
				Object
				{
					var key = "Accept"
					var value = ""
				}
				Object
				{
					var key = "DefaultBehavior"
					var value = ""
				}
				Object
				{
					var key = "Reject"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "RouteMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Exclude"
					var value = ""
				}
				Object
				{
					var key = "Include"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsSolverType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Basic"
					var value = ""
				}
				Object
				{
					var key = "GenericBasic"
					var value = ""
				}
				Object
				{
					var key = "Normal"
					var value = ""
				}
				Object
				{
					var key = "Threaded"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SplineType"
			var EnumValues = Map
			{
				Object
				{
					var key = "BSpline"
					var value = ""
				}
				Object
				{
					var key = "CatmullRom"
					var value = ""
				}
				Object
				{
					var key = "Linear"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextureCompareFunc"
			var EnumValues = Map
			{
				Object
				{
					var key = "Always"
					var value = ""
				}
				Object
				{
					var key = "Equal"
					var value = ""
				}
				Object
				{
					var key = "Greater"
					var value = ""
				}
				Object
				{
					var key = "GreaterEqual"
					var value = ""
				}
				Object
				{
					var key = "Less"
					var value = ""
				}
				Object
				{
					var key = "LessEqual"
					var value = ""
				}
				Object
				{
					var key = "Never"
					var value = ""
				}
				Object
				{
					var key = "NotEqual"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpriteParticleAnimationMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Looping"
					var value = ""
				}
				Object
				{
					var key = "Single"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "StencilOp"
			var EnumValues = Map
			{
				Object
				{
					var key = "Decrement"
					var value = ""
				}
				Object
				{
					var key = "DecrementWrap"
					var value = ""
				}
				Object
				{
					var key = "Increment"
					var value = ""
				}
				Object
				{
					var key = "IncrementWrap"
					var value = ""
				}
				Object
				{
					var key = "Invert"
					var value = ""
				}
				Object
				{
					var key = "Keep"
					var value = ""
				}
				Object
				{
					var key = "Replace"
					var value = ""
				}
				Object
				{
					var key = "Zero"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ControlMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "FirstPerson"
					var value = ""
				}
				Object
				{
					var key = "Orbit"
					var value = ""
				}
				Object
				{
					var key = "ZPlane"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Ease"
			var EnumValues = Map
			{
				Object
				{
					var key = "Linear"
					var value = ""
				}
				Object
				{
					var key = "QuadIn"
					var value = ""
				}
				Object
				{
					var key = "QuadInOut"
					var value = ""
				}
				Object
				{
					var key = "QuadOut"
					var value = ""
				}
				Object
				{
					var key = "SinIn"
					var value = ""
				}
				Object
				{
					var key = "SinInOut"
					var value = ""
				}
				Object
				{
					var key = "SinOut"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Receipt"
			var EnumValues = Map
			{
				Object
				{
					var key = "ACK"
					var value = ""
				}
				Object
				{
					var key = "EXPIRED"
					var value = ""
				}
				Object
				{
					var key = "MAYBE"
					var value = ""
				}
				Object
				{
					var key = "NAK"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "InternetProtocol"
			var EnumValues = Map
			{
				Object
				{
					var key = "Both"
					var value = ""
				}
				Object
				{
					var key = "Unspecified"
					var value = ""
				}
				Object
				{
					var key = "V4"
					var value = ""
				}
				Object
				{
					var key = "V6"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ScaleConversion"
			var EnumValues = Map
			{
				Object
				{
					var key = "CentimeterToInches"
					var value = ""
				}
				Object
				{
					var key = "CentimeterToMeter"
					var value = ""
				}
				Object
				{
					var key = "Custom"
					var value = ""
				}
				Object
				{
					var key = "InchesToCentimenters"
					var value = ""
				}
				Object
				{
					var key = "InchesToMeters"
					var value = ""
				}
				Object
				{
					var key = "MetersToCentimeters"
					var value = ""
				}
				Object
				{
					var key = "MetersToInches"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "AudioLatency"
			var EnumValues = Map
			{
				Object
				{
					var key = "High"
					var value = ""
				}
				Object
				{
					var key = "Low"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "HorizontalAlignment"
			var EnumValues = Map
			{
				Object
				{
					var key = "Center"
					var value = ""
				}
				Object
				{
					var key = "Left"
					var value = ""
				}
				Object
				{
					var key = "Right"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UiSizePolicy"
			var EnumValues = Map
			{
				Object
				{
					var key = "Auto"
					var value = ""
				}
				Object
				{
					var key = "Fixed"
					var value = ""
				}
				Object
				{
					var key = "Flex"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "MeshImport"
			var EnumValues = Map
			{
				Object
				{
					var key = "MultiMesh"
					var value = ""
				}
				Object
				{
					var key = "NoMesh"
					var value = ""
				}
				Object
				{
					var key = "SingleMesh"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TransferMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Immediate"
					var value = ""
				}
				Object
				{
					var key = "Ordered"
					var value = ""
				}
				Object
				{
					var key = "Sequenced"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "KeyState"
			var EnumValues = Map
			{
				Object
				{
					var key = "Down"
					var value = ""
				}
				Object
				{
					var key = "Repeated"
					var value = ""
				}
				Object
				{
					var key = "Up"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "GeometryValue"
			var EnumValues = Map
			{
				Object
				{
					var key = "Albedo"
					var value = ""
				}
				Object
				{
					var key = "Depth"
					var value = ""
				}
				Object
				{
					var key = "Metallic"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "Normal"
					var value = ""
				}
				Object
				{
					var key = "Roughness"
					var value = ""
				}
				Object
				{
					var key = "Specular"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "BasisType"
			var EnumValues = Map
			{
				Object
				{
					var key = "NegativeX"
					var value = ""
				}
				Object
				{
					var key = "NegativeY"
					var value = ""
				}
				Object
				{
					var key = "NegativeZ"
					var value = ""
				}
				Object
				{
					var key = "PositiveX"
					var value = ""
				}
				Object
				{
					var key = "PositiveY"
					var value = ""
				}
				Object
				{
					var key = "PositiveZ"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpringDebugDrawMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Always"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "WhenNoMesh"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "AuthorityMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Dynamic"
					var value = ""
				}
				Object
				{
					var key = "Fixed"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsSolverSubType"
			var EnumValues = Map
			{
				Object
				{
					var key = "BasicSolving"
					var value = ""
				}
				Object
				{
					var key = "BlockSolving"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UiDockMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Bottom"
					var value = ""
				}
				Object
				{
					var key = "Left"
					var value = ""
				}
				Object
				{
					var key = "Right"
					var value = ""
				}
				Object
				{
					var key = "Top"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ConnectResponse"
			var EnumValues = Map
			{
				Object
				{
					var key = "Accept"
					var value = ""
				}
				Object
				{
					var key = "Deny"
					var value = ""
				}
				Object
				{
					var key = "DenyFull"
					var value = ""
				}
				Object
				{
					var key = "DenyTimeout"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpriteParticleSortMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "BackToFrontView"
					var value = ""
				}
				Object
				{
					var key = "FrontToBackView"
					var value = ""
				}
				Object
				{
					var key = "NegativeToPositiveX"
					var value = ""
				}
				Object
				{
					var key = "NegativeToPositiveY"
					var value = ""
				}
				Object
				{
					var key = "NegativeToPositiveZ"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "PositiveToNegativeX"
					var value = ""
				}
				Object
				{
					var key = "PositiveToNegativeY"
					var value = ""
				}
				Object
				{
					var key = "PositiveToNegativeZ"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsContactTangentTypes"
			var EnumValues = Map
			{
				Object
				{
					var key = "OrthonormalTangents"
					var value = ""
				}
				Object
				{
					var key = "RandomTangents"
					var value = ""
				}
				Object
				{
					var key = "VelocityTangents"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "MultiConvexMeshAutoComputeMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Alpha"
					var value = ""
				}
				Object
				{
					var key = "Intensity"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ShadowResolution"
			var EnumValues = Map
			{
				Object
				{
					var key = "High"
					var value = ""
				}
				Object
				{
					var key = "Low"
					var value = ""
				}
				Object
				{
					var key = "Medium"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "InputDevice"
			var EnumValues = Map
			{
				Object
				{
					var key = "Gamepad"
					var value = ""
				}
				Object
				{
					var key = "Joystick"
					var value = ""
				}
				Object
				{
					var key = "Keyboard"
					var value = ""
				}
				Object
				{
					var key = "Mouse"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "HeightTool"
			var EnumValues = Map
			{
				Object
				{
					var key = "CreateDestroy"
					var value = ""
				}
				Object
				{
					var key = "Flatten"
					var value = ""
				}
				Object
				{
					var key = "RaiseLower"
					var value = ""
				}
				Object
				{
					var key = "SmoothSharpen"
					var value = ""
				}
				Object
				{
					var key = "WeightPainter"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UiStackLayoutDirection"
			var EnumValues = Map
			{
				Object
				{
					var key = "BottomToTop"
					var value = ""
				}
				Object
				{
					var key = "LeftToRight"
					var value = ""
				}
				Object
				{
					var key = "RightToLeft"
					var value = ""
				}
				Object
				{
					var key = "TopToBottom"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TimeMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "ActualFrametime"
					var value = ""
				}
				Object
				{
					var key = "FixedFrametime"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "OrientationBases"
			var EnumValues = Map
			{
				Object
				{
					var key = "Custom"
					var value = ""
				}
				Object
				{
					var key = "ForwardNegativeZUpY"
					var value = ""
				}
				Object
				{
					var key = "ForwardXUpY"
					var value = ""
				}
				Object
				{
					var key = "ForwardXUpZ"
					var value = ""
				}
				Object
				{
					var key = "ForwardYUpZ"
					var value = ""
				}
				Object
				{
					var key = "ForwardZUpY"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Enum"
			var EnumValues = Map
			{
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextAlign"
			var EnumValues = Map
			{
				Object
				{
					var key = "Center"
					var value = ""
				}
				Object
				{
					var key = "Left"
					var value = ""
				}
				Object
				{
					var key = "Right"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextureType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Texture2D"
					var value = ""
				}
				Object
				{
					var key = "TextureCube"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TileEditor2DSubToolType"
			var EnumValues = Map
			{
				Object
				{
					var key = "DrawTool"
					var value = ""
				}
				Object
				{
					var key = "SelectionTool"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextureMipMapping"
			var EnumValues = Map
			{
				Object
				{
					var key = "GpuGenerated"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "PreGenerated"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "LoopingMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Default"
					var value = ""
				}
				Object
				{
					var key = "Looping"
					var value = ""
				}
				Object
				{
					var key = "Once"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UiVerticalAlignment"
			var EnumValues = Map
			{
				Object
				{
					var key = "Bottom"
					var value = ""
				}
				Object
				{
					var key = "Center"
					var value = ""
				}
				Object
				{
					var key = "Top"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ReliabilityMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Reliable"
					var value = ""
				}
				Object
				{
					var key = "Unreliable"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TimeDisplay"
			var EnumValues = Map
			{
				Object
				{
					var key = "Frames"
					var value = ""
				}
				Object
				{
					var key = "Timecodes"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "BlendFactor"
			var EnumValues = Map
			{
				Object
				{
					var key = "DestAlpha"
					var value = ""
				}
				Object
				{
					var key = "DestColor"
					var value = ""
				}
				Object
				{
					var key = "InvDestAlpha"
					var value = ""
				}
				Object
				{
					var key = "InvDestColor"
					var value = ""
				}
				Object
				{
					var key = "InvSourceAlpha"
					var value = ""
				}
				Object
				{
					var key = "InvSourceColor"
					var value = ""
				}
				Object
				{
					var key = "One"
					var value = ""
				}
				Object
				{
					var key = "SourceAlpha"
					var value = ""
				}
				Object
				{
					var key = "SourceAlphaSaturate"
					var value = ""
				}
				Object
				{
					var key = "SourceColor"
					var value = ""
				}
				Object
				{
					var key = "Zero"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TransmissionDirection"
			var EnumValues = Map
			{
				Object
				{
					var key = "Incoming"
					var value = ""
				}
				Object
				{
					var key = "Outgoing"
					var value = ""
				}
				Object
				{
					var key = "Unspecified"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ReplicationPhase"
			var EnumValues = Map
			{
				Object
				{
					var key = "Change"
					var value = ""
				}
				Object
				{
					var key = "Initialization"
					var value = ""
				}
				Object
				{
					var key = "Uninitialization"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextureAnisotropy"
			var EnumValues = Map
			{
				Object
				{
					var key = "x1"
					var value = ""
				}
				Object
				{
					var key = "x16"
					var value = ""
				}
				Object
				{
					var key = "x2"
					var value = ""
				}
				Object
				{
					var key = "x4"
					var value = ""
				}
				Object
				{
					var key = "x8"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsEffectEndCondition"
			var EnumValues = Map
			{
				Object
				{
					var key = "ClampToMax"
					var value = ""
				}
				Object
				{
					var key = "ContinueFalloff"
					var value = ""
				}
				Object
				{
					var key = "NoEffect"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextureFormat"
			var EnumValues = Map
			{
				Object
				{
					var key = "Depth16"
					var value = ""
				}
				Object
				{
					var key = "Depth24"
					var value = ""
				}
				Object
				{
					var key = "Depth24Stencil8"
					var value = ""
				}
				Object
				{
					var key = "Depth32"
					var value = ""
				}
				Object
				{
					var key = "Depth32f"
					var value = ""
				}
				Object
				{
					var key = "Depth32fStencil8Pad24"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "R16"
					var value = ""
				}
				Object
				{
					var key = "R16f"
					var value = ""
				}
				Object
				{
					var key = "R32f"
					var value = ""
				}
				Object
				{
					var key = "R8"
					var value = ""
				}
				Object
				{
					var key = "RG16"
					var value = ""
				}
				Object
				{
					var key = "RG16f"
					var value = ""
				}
				Object
				{
					var key = "RG32f"
					var value = ""
				}
				Object
				{
					var key = "RG8"
					var value = ""
				}
				Object
				{
					var key = "RGB16"
					var value = ""
				}
				Object
				{
					var key = "RGB16f"
					var value = ""
				}
				Object
				{
					var key = "RGB32f"
					var value = ""
				}
				Object
				{
					var key = "RGB8"
					var value = ""
				}
				Object
				{
					var key = "RGBA16"
					var value = ""
				}
				Object
				{
					var key = "RGBA16f"
					var value = ""
				}
				Object
				{
					var key = "RGBA32f"
					var value = ""
				}
				Object
				{
					var key = "RGBA8"
					var value = ""
				}
				Object
				{
					var key = "SRGB8"
					var value = ""
				}
				Object
				{
					var key = "SRGB8A8"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Cursor"
			var EnumValues = Map
			{
				Object
				{
					var key = "Arrow"
					var value = ""
				}
				Object
				{
					var key = "Cross"
					var value = ""
				}
				Object
				{
					var key = "Hand"
					var value = ""
				}
				Object
				{
					var key = "Invisible"
					var value = ""
				}
				Object
				{
					var key = "SizeAll"
					var value = ""
				}
				Object
				{
					var key = "SizeNESW"
					var value = ""
				}
				Object
				{
					var key = "SizeNS"
					var value = ""
				}
				Object
				{
					var key = "SizeNWSE"
					var value = ""
				}
				Object
				{
					var key = "SizeWE"
					var value = ""
				}
				Object
				{
					var key = "TextBeam"
					var value = ""
				}
				Object
				{
					var key = "Wait"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsIslandType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Composites"
					var value = ""
				}
				Object
				{
					var key = "ForcedOne"
					var value = ""
				}
				Object
				{
					var key = "Kinematics"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UpdateMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "TranslateRoot"
					var value = ""
				}
				Object
				{
					var key = "TranslateSelf"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "FalloffCurveType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Custom"
					var value = ""
				}
				Object
				{
					var key = "Linear"
					var value = ""
				}
				Object
				{
					var key = "Log"
					var value = ""
				}
				Object
				{
					var key = "Sine"
					var value = ""
				}
				Object
				{
					var key = "SquareRoot"
					var value = ""
				}
				Object
				{
					var key = "Squared"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SoundPlayMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Looping"
					var value = ""
				}
				Object
				{
					var key = "Single"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PerspectiveMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Orthographic"
					var value = ""
				}
				Object
				{
					var key = "Perspective"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PlayGameOptions"
			var EnumValues = Map
			{
				Object
				{
					var key = "MultipleInstances"
					var value = ""
				}
				Object
				{
					var key = "SingleInstance"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsEffectType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Buoyancy"
					var value = ""
				}
				Object
				{
					var key = "Custom"
					var value = ""
				}
				Object
				{
					var key = "Drag"
					var value = ""
				}
				Object
				{
					var key = "Flow"
					var value = ""
				}
				Object
				{
					var key = "Force"
					var value = ""
				}
				Object
				{
					var key = "Gravity"
					var value = ""
				}
				Object
				{
					var key = "Invalid"
					var value = ""
				}
				Object
				{
					var key = "PointForce"
					var value = ""
				}
				Object
				{
					var key = "PointGravity"
					var value = ""
				}
				Object
				{
					var key = "Thrust"
					var value = ""
				}
				Object
				{
					var key = "Torque"
					var value = ""
				}
				Object
				{
					var key = "Vortex"
					var value = ""
				}
				Object
				{
					var key = "Wind"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "MultiConvexMeshSnappingMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Always"
					var value = ""
				}
				Object
				{
					var key = "IfClose"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PrimitiveType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Lines"
					var value = ""
				}
				Object
				{
					var key = "Points"
					var value = ""
				}
				Object
				{
					var key = "Triangles"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ConvergenceState"
			var EnumValues = Map
			{
				Object
				{
					var key = "Active"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "Resting"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Mode2DStates"
			var EnumValues = Map
			{
				Object
				{
					var key = "InheritFromSpace"
					var value = ""
				}
				Object
				{
					var key = "Mode2D"
					var value = ""
				}
				Object
				{
					var key = "Mode3D"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpringDebugDrawType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Normal"
					var value = ""
				}
				Object
				{
					var key = "Sorted"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsImport"
			var EnumValues = Map
			{
				Object
				{
					var key = "ConvexMesh"
					var value = ""
				}
				Object
				{
					var key = "NoMesh"
					var value = ""
				}
				Object
				{
					var key = "StaticMesh"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UiHighlightColorOp"
			var EnumValues = Map
			{
				Object
				{
					var key = "Add"
					var value = ""
				}
				Object
				{
					var key = "Multiply"
					var value = ""
				}
				Object
				{
					var key = "Set"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "CogPathPreference"
			var EnumValues = Map
			{
				Object
				{
					var key = "Absolute"
					var value = ""
				}
				Object
				{
					var key = "CogRelative"
					var value = ""
				}
				Object
				{
					var key = "SpaceRelative"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ViewportScaling"
			var EnumValues = Map
			{
				Object
				{
					var key = "Exact"
					var value = ""
				}
				Object
				{
					var key = "Fill"
					var value = ""
				}
				Object
				{
					var key = "LargestMultiple"
					var value = ""
				}
				Object
				{
					var key = "Letterbox"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "JointFrameOfReference"
			var EnumValues = Map
			{
				Object
				{
					var key = "ObjectA"
					var value = ""
				}
				Object
				{
					var key = "ObjectB"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "DisconnectReason"
			var EnumValues = Map
			{
				Object
				{
					var key = "Latency"
					var value = ""
				}
				Object
				{
					var key = "Request"
					var value = ""
				}
				Object
				{
					var key = "Timeout"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "WebBrowserModifiers"
			var EnumValues = Map
			{
				Object
				{
					var key = "Alt"
					var value = ""
				}
				Object
				{
					var key = "CapsLock"
					var value = ""
				}
				Object
				{
					var key = "Command"
					var value = ""
				}
				Object
				{
					var key = "Control"
					var value = ""
				}
				Object
				{
					var key = "IsKeyPad"
					var value = ""
				}
				Object
				{
					var key = "IsLeft"
					var value = ""
				}
				Object
				{
					var key = "IsRight"
					var value = ""
				}
				Object
				{
					var key = "LeftMouse"
					var value = ""
				}
				Object
				{
					var key = "MiddleMouse"
					var value = ""
				}
				Object
				{
					var key = "NumLock"
					var value = ""
				}
				Object
				{
					var key = "RightMouse"
					var value = ""
				}
				Object
				{
					var key = "Shift"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "AnimationBlendType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Normalized"
					var value = ""
				}
				Object
				{
					var key = "Standard"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SoundSelectMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Random"
					var value = ""
				}
				Object
				{
					var key = "Sequential"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "WindowState"
			var EnumValues = Map
			{
				Object
				{
					var key = "Fullscreen"
					var value = ""
				}
				Object
				{
					var key = "Maximized"
					var value = ""
				}
				Object
				{
					var key = "Minimized"
					var value = ""
				}
				Object
				{
					var key = "Restore"
					var value = ""
				}
				Object
				{
					var key = "Windowed"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UiHorizontalAlignment"
			var EnumValues = Map
			{
				Object
				{
					var key = "Center"
					var value = ""
				}
				Object
				{
					var key = "Left"
					var value = ""
				}
				Object
				{
					var key = "Right"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpriteGeometryMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "ViewPlane"
					var value = ""
				}
				Object
				{
					var key = "ZPlane"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "MeshEmitMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Edge"
					var value = ""
				}
				Object
				{
					var key = "Face"
					var value = ""
				}
				Object
				{
					var key = "Vertex"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "CollisionFilterBlockType"
			var EnumValues = Map
			{
				Object
				{
					var key = "CollisionEndedBlock"
					var value = ""
				}
				Object
				{
					var key = "CollisionPersistedBlock"
					var value = ""
				}
				Object
				{
					var key = "CollisionStartedBlock"
					var value = ""
				}
				Object
				{
					var key = "PreSolveBlock"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "DepthMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Disabled"
					var value = ""
				}
				Object
				{
					var key = "Read"
					var value = ""
				}
				Object
				{
					var key = "Write"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "PhysicsMeshType"
			var EnumValues = Map
			{
				Object
				{
					var key = "ConvexMesh"
					var value = ""
				}
				Object
				{
					var key = "PhysicsMesh"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UiHighlightColorMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Hierarchy"
					var value = ""
				}
				Object
				{
					var key = "Local"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "MouseButtons"
			var EnumValues = Map
			{
				Object
				{
					var key = "Left"
					var value = ""
				}
				Object
				{
					var key = "Middle"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "Right"
					var value = ""
				}
				Object
				{
					var key = "XOneBack"
					var value = ""
				}
				Object
				{
					var key = "XTwoForward"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Authority"
			var EnumValues = Map
			{
				Object
				{
					var key = "Client"
					var value = ""
				}
				Object
				{
					var key = "Server"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ActionState"
			var EnumValues = Map
			{
				Object
				{
					var key = "Completed"
					var value = ""
				}
				Object
				{
					var key = "Running"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "StencilMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Disabled"
					var value = ""
				}
				Object
				{
					var key = "Enabled"
					var value = ""
				}
				Object
				{
					var key = "Separate"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ArrowHeadType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Arrow"
					var value = ""
				}
				Object
				{
					var key = "Cube"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SerializationMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "All"
					var value = ""
				}
				Object
				{
					var key = "Changed"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "DetectionMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Assume"
					var value = ""
				}
				Object
				{
					var key = "Automatic"
					var value = ""
				}
				Object
				{
					var key = "Manual"
					var value = ""
				}
				Object
				{
					var key = "Manumatic"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "EditorMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Mode2D"
					var value = ""
				}
				Object
				{
					var key = "Mode3D"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "CullMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "BackFace"
					var value = ""
				}
				Object
				{
					var key = "Disabled"
					var value = ""
				}
				Object
				{
					var key = "FrontFace"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SendsEvents"
			var EnumValues = Map
			{
				Object
				{
					var key = "False"
					var value = ""
				}
				Object
				{
					var key = "True"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "LauncherAutoRunMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "IfInstalled"
					var value = ""
				}
				Object
				{
					var key = "InstallAndRun"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "GizmoGrabMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Hold"
					var value = ""
				}
				Object
				{
					var key = "Toggle"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpriteOrigin"
			var EnumValues = Map
			{
				Object
				{
					var key = "BottomCenter"
					var value = ""
				}
				Object
				{
					var key = "BottomLeft"
					var value = ""
				}
				Object
				{
					var key = "Center"
					var value = ""
				}
				Object
				{
					var key = "Custom"
					var value = ""
				}
				Object
				{
					var key = "UpperLeft"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Placement"
			var EnumValues = Map
			{
				Object
				{
					var key = "CameraLocation"
					var value = ""
				}
				Object
				{
					var key = "LookAtPlane"
					var value = ""
				}
				Object
				{
					var key = "LookAtPoint"
					var value = ""
				}
				Object
				{
					var key = "OnTop"
					var value = ""
				}
				Object
				{
					var key = "PlaneXY"
					var value = ""
				}
				Object
				{
					var key = "ViewAtDepth"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SpringSubTools"
			var EnumValues = Map
			{
				Object
				{
					var key = "Anchoring"
					var value = ""
				}
				Object
				{
					var key = "PointSelector"
					var value = ""
				}
				Object
				{
					var key = "RopeCreator"
					var value = ""
				}
				Object
				{
					var key = "SpringCreator"
					var value = ""
				}
				Object
				{
					var key = "SpringSelector"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SystemSpace"
			var EnumValues = Map
			{
				Object
				{
					var key = "LocalSpace"
					var value = ""
				}
				Object
				{
					var key = "WorldSpace"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TextureFace"
			var EnumValues = Map
			{
				Object
				{
					var key = "NegativeX"
					var value = ""
				}
				Object
				{
					var key = "NegativeY"
					var value = ""
				}
				Object
				{
					var key = "NegativeZ"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "PositiveX"
					var value = ""
				}
				Object
				{
					var key = "PositiveY"
					var value = ""
				}
				Object
				{
					var key = "PositiveZ"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "LinkStatus"
			var EnumValues = Map
			{
				Object
				{
					var key = "AttemptingConnection"
					var value = ""
				}
				Object
				{
					var key = "Connected"
					var value = ""
				}
				Object
				{
					var key = "Disconnected"
					var value = ""
				}
				Object
				{
					var key = "Unspecified"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "RigidBodyDynamicState"
			var EnumValues = Map
			{
				Object
				{
					var key = "Dynamic"
					var value = ""
				}
				Object
				{
					var key = "Kinematic"
					var value = ""
				}
				Object
				{
					var key = "Static"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ImportMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "FitToPatches"
					var value = ""
				}
				Object
				{
					var key = "MaintainAspectRatio"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "SynthWaveType"
			var EnumValues = Map
			{
				Object
				{
					var key = "Noise"
					var value = ""
				}
				Object
				{
					var key = "SawWave"
					var value = ""
				}
				Object
				{
					var key = "SineWave"
					var value = ""
				}
				Object
				{
					var key = "SquareWave"
					var value = ""
				}
				Object
				{
					var key = "TriangleWave"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "JointToolTypes"
			var EnumValues = Map
			{
				Object
				{
					var key = "FixedAngleJoint"
					var value = ""
				}
				Object
				{
					var key = "GearJoint"
					var value = ""
				}
				Object
				{
					var key = "LinearAxisJoint"
					var value = ""
				}
				Object
				{
					var key = "ObjectLink"
					var value = ""
				}
				Object
				{
					var key = "PositionJoint"
					var value = ""
				}
				Object
				{
					var key = "PrismaticJoint"
					var value = ""
				}
				Object
				{
					var key = "PrismaticJoint2d"
					var value = ""
				}
				Object
				{
					var key = "PulleyJoint"
					var value = ""
				}
				Object
				{
					var key = "RevoluteJoint"
					var value = ""
				}
				Object
				{
					var key = "RevoluteJoint2d"
					var value = ""
				}
				Object
				{
					var key = "StickJoint"
					var value = ""
				}
				Object
				{
					var key = "UniversalJoint"
					var value = ""
				}
				Object
				{
					var key = "UprightJoint"
					var value = ""
				}
				Object
				{
					var key = "WeldJoint"
					var value = ""
				}
				Object
				{
					var key = "WheelJoint"
					var value = ""
				}
				Object
				{
					var key = "WheelJoint2d"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Verbosity"
			var EnumValues = Map
			{
				Object
				{
					var key = "Detailed"
					var value = ""
				}
				Object
				{
					var key = "Minimal"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "ConflictAction"
			var EnumValues = Map
			{
				Object
				{
					var key = "Replace"
					var value = ""
				}
				Object
				{
					var key = "Skip"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "TabWidth"
			var EnumValues = Map
			{
				Object
				{
					var key = "FourSpaces"
					var value = ""
				}
				Object
				{
					var key = "TwoSpaces"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "AnimationPlayMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Loop"
					var value = ""
				}
				Object
				{
					var key = "Pingpong"
					var value = ""
				}
				Object
				{
					var key = "PlayOnce"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UserConnectResponse"
			var EnumValues = Map
			{
				Object
				{
					var key = "Accept"
					var value = ""
				}
				Object
				{
					var key = "Deny"
					var value = ""
				}
				Object
				{
					var key = "Pending"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "AxisDirection"
			var EnumValues = Map
			{
				Object
				{
					var key = "X"
					var value = ""
				}
				Object
				{
					var key = "Y"
					var value = ""
				}
				Object
				{
					var key = "Z"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "StoreResult"
			var EnumValues = Map
			{
				Object
				{
					var key = "Added"
					var value = ""
				}
				Object
				{
					var key = "Failed"
					var value = ""
				}
				Object
				{
					var key = "Replaced"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "VertexSemantic"
			var EnumValues = Map
			{
				Object
				{
					var key = "Aux0"
					var value = ""
				}
				Object
				{
					var key = "Aux1"
					var value = ""
				}
				Object
				{
					var key = "Aux2"
					var value = ""
				}
				Object
				{
					var key = "Aux3"
					var value = ""
				}
				Object
				{
					var key = "Aux4"
					var value = ""
				}
				Object
				{
					var key = "Aux5"
					var value = ""
				}
				Object
				{
					var key = "Bitangent"
					var value = ""
				}
				Object
				{
					var key = "BoneIndices"
					var value = ""
				}
				Object
				{
					var key = "BoneWeights"
					var value = ""
				}
				Object
				{
					var key = "Color"
					var value = ""
				}
				Object
				{
					var key = "ColorAux"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "Normal"
					var value = ""
				}
				Object
				{
					var key = "Position"
					var value = ""
				}
				Object
				{
					var key = "Tangent"
					var value = ""
				}
				Object
				{
					var key = "Uv"
					var value = ""
				}
				Object
				{
					var key = "UvAux"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "UiHighlightMouseMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Enter"
					var value = ""
				}
				Object
				{
					var key = "EnterHierarchy"
					var value = ""
				}
				Object
				{
					var key = "Hover"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "CurveType"
			var EnumValues = Map
			{
				Object
				{
					var key = "BSpline"
					var value = ""
				}
				Object
				{
					var key = "CatmullRom"
					var value = ""
				}
				Object
				{
					var key = "Linear"
					var value = ""
				}
			}
			var Description = ""
		}
	}
	var Flags = Array
	{
		Object
		{
			var Name = "StreamCapabilities"
			var EnumValues = Map
			{
				Object
				{
					var key = "GetCount"
					var value = ""
				}
				Object
				{
					var key = "None"
					var value = ""
				}
				Object
				{
					var key = "Read"
					var value = ""
				}
				Object
				{
					var key = "Seek"
					var value = ""
				}
				Object
				{
					var key = "SetCount"
					var value = ""
				}
				Object
				{
					var key = "Write"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "Members"
			var EnumValues = Map
			{
				Object
				{
					var key = "All"
					var value = ""
				}
				Object
				{
					var key = "Extension"
					var value = ""
				}
				Object
				{
					var key = "Inherited"
					var value = ""
				}
				Object
				{
					var key = "InheritedInstance"
					var value = ""
				}
				Object
				{
					var key = "InheritedInstanceStatic"
					var value = ""
				}
				Object
				{
					var key = "InheritedStatic"
					var value = ""
				}
				Object
				{
					var key = "Instance"
					var value = ""
				}
				Object
				{
					var key = "InstanceStatic"
					var value = ""
				}
				Object
				{
					var key = "Static"
					var value = ""
				}
			}
			var Description = ""
		}
		Object
		{
			var Name = "FileMode"
			var EnumValues = Map
			{
				Object
				{
					var key = "Append"
					var value = ""
				}
				Object
				{
					var key = "Read"
					var value = ""
				}
				Object
				{
					var key = "Sequential"
					var value = ""
				}
				Object
				{
					var key = "ShareDelete"
					var value = ""
				}
				Object
				{
					var key = "ShareRead"
					var value = ""
				}
				Object
				{
					var key = "ShareWrite"
					var value = ""
				}
				Object
				{
					var key = "Write"
					var value = ""
				}
			}
			var Description = ""
		}
	}
}
